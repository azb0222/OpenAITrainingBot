{"docstore/metadata": {"2ee1ade7-dc00-473b-9e05-031b3fc885ac": {"doc_hash": "0aa90a9eae4547e0c6ec8aa03108b9faf2884c0449d7f7cea749d4e83bfe11b8"}, "d1344782-2028-445b-86d4-0af423d864d7": {"doc_hash": "14c1c88243750b5821398a1d8b868e1eb873558a3d2f5612460770f536f92212"}, "669aca35-bf45-4a75-853d-90ce4c1125a2": {"doc_hash": "4252e003682da640e52bea628709860f6eda5e6351b5853e50ece3aacb5fe5f3", "ref_doc_id": "2ee1ade7-dc00-473b-9e05-031b3fc885ac"}, "925b7df1-7530-48fc-832e-c173679085f3": {"doc_hash": "21167d94228497124ee07e7d8405a1a871ff1fc8c70db5963034959245d6a987", "ref_doc_id": "2ee1ade7-dc00-473b-9e05-031b3fc885ac"}, "f25096e9-5c2e-464e-a50c-8934a3405421": {"doc_hash": "27368c7de8d879367908293ce6266097145063a5e9854d6fa129e3dcd103416d", "ref_doc_id": "2ee1ade7-dc00-473b-9e05-031b3fc885ac"}, "630452fb-9a6a-4f6d-bc94-aeaf902419d4": {"doc_hash": "c48466f65f69c76c7d3c5b27a364937901d4fa277125e0a26919242a964fdb44", "ref_doc_id": "2ee1ade7-dc00-473b-9e05-031b3fc885ac"}, "dd2aabf3-31b7-486d-a1bc-8a9125a84838": {"doc_hash": "a4b6ca146ee0178c5a8e10e206005207e0ff5e96a270b6909d607a308025a142", "ref_doc_id": "d1344782-2028-445b-86d4-0af423d864d7"}, "6991bd28-77ee-4758-a9e0-f2b0737c162c": {"doc_hash": "31271622ecb264ddc10bdb6e9632bc14614b2efe884b20409fd72705c5a22d71", "ref_doc_id": "d1344782-2028-445b-86d4-0af423d864d7"}, "2e0e4755-14ef-465c-819a-e86283dbcf0f": {"doc_hash": "ef69619e03d800d40e64505a6684349614093e43779fcd725139cf8c137f0070", "ref_doc_id": "d1344782-2028-445b-86d4-0af423d864d7"}, "621c7b40-a6c8-4fcc-bc61-5a5cbaff574b": {"doc_hash": "dd023ac01faa00a816881ea686387c095f9bf0de8802259f1dfe3d3aee9fcfa1", "ref_doc_id": "d1344782-2028-445b-86d4-0af423d864d7"}}, "docstore/data": {"669aca35-bf45-4a75-853d-90ce4c1125a2": {"__data__": {"id_": "669aca35-bf45-4a75-853d-90ce4c1125a2", "embedding": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ee1ade7-dc00-473b-9e05-031b3fc885ac", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "hash": "0aa90a9eae4547e0c6ec8aa03108b9faf2884c0449d7f7cea749d4e83bfe11b8"}, "3": {"node_id": "925b7df1-7530-48fc-832e-c173679085f3", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "hash": "21167d94228497124ee07e7d8405a1a871ff1fc8c70db5963034959245d6a987"}}, "hash": "4252e003682da640e52bea628709860f6eda5e6351b5853e50ece3aacb5fe5f3", "text": "Swan Quickstart\nWatch a video of this tutorial\n\nThe Swan Development Board is a fully-featured board that provides access to the rich feature set of the onboard STM32L4 chip. We selected the STMicroelectronics chip because of its industry-leading technology, as well as its rich tooling and developer experience.\n\nAll together, the Swan empowers all developers, from IoT newcomers to industry experts.\n\nThis guide will help you start developing on the Swan with Arduino, using PlatformIO.\n\nUsing the VS Code PlatformIO Extension\n\nUsing PlatformIO with VS Code is a friction-free way of getting started with Swan development due to the relatively few configuration steps required.\n\nThose who already have STM32CubeIDE or Arduino IDE installed may prefer to follow the guides on Using STM32CubeIDE with Swan or Using Arduino IDE with Swan instead.\n\nInstall Prerequisites\nLinux only setup required for accessing the device in DFU mode and virtual COM port.\n\nInstall Visual Studio Code (if you haven't done so already).\n\nInstall the PlatformIO IDE extension via the Extensions menu of VS Code.\n\nNote that all other requirements like STM32duino, OpenOCD, and dfu-util will be installed automatically by PlatformIO when needed!\n\nCreate a Project\n\nOpen the PlatformIO extension by clicking on the PlatformIO logo in the menu bar. Next, click the \"Open\" option under the \"PIO Home\" menu and finally \"New Project\" to create a new PlatformIO project.\n\nIn the provided Project Wizard, give your project a name, choose the \"Blues Wireless Swan R5\" as your board, and choose \"Arduino Framework\" as your framework. You can also override the default location where your project files will be saved.\n\nAt this point, PlatformIO may need to install a variety of software dependencies. Please be patient as installation may take some time!\n\nOnce dependency installation is complete, your platformio.ini file will open. This file allows you", "start_char_idx": 0, "end_char_idx": 1920, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "925b7df1-7530-48fc-832e-c173679085f3": {"__data__": {"id_": "925b7df1-7530-48fc-832e-c173679085f3", "embedding": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ee1ade7-dc00-473b-9e05-031b3fc885ac", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "hash": "0aa90a9eae4547e0c6ec8aa03108b9faf2884c0449d7f7cea749d4e83bfe11b8"}, "2": {"node_id": "669aca35-bf45-4a75-853d-90ce4c1125a2", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "hash": "4252e003682da640e52bea628709860f6eda5e6351b5853e50ece3aacb5fe5f3"}, "3": {"node_id": "f25096e9-5c2e-464e-a50c-8934a3405421", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "hash": "27368c7de8d879367908293ce6266097145063a5e9854d6fa129e3dcd103416d"}}, "hash": "21167d94228497124ee07e7d8405a1a871ff1fc8c70db5963034959245d6a987", "text": "dependency installation is complete, your platformio.ini file will open. This file allows you to configure deployment options and manage project libraries. Consult the PlatformIO documentation for complete details.\n\nTo develop on the Swan with the Notecard, replace your generated platform.ini file with this:\n\nCOPY\n[env:bw_swan_r5]\nplatform = ststm32\nboard = bw_swan_r5\nupload_protocol = dfu\nframework = arduino\nbuild_flags = -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC\nmonitor_speed = 115200\nlib_deps =\n  Wire\n  blues/Blues Wireless Notecard@^1.4.1\nWarning\n\nThe above configuration assumes you're connecting to your Swan via USB. If you instead intend to debug your Swan using an STLink programmer like the STLINK-V3MINI, you'll need to set your upload_protocol to stlink instead.\n\nFlash Firmware\n\nTo program Swan, it is recommended you use a programmer like the STLINK-V3MINI. However, you may also program Swan via a USB cable connected directly from it to your computer.\n\nProgramming Swan with the STLINK-V3MINI (Recommended)\n\nIn your platformio.ini file, set upload_protocol to stlink.\n\nPlug the STLINK-V3MINI into your computer over USB.\n\nPlug the Swan into a power source (e.g. a LiPo battery or your computer via USB to use the serial monitor).\n\nPlug the Cortex-Debug connector from the STLINK-V3MINI into the Swan.\n\nSkip to the Blink the Onboard LED instructions below.\n\nProgramming Swan without the STLINK-V3MINI\n\nIn your platformio.ini file, set upload_protocol to dfu.\n\nConnect the Swan's Micro USB port to your computer with a USB cable.\n\nPress and", "start_char_idx": 1840, "end_char_idx": 3394, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f25096e9-5c2e-464e-a50c-8934a3405421": {"__data__": {"id_": "f25096e9-5c2e-464e-a50c-8934a3405421", "embedding": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ee1ade7-dc00-473b-9e05-031b3fc885ac", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "hash": "0aa90a9eae4547e0c6ec8aa03108b9faf2884c0449d7f7cea749d4e83bfe11b8"}, "2": {"node_id": "925b7df1-7530-48fc-832e-c173679085f3", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "hash": "21167d94228497124ee07e7d8405a1a871ff1fc8c70db5963034959245d6a987"}, "3": {"node_id": "630452fb-9a6a-4f6d-bc94-aeaf902419d4", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "hash": "c48466f65f69c76c7d3c5b27a364937901d4fa277125e0a26919242a964fdb44"}}, "hash": "27368c7de8d879367908293ce6266097145063a5e9854d6fa129e3dcd103416d", "text": "the Swan's Micro USB port to your computer with a USB cable.\n\nPress and hold the BOOT button on the Swan, press and release RESET, then release BOOT to cause the Swan to jump into its bootloader. IMPORTANT: This sequence must be performed each time you want to upload new firmware to the Swan!\n\nProceed to the Blink the Onboard LED instructions below.\n\nBlink the Onboard LED\n\nIn VS Code, open the src/main.cpp file in your PlatformIO project.\n\nOverwrite the provided boilerplate code with the following to cause the onboard LED to blink repeatedly:\n\nCOPY\n#include <Arduino.h>\n\n// the setup function runs once when you press reset or power the board\nvoid setup()\n{\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n\n// the loop function runs over and over again forever\nvoid loop()\n{\n  digitalWrite(LED_BUILTIN, HIGH); // turn the LED on (HIGH is the voltage level)\n  delay(1000);                     // wait for a second\n  digitalWrite(LED_BUILTIN, LOW);  // turn the LED off by making the voltage LOW\n  delay(1000);                     // wait for a second\n}\n\nPress F1 or shift + cmd/ctrl + P to open the VS Code Command Pallette. Choose \"PlatformIO: Build\" to build the program or \"PlatformIO: Upload\" to build and upload the program to your Swan.\n\nWarning\n\nDid your firmware upload fail with a libusb error? This is not specific to Swan, but rather with programming any STM32 board.\n\nWindows: Install a generic USB driver that supports libusb. Download Zadig to install \"WinUSB\" and consult this article for more", "start_char_idx": 3417, "end_char_idx": 4970, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "630452fb-9a6a-4f6d-bc94-aeaf902419d4": {"__data__": {"id_": "630452fb-9a6a-4f6d-bc94-aeaf902419d4", "embedding": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ee1ade7-dc00-473b-9e05-031b3fc885ac", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "hash": "0aa90a9eae4547e0c6ec8aa03108b9faf2884c0449d7f7cea749d4e83bfe11b8"}, "2": {"node_id": "f25096e9-5c2e-464e-a50c-8934a3405421", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}, "hash": "27368c7de8d879367908293ce6266097145063a5e9854d6fa129e3dcd103416d"}}, "hash": "c48466f65f69c76c7d3c5b27a364937901d4fa277125e0a26919242a964fdb44", "text": "libusb. Download Zadig to install \"WinUSB\" and consult this article for more information.\n\nmacOS on Apple Silicon (M1/M2): The appropriate libusb package must be installed for the M1/M2 architecture:\n\nInstall via MacPorts with port install libusb\n\nInstall via Homebrew with brew install libusb, noting that the libusb package from Homebrew also requires Rosetta.\n\nLastly, you can open the PlatformIO Serial Monitor by clicking on the appropriate icon on the bottom menu in VS Code. Note that when the serial monitor opens, you may need to choose the device you are connecting to (this will vary depending on your OS and whether you are using the dfu or stlink upload_protocol).\n\nDebugging with PlatformIO\n\nThe PlatformIO documentation includes a helpful set of resources for debugging an STM32. Please note that an STLink programmer like the STLINK-V3MINI is required for debugging with Swan.\n\nNext Steps\n\nCongratulations! You've configured your Swan and flashed new firmware to it using VS Code, PlatformIO, and Arduino.\n\nIf you're following the Blues Quickstart, next we recommend building your first IoT app:\n\nUse the Notecard to Send Data\nSet Up Your Microcontroller\nBuild Your First IoT App With Blues\nSend Data to Your Cloud\n\nAt any time, if you find yourself stuck, please reach out on the community forum.\n\nCan we improve this page? Send us feedback", "start_char_idx": 4953, "end_char_idx": 6310, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "dd2aabf3-31b7-486d-a1bc-8a9125a84838": {"__data__": {"id_": "dd2aabf3-31b7-486d-a1bc-8a9125a84838", "embedding": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1344782-2028-445b-86d4-0af423d864d7", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "hash": "14c1c88243750b5821398a1d8b868e1eb873558a3d2f5612460770f536f92212"}, "3": {"node_id": "6991bd28-77ee-4758-a9e0-f2b0737c162c", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "hash": "31271622ecb264ddc10bdb6e9632bc14614b2efe884b20409fd72705c5a22d71"}}, "hash": "a4b6ca146ee0178c5a8e10e206005207e0ff5e96a270b6909d607a308025a142", "text": "Swan Quickstart\nWatch a video of this tutorial\n\nThe Swan Development Board is a fully-featured board that provides access to the rich feature set of the onboard STM32L4 chip. We selected the STMicroelectronics chip because of its industry-leading technology, as well as its rich tooling and developer experience.\n\nAll together, the Swan empowers all developers, from IoT newcomers to industry experts.\n\nThis guide will help you start developing on the Swan with Arduino, using PlatformIO.\n\nUsing the VS Code PlatformIO Extension\n\nUsing PlatformIO with VS Code is a friction-free way of getting started with Swan development due to the relatively few configuration steps required.\n\nThose who already have STM32CubeIDE or Arduino IDE installed may prefer to follow the guides on Using STM32CubeIDE with Swan or Using Arduino IDE with Swan instead.\n\nInstall Prerequisites\nLinux only setup required for accessing the device in DFU mode and virtual COM port.\n\nInstall Visual Studio Code (if you haven't done so already).\n\nInstall the PlatformIO IDE extension via the Extensions menu of VS Code.\n\nNote that all other requirements like STM32duino, OpenOCD, and dfu-util will be installed automatically by PlatformIO when needed!\n\nCreate a Project\n\nOpen the PlatformIO extension by clicking on the PlatformIO logo in the menu bar. Next, click the \"Open\" option under the \"PIO Home\" menu and finally \"New Project\" to create a new PlatformIO project.\n\nIn the provided Project Wizard, give your project a name, choose the \"Blues Wireless Swan R5\" as your board, and choose \"Arduino Framework\" as your framework. You can also override the default location where your project files will be saved.\n\nAt this point, PlatformIO may need to install a variety of software dependencies. Please be patient as installation may take some time!\n\nOnce dependency installation is complete, your platformio.ini file will open. This file allows you", "start_char_idx": 0, "end_char_idx": 1920, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6991bd28-77ee-4758-a9e0-f2b0737c162c": {"__data__": {"id_": "6991bd28-77ee-4758-a9e0-f2b0737c162c", "embedding": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1344782-2028-445b-86d4-0af423d864d7", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "hash": "14c1c88243750b5821398a1d8b868e1eb873558a3d2f5612460770f536f92212"}, "2": {"node_id": "dd2aabf3-31b7-486d-a1bc-8a9125a84838", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "hash": "a4b6ca146ee0178c5a8e10e206005207e0ff5e96a270b6909d607a308025a142"}, "3": {"node_id": "2e0e4755-14ef-465c-819a-e86283dbcf0f", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "hash": "ef69619e03d800d40e64505a6684349614093e43779fcd725139cf8c137f0070"}}, "hash": "31271622ecb264ddc10bdb6e9632bc14614b2efe884b20409fd72705c5a22d71", "text": "dependency installation is complete, your platformio.ini file will open. This file allows you to configure deployment options and manage project libraries. Consult the PlatformIO documentation for complete details.\n\nTo develop on the Swan with the Notecard, replace your generated platform.ini file with this:\n\nCOPY\n[env:bw_swan_r5]\nplatform = ststm32\nboard = bw_swan_r5\nupload_protocol = dfu\nframework = arduino\nbuild_flags = -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC\nmonitor_speed = 115200\nlib_deps =\n  Wire\n  blues/Blues Wireless Notecard@^1.4.1\nWarning\n\nThe above configuration assumes you're connecting to your Swan via USB. If you instead intend to debug your Swan using an STLink programmer like the STLINK-V3MINI, you'll need to set your upload_protocol to stlink instead.\n\nFlash Firmware\n\nTo program Swan, it is recommended you use a programmer like the STLINK-V3MINI. However, you may also program Swan via a USB cable connected directly from it to your computer.\n\nProgramming Swan with the STLINK-V3MINI (Recommended)\n\nIn your platformio.ini file, set upload_protocol to stlink.\n\nPlug the STLINK-V3MINI into your computer over USB.\n\nPlug the Swan into a power source (e.g. a LiPo battery or your computer via USB to use the serial monitor).\n\nPlug the Cortex-Debug connector from the STLINK-V3MINI into the Swan.\n\nSkip to the Blink the Onboard LED instructions below.\n\nProgramming Swan without the STLINK-V3MINI\n\nIn your platformio.ini file, set upload_protocol to dfu.\n\nConnect the Swan's Micro USB port to your computer with a USB cable.\n\nPress and", "start_char_idx": 1840, "end_char_idx": 3394, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "2e0e4755-14ef-465c-819a-e86283dbcf0f": {"__data__": {"id_": "2e0e4755-14ef-465c-819a-e86283dbcf0f", "embedding": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1344782-2028-445b-86d4-0af423d864d7", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "hash": "14c1c88243750b5821398a1d8b868e1eb873558a3d2f5612460770f536f92212"}, "2": {"node_id": "6991bd28-77ee-4758-a9e0-f2b0737c162c", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "hash": "31271622ecb264ddc10bdb6e9632bc14614b2efe884b20409fd72705c5a22d71"}, "3": {"node_id": "621c7b40-a6c8-4fcc-bc61-5a5cbaff574b", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "hash": "dd023ac01faa00a816881ea686387c095f9bf0de8802259f1dfe3d3aee9fcfa1"}}, "hash": "ef69619e03d800d40e64505a6684349614093e43779fcd725139cf8c137f0070", "text": "the Swan's Micro USB port to your computer with a USB cable.\n\nPress and hold the BOOT button on the Swan, press and release RESET, then release BOOT to cause the Swan to jump into its bootloader. IMPORTANT: This sequence must be performed each time you want to upload new firmware to the Swan!\n\nProceed to the Blink the Onboard LED instructions below.\n\nBlink the Onboard LED\n\nIn VS Code, open the src/main.cpp file in your PlatformIO project.\n\nOverwrite the provided boilerplate code with the following to cause the onboard LED to blink repeatedly:\n\nCOPY\n#include <Arduino.h>\n\n// the setup function runs once when you press reset or power the board\nvoid setup()\n{\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n\n// the loop function runs over and over again forever\nvoid loop()\n{\n  digitalWrite(LED_BUILTIN, HIGH); // turn the LED on (HIGH is the voltage level)\n  delay(1000);                     // wait for a second\n  digitalWrite(LED_BUILTIN, LOW);  // turn the LED off by making the voltage LOW\n  delay(1000);                     // wait for a second\n}\n\nPress F1 or shift + cmd/ctrl + P to open the VS Code Command Pallette. Choose \"PlatformIO: Build\" to build the program or \"PlatformIO: Upload\" to build and upload the program to your Swan.\n\nWarning\n\nDid your firmware upload fail with a libusb error? This is not specific to Swan, but rather with programming any STM32 board.\n\nWindows: Install a generic USB driver that supports libusb. Download Zadig to install \"WinUSB\" and consult this article for more", "start_char_idx": 3417, "end_char_idx": 4970, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "621c7b40-a6c8-4fcc-bc61-5a5cbaff574b": {"__data__": {"id_": "621c7b40-a6c8-4fcc-bc61-5a5cbaff574b", "embedding": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1344782-2028-445b-86d4-0af423d864d7", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "hash": "14c1c88243750b5821398a1d8b868e1eb873558a3d2f5612460770f536f92212"}, "2": {"node_id": "2e0e4755-14ef-465c-819a-e86283dbcf0f", "node_type": null, "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}, "hash": "ef69619e03d800d40e64505a6684349614093e43779fcd725139cf8c137f0070"}}, "hash": "dd023ac01faa00a816881ea686387c095f9bf0de8802259f1dfe3d3aee9fcfa1", "text": "libusb. Download Zadig to install \"WinUSB\" and consult this article for more information.\n\nmacOS on Apple Silicon (M1/M2): The appropriate libusb package must be installed for the M1/M2 architecture:\n\nInstall via MacPorts with port install libusb\n\nInstall via Homebrew with brew install libusb, noting that the libusb package from Homebrew also requires Rosetta.\n\nLastly, you can open the PlatformIO Serial Monitor by clicking on the appropriate icon on the bottom menu in VS Code. Note that when the serial monitor opens, you may need to choose the device you are connecting to (this will vary depending on your OS and whether you are using the dfu or stlink upload_protocol).\n\nDebugging with PlatformIO\n\nThe PlatformIO documentation includes a helpful set of resources for debugging an STM32. Please note that an STLink programmer like the STLINK-V3MINI is required for debugging with Swan.\n\nNext Steps\n\nCongratulations! You've configured your Swan and flashed new firmware to it using VS Code, PlatformIO, and Arduino.\n\nIf you're following the Blues Quickstart, next we recommend building your first IoT app:\n\nUse the Notecard to Send Data\nSet Up Your Microcontroller\nBuild Your First IoT App With Blues\nSend Data to Your Cloud\n\nAt any time, if you find yourself stuck, please reach out on the community forum.\n\nCan we improve this page? Send us feedback", "start_char_idx": 4953, "end_char_idx": 6310, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"2ee1ade7-dc00-473b-9e05-031b3fc885ac": {"node_ids": ["669aca35-bf45-4a75-853d-90ce4c1125a2", "925b7df1-7530-48fc-832e-c173679085f3", "f25096e9-5c2e-464e-a50c-8934a3405421", "630452fb-9a6a-4f6d-bc94-aeaf902419d4"], "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/swan/swan-quickstart/"}}, "d1344782-2028-445b-86d4-0af423d864d7": {"node_ids": ["dd2aabf3-31b7-486d-a1bc-8a9125a84838", "6991bd28-77ee-4758-a9e0-f2b0737c162c", "2e0e4755-14ef-465c-819a-e86283dbcf0f", "621c7b40-a6c8-4fcc-bc61-5a5cbaff574b"], "metadata": {"title": "", "category": "Swan Quickstart", "url": "https://dev.blues.io/quickstart/swan-quickstart/"}}}}