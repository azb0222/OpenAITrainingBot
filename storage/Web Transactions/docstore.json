{"docstore/metadata": {"d8e8f76f-23b6-4ce3-9157-713859edb848": {"doc_hash": "8baf822267c6bcea9c6370516b3182361d88021962d7789939007c8f243b0b74"}, "6567c038-fb0f-4f1d-9330-7e017e51b2f8": {"doc_hash": "5ac8fe2f6577e18ed9bfce186bd7eeb38085878b5d7d4c7c2635145e9f65526c", "ref_doc_id": "d8e8f76f-23b6-4ce3-9157-713859edb848"}, "fda8066e-80b8-4e75-bdfc-0804bef0640d": {"doc_hash": "78b9153290892a4c0c4187de85430e3b7d7330fb6564b8754c0e2fa9c592857d", "ref_doc_id": "d8e8f76f-23b6-4ce3-9157-713859edb848"}, "63b6ff7d-53c1-4da0-b367-4e7a8185af2b": {"doc_hash": "e72abd357f434ffbc318313c3cf2f148a2f46d84bf2046f5979e96d6d8df54f3", "ref_doc_id": "d8e8f76f-23b6-4ce3-9157-713859edb848"}}, "docstore/data": {"6567c038-fb0f-4f1d-9330-7e017e51b2f8": {"__data__": {"id_": "6567c038-fb0f-4f1d-9330-7e017e51b2f8", "embedding": null, "metadata": {"title": "", "category": "Web Transactions", "url": "https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d8e8f76f-23b6-4ce3-9157-713859edb848", "node_type": null, "metadata": {"title": "", "category": "Web Transactions", "url": "https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/"}, "hash": "8baf822267c6bcea9c6370516b3182361d88021962d7789939007c8f243b0b74"}, "3": {"node_id": "fda8066e-80b8-4e75-bdfc-0804bef0640d", "node_type": null, "metadata": {"title": "", "category": "Web Transactions", "url": "https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/"}, "hash": "78b9153290892a4c0c4187de85430e3b7d7330fb6564b8754c0e2fa9c592857d"}}, "hash": "5ac8fe2f6577e18ed9bfce186bd7eeb38085878b5d7d4c7c2635145e9f65526c", "text": "Web Transactions\n\nIf your host needs to perform web requests with a 3rd party API or service, the Notecard can facilitate these requests with the web.get, web.put, web.post, and web.delete APIs. See complete details in the web Requests API reference.\n\nUse of these requests in the Notecard API requires the following:\n\n1) The Notecard must be in continuous mode and connected to Notehub.\n\nFor example:\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"hub.set\",\n  \"product\": \"com.your-company.your-name:your_product\",\n  \"mode\": \"continuous\"\n}\n\nIf any of the web.* requests are issued to a Notecard not in continuous mode or not connected, an error will be returned:\n\nCOPY\n{ \"err\": \"web operations require being online (hub.set)\" }\n\n2) The endpoint to the 3rd party API or service must be configured as a proxy Route in Notehub as a \"Proxy for Device Web Requests\" type.\n\nThis allows the host to avoid hardcoded URLs, keys, and certificates, while relying on Notehub secure authentication mechanisms for performing requests.\n\nOnce the device is in continuous mode and the proxy Route is created, use web.get, web.put, web.post, or web.delete in accordance with the requirements of the final endpoint.\n\nFor example, the Route shown above creates a proxy to a GET request to the weather endpoint of the OpenWeatherMap API. The route argument corresponds to the Route Alias specified when the proxy Route is created.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"web.get\",\n  \"route\": \"weatherInfo\"\n}\n\nFor all web requests, the Notecard returns the HTTP Status Code in the result field. If the response also contains a body, that body is provided in the body", "start_char_idx": 0, "end_char_idx": 1629, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "fda8066e-80b8-4e75-bdfc-0804bef0640d": {"__data__": {"id_": "fda8066e-80b8-4e75-bdfc-0804bef0640d", "embedding": null, "metadata": {"title": "", "category": "Web Transactions", "url": "https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d8e8f76f-23b6-4ce3-9157-713859edb848", "node_type": null, "metadata": {"title": "", "category": "Web Transactions", "url": "https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/"}, "hash": "8baf822267c6bcea9c6370516b3182361d88021962d7789939007c8f243b0b74"}, "2": {"node_id": "6567c038-fb0f-4f1d-9330-7e017e51b2f8", "node_type": null, "metadata": {"title": "", "category": "Web Transactions", "url": "https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/"}, "hash": "5ac8fe2f6577e18ed9bfce186bd7eeb38085878b5d7d4c7c2635145e9f65526c"}, "3": {"node_id": "63b6ff7d-53c1-4da0-b367-4e7a8185af2b", "node_type": null, "metadata": {"title": "", "category": "Web Transactions", "url": "https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/"}, "hash": "e72abd357f434ffbc318313c3cf2f148a2f46d84bf2046f5979e96d6d8df54f3"}}, "hash": "78b9153290892a4c0c4187de85430e3b7d7330fb6564b8754c0e2fa9c592857d", "text": "the result field. If the response also contains a body, that body is provided in the body field.\n\nWarning\n\nThe Notecard can only accept valid JSON in response to a GET, POST, or PUT request unless you override the default content argument of application/json with the appropriate MIME type.\n\nCOPY\n{\n \"result\": 200,\n \"body\": {\n  \"base\": \"stations\",\n  \"clouds\": {\n   \"all\": 75\n  },\n  \"coord\": {\n   \"lat\": 42.5776,\n   \"lon\": -70.87134\n  },\n  \"name\": \"Beverly\",\n  \"weather\": [\n   {\n    \"description\": \"broken clouds\",\n    \"icon\": \"04d\",\n    \"id\": 803,\n    \"main\": \"Clouds\"\n   }\n  ],\n  \"wind\": {\n   \"deg\": 240,\n   \"speed\": 5.1\n  }\n }\n}\nNote\n\nData returned by a proxy Route is delivered to the Notecard unmodified. To preserve power and data, make sure the APIs you're working with return only the data needed by your host, if possible.\n\nFor web.put and web.post requests, a JSON body OR base64-encoded payload can be provided using the body or payload arguments. Unlike the note.add API, you cannot use both at the same time in a single web transaction.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"web.post\",\n  \"route\": \"SensorService\",\n  \"name\": \"/addReading\",\n  \"body\": { \"temp\": 72.32, \"humidity\": 32.2 }\n}\n\nAfter performing a web request, don't forget to set your Notecard back into a non-continuous mode, if needed, using hub.set.\n\nSending Large Payloads to Notehub\n\nIf your application needs to send large", "start_char_idx": 1557, "end_char_idx": 2955, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "63b6ff7d-53c1-4da0-b367-4e7a8185af2b": {"__data__": {"id_": "63b6ff7d-53c1-4da0-b367-4e7a8185af2b", "embedding": null, "metadata": {"title": "", "category": "Web Transactions", "url": "https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d8e8f76f-23b6-4ce3-9157-713859edb848", "node_type": null, "metadata": {"title": "", "category": "Web Transactions", "url": "https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/"}, "hash": "8baf822267c6bcea9c6370516b3182361d88021962d7789939007c8f243b0b74"}, "2": {"node_id": "fda8066e-80b8-4e75-bdfc-0804bef0640d", "node_type": null, "metadata": {"title": "", "category": "Web Transactions", "url": "https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/"}, "hash": "78b9153290892a4c0c4187de85430e3b7d7330fb6564b8754c0e2fa9c592857d"}}, "hash": "e72abd357f434ffbc318313c3cf2f148a2f46d84bf2046f5979e96d6d8df54f3", "text": "Large Payloads to Notehub\n\nIf your application needs to send large payloads to Notehub, as of Notecard firmware v3.2.1, web.post and web.put support sending payload fragments and can assemble these fragments before routing to your cloud application.\n\nTo utilize this feature, your host will need to disassemble the payload into fragments, and send these in successive web.post requests. Your request must use arguments that Notehub uses to verify each fragment and understand where the individual fragments should be placed in the reassembled payload. Those fields are:\n\ntotal - The total size of the entire payload, in bytes, across all fragments.\noffset - For a given fragment, the number of bytes to offset from 0 when reassembling fragments in Notehub.\nstatus - A 32-character hex-encoded MD5 sum of the payload or payload fragment. Used by Notehub to perform verification upon receipt.\nverify - Can optionally be set to true to request verification from Notehub once the payload or payload fragment is received. Automatically set to true when status is supplied.\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"web.post\",\n  \"payload\": \"<600 base64-encoded bytes of payload>\",\n  \"status\": \"<base64 md5 sum of payload fragment>\",\n  \"route\": \"SensorService\",\n  \"offset\": 600,\n  \"total\": 8191\n}\n\nOnce the payload is received, it will be verified on Notehub and the verification result will be returned in the response from the Notecard.\n\nInbound Requests & Shared Data\nLow Power Design\nCan we improve this page? Send us feedback", "start_char_idx": 2962, "end_char_idx": 4478, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"d8e8f76f-23b6-4ce3-9157-713859edb848": {"node_ids": ["6567c038-fb0f-4f1d-9330-7e017e51b2f8", "fda8066e-80b8-4e75-bdfc-0804bef0640d", "63b6ff7d-53c1-4da0-b367-4e7a8185af2b"], "metadata": {"title": "", "category": "Web Transactions", "url": "https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/"}}}}