{"docstore/metadata": {"22c485fa-1e6c-45da-912f-92634113f004": {"doc_hash": "58644fe9f4f1665b29f08a023de0d031816cfd71d19eef6f6f2128c181f505fb"}, "be21f0ac-838e-4717-b911-0feced5f3049": {"doc_hash": "822f7b4a147163f6e4bc6edda53147fe0ce198450bb5a18ac09c244fa30ad671", "ref_doc_id": "22c485fa-1e6c-45da-912f-92634113f004"}, "c2184b59-d24d-4c3e-9bdd-ca6854859fdd": {"doc_hash": "a681dad80fb451cbf07567ee6ca5e05c4ef6810c801de95c001a1dbd1dba5bc7", "ref_doc_id": "22c485fa-1e6c-45da-912f-92634113f004"}, "336cff85-199d-4347-88eb-ff9f1f4b6bf4": {"doc_hash": "72ef9a9811d56e8d590ea44c3215f1002356eb644a49730faac4ebc378a7ba74", "ref_doc_id": "22c485fa-1e6c-45da-912f-92634113f004"}, "f04cea47-b7c2-4f97-a9fc-92bb1f658b6c": {"doc_hash": "7c1afd99ca3f01acae708b37a14bf8e4605e1ad1e3b75ff02ad7aee328960dd6", "ref_doc_id": "22c485fa-1e6c-45da-912f-92634113f004"}, "6620b93c-e1f4-40ef-aac7-82ec11a7f407": {"doc_hash": "1a5546e837fbcecdb44eec99377fef45f7a0d362fc1234a3bae1897a51ab89f4", "ref_doc_id": "22c485fa-1e6c-45da-912f-92634113f004"}, "8f540f08-0803-4cf3-b3f4-dd90c386291f": {"doc_hash": "b3737e9b1a908be2f98de84468d851adf2016de7a2df2ea2d36a61070a2d56d1", "ref_doc_id": "22c485fa-1e6c-45da-912f-92634113f004"}, "848b6625-3612-4a6a-95cb-5adffb9c5b95": {"doc_hash": "2db0ab42419ad03575e69541e74cef42babfc570bee81a47fa5e34de1117135f", "ref_doc_id": "22c485fa-1e6c-45da-912f-92634113f004"}}, "docstore/data": {"be21f0ac-838e-4717-b911-0feced5f3049": {"__data__": {"id_": "be21f0ac-838e-4717-b911-0feced5f3049", "embedding": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22c485fa-1e6c-45da-912f-92634113f004", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "58644fe9f4f1665b29f08a023de0d031816cfd71d19eef6f6f2128c181f505fb"}, "3": {"node_id": "c2184b59-d24d-4c3e-9bdd-ca6854859fdd", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "a681dad80fb451cbf07567ee6ca5e05c4ef6810c801de95c001a1dbd1dba5bc7"}}, "hash": "822f7b4a147163f6e4bc6edda53147fe0ce198450bb5a18ac09c244fa30ad671", "text": "web Requests\n\nThe Notecard can perform requests and obtain responses from 3rd party APIs and services with the web API requests.\n\nNote\n\nCaveats When Performing Web Requests:\n\nThe Notecard must be in continuous mode and connected to Notehub to perform any of the requests below. For example:\n\nCOPY\n{\n \"req\": \"hub.set\",\n \"product\": \"com.your-company.your-name:your_product\",\n \"mode\": \"continuous\"\n}\n\nThe endpoint to the 3rd party API or service must be configured as a proxy Route in Notehub as a \"Proxy for Device Web Requests\" type.\n\nThe Notecard can only accept valid JSON in response to a GET, POST, or PUT request unless you override the default content argument of application/json with the appropriate MIME type.\n\nFor more information on these requirements, see the Web Transactions Guide.\n\nweb.get \n\nPerforms a simple HTTP or HTTPS GET request against an external endpoint, and returns the response to the Notecard.\n\nArguments\nroute\n\nstring\n\nAlias for a Proxy Route in Notehub.\n\nname\n\nstring (optional)\n\nA web URL endpoint relative to the host configured in the Proxy Route. URL parameters may be added to this argument as well (e.g. /getLatest?id=1).\n\ncontent\n\nstring (optional)\n\nThe MIME type of the body or payload of the response. Default is application/json.\n\nseconds (Added in v1.5.6)\n\ninteger (optional)\n\nIf specified, overrides the default 90 second timeout.\n\nasync (Added in v5.1.1)\n\nboolean (optional)\n\nIf true, the Notecard performs the web request asynchronously, and returns control to the host without waiting for a response from Notehub.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"web.get\",\n ", "start_char_idx": 0, "end_char_idx": 1614, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "c2184b59-d24d-4c3e-9bdd-ca6854859fdd": {"__data__": {"id_": "c2184b59-d24d-4c3e-9bdd-ca6854859fdd", "embedding": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22c485fa-1e6c-45da-912f-92634113f004", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "58644fe9f4f1665b29f08a023de0d031816cfd71d19eef6f6f2128c181f505fb"}, "2": {"node_id": "be21f0ac-838e-4717-b911-0feced5f3049", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "822f7b4a147163f6e4bc6edda53147fe0ce198450bb5a18ac09c244fa30ad671"}, "3": {"node_id": "336cff85-199d-4347-88eb-ff9f1f4b6bf4", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "72ef9a9811d56e8d590ea44c3215f1002356eb644a49730faac4ebc378a7ba74"}}, "hash": "a681dad80fb451cbf07567ee6ca5e05c4ef6810c801de95c001a1dbd1dba5bc7", "text": " \"req\": \"web.get\",\n  \"route\": \"weatherInfo\",\n  \"name\": \"/getLatest\"\n}\nResponse Members\nresult\n\ninteger\n\nThe HTTP Status Code.\n\nbody\n\nJSON object\n\nThe JSON response body from the external service, if any. The maximum response size from the service is 8192 bytes.\n\npayload\n\nbase64 string\n\nA base64-encoded binary payload from the external service, if any. The maximum response size from the service is 8192 bytes.\n\nExample Response\nCOPY\n{\n  \"result\": 200,\n  \"body\": { \"temp\": 75, \"humidity\": 49 }\n}\nweb.post \n\nPerforms a simple HTTP or HTTPS POST request against an external endpoint, and returns the response to the Notecard.\n\nArguments\nroute\n\nstring\n\nAlias for a Proxy Route in Notehub.\n\nname\n\nstring (optional)\n\nA web URL endpoint relative to the host configured in the Proxy Route. URL parameters may be added to this argument as well (e.g. /addReading?id=1).\n\nbody\n\nJSON object (optional)\n\nThe JSON body to send with the request.\n\npayload\n\nbase64 string (optional)\n\nA base64-encoded binary payload. A web.post may have either a body or a payload, but may NOT have both. Be aware that Notehub will decode the payload as it is delivered to the endpoint.\n\nLearn more about sending large payloads with the Notecard.\n\ncontent\n\nstring (optional)\n\nThe MIME type of the body or payload of the response. Default is application/json.\n\nseconds (Added in v1.5.6)\n\ninteger (optional)\n\nIf specified, overrides the default 90 second timeout.\n\ntotal (Added in v3.2.1)\n\ninteger (optional)\n\nWhen sending large payloads to Notehub in fragments across several web.post requests, the total size, in", "start_char_idx": 1598, "end_char_idx": 3178, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "336cff85-199d-4347-88eb-ff9f1f4b6bf4": {"__data__": {"id_": "336cff85-199d-4347-88eb-ff9f1f4b6bf4", "embedding": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22c485fa-1e6c-45da-912f-92634113f004", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "58644fe9f4f1665b29f08a023de0d031816cfd71d19eef6f6f2128c181f505fb"}, "2": {"node_id": "c2184b59-d24d-4c3e-9bdd-ca6854859fdd", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "a681dad80fb451cbf07567ee6ca5e05c4ef6810c801de95c001a1dbd1dba5bc7"}, "3": {"node_id": "f04cea47-b7c2-4f97-a9fc-92bb1f658b6c", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "7c1afd99ca3f01acae708b37a14bf8e4605e1ad1e3b75ff02ad7aee328960dd6"}}, "hash": "72ef9a9811d56e8d590ea44c3215f1002356eb644a49730faac4ebc378a7ba74", "text": "in fragments across several web.post requests, the total size, in bytes, of the binary payload across all fragments.\n\noffset (Added in v3.2.1)\n\ninteger (optional)\n\nWhen sending payload fragments, the number of bytes of the binary payload to offset from 0 when reassembling on the Notehub once all fragments have been received.\n\nstatus (Added in v3.2.1)\n\nstring (optional)\n\nA 32-character hex-encoded MD5 sum of the payload or payload fragment. Used by Notehub to perform verification upon receipt.\n\nmax (Added in v3.2.1)\n\ninteger (optional)\n\nThe maximum size of the response from the remote server, in bytes. Useful if a memory-constrained host wants to limit the response size. Default (and maximum value) is 8192.\n\nverify (Added in v3.2.1)\n\nboolean (optional)\n\ntrue to request verification from Notehub once the payload or payload fragment is received. Automatically set to true when status is supplied.\n\nasync (Added in v5.1.1)\n\nboolean (optional)\n\nIf true, the Notecard performs the web request asynchronously, and returns control to the host without waiting for a response from Notehub.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"web.post\",\n  \"route\": \"SensorService\",\n  \"name\": \"/addReading\",\n  \"body\": { \"temp\": 72.32, \"humidity\": 32.2 }\n}\nResponse Members\nresult\n\ninteger\n\nThe HTTP Status Code.\n\nbody\n\nJSON object\n\nThe JSON response body from the external service, if any. The maximum response size from the service is 8192 bytes.\n\npayload\n\nbase64 string\n\nA base64-encoded binary payload from the external service, if any. The maximum response size", "start_char_idx": 3140, "end_char_idx": 4697, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f04cea47-b7c2-4f97-a9fc-92bb1f658b6c": {"__data__": {"id_": "f04cea47-b7c2-4f97-a9fc-92bb1f658b6c", "embedding": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22c485fa-1e6c-45da-912f-92634113f004", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "58644fe9f4f1665b29f08a023de0d031816cfd71d19eef6f6f2128c181f505fb"}, "2": {"node_id": "336cff85-199d-4347-88eb-ff9f1f4b6bf4", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "72ef9a9811d56e8d590ea44c3215f1002356eb644a49730faac4ebc378a7ba74"}, "3": {"node_id": "6620b93c-e1f4-40ef-aac7-82ec11a7f407", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "1a5546e837fbcecdb44eec99377fef45f7a0d362fc1234a3bae1897a51ab89f4"}}, "hash": "7c1afd99ca3f01acae708b37a14bf8e4605e1ad1e3b75ff02ad7aee328960dd6", "text": "base64-encoded binary payload from the external service, if any. The maximum response size from the service is 8192 bytes.\n\nstatus\n\nstring\n\nIf a payload is returned in the response, this is a 32-character hex-encoded MD5 sum of the payload or payload fragment. Useful for the host to check for any I2C/UART corruption.\n\nExample Response\nCOPY\n{\n  \"result\": 201\n}\nweb.put \n\nPerforms a simple HTTP or HTTPS PUT request against an external endpoint, and returns the response to the Notecard.\n\nArguments\nroute\n\nstring\n\nAlias for a Proxy Route in Notehub.\n\nname\n\nstring (optional)\n\nA web URL endpoint relative to the host configured in the Proxy Route. URL parameters may be added to this argument as well (e.g. /updateReading?id=1).\n\nbody\n\nJSON object (optional)\n\nThe JSON body to send with the request.\n\npayload\n\nbase64 string (optional)\n\nA base64-encoded binary payload. A web.put may have either a body or a payload, but may NOT have both. Be aware that Notehub will decode the payload as it is delivered to the endpoint.\n\nLearn more about sending large payloads with the Notecard.\n\ncontent\n\nstring (optional)\n\nThe MIME type of the body or payload of the response. Default is application/json.\n\nseconds (Added in v1.5.6)\n\ninteger (optional)\n\nIf specified, overrides the default 90 second timeout.\n\ntotal (Added in v3.2.1)\n\ninteger (optional)\n\nWhen sending large payloads to Notehub in fragments across several web.put requests, the total size, in bytes, of the binary payload across all fragments.\n\noffset (Added in v3.2.1)\n\ninteger (optional)\n\nWhen sending payload fragments, the number of bytes of", "start_char_idx": 4676, "end_char_idx": 6273, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6620b93c-e1f4-40ef-aac7-82ec11a7f407": {"__data__": {"id_": "6620b93c-e1f4-40ef-aac7-82ec11a7f407", "embedding": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22c485fa-1e6c-45da-912f-92634113f004", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "58644fe9f4f1665b29f08a023de0d031816cfd71d19eef6f6f2128c181f505fb"}, "2": {"node_id": "f04cea47-b7c2-4f97-a9fc-92bb1f658b6c", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "7c1afd99ca3f01acae708b37a14bf8e4605e1ad1e3b75ff02ad7aee328960dd6"}, "3": {"node_id": "8f540f08-0803-4cf3-b3f4-dd90c386291f", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "b3737e9b1a908be2f98de84468d851adf2016de7a2df2ea2d36a61070a2d56d1"}}, "hash": "1a5546e837fbcecdb44eec99377fef45f7a0d362fc1234a3bae1897a51ab89f4", "text": "(optional)\n\nWhen sending payload fragments, the number of bytes of the binary payload to offset from 0 when reassembling on the Notehub once all fragments have been received.\n\nstatus (Added in v3.2.1)\n\nstring (optional)\n\nA 32-character hex-encoded MD5 sum of the payload or payload fragment. Used by Notehub to perform verification upon receipt.\n\nmax (Added in v3.2.1)\n\ninteger (optional)\n\nThe maximum size of the response from the remote server, in bytes. Useful if a memory-constrained host wants to limit the response size. Default (and maximum value) is 8192.\n\nverify (Added in v3.2.1)\n\nboolean (optional)\n\ntrue to request verification from Notehub once the payload or payload fragment is received. Automatically set to true when status is supplied.\n\nasync (Added in v5.1.1)\n\nboolean (optional)\n\nIf true, the Notecard performs the web request asynchronously, and returns control to the host without waiting for a response from Notehub.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"web.put\",\n  \"route\": \"SensorService\",\n  \"name\": \"/updateReading\",\n  \"body\": { \"id\": 1234, \"temp\": 72.32, \"humidity\": 32.2 }\n}\nResponse Members\nresult\n\ninteger\n\nThe HTTP Status Code.\n\nbody\n\nJSON object\n\nThe JSON response body from the external service, if any. The maximum response size from the service is 8192 bytes.\n\npayload\n\nbase64 string\n\nA base64-encoded binary payload from the external service, if any. The maximum response size from the service is 8192 bytes.\n\nstatus\n\nstring\n\nIf a payload is returned in the response, this is a 32-character hex-encoded MD5 sum of the", "start_char_idx": 6294, "end_char_idx": 7854, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "8f540f08-0803-4cf3-b3f4-dd90c386291f": {"__data__": {"id_": "8f540f08-0803-4cf3-b3f4-dd90c386291f", "embedding": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22c485fa-1e6c-45da-912f-92634113f004", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "58644fe9f4f1665b29f08a023de0d031816cfd71d19eef6f6f2128c181f505fb"}, "2": {"node_id": "6620b93c-e1f4-40ef-aac7-82ec11a7f407", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "1a5546e837fbcecdb44eec99377fef45f7a0d362fc1234a3bae1897a51ab89f4"}, "3": {"node_id": "848b6625-3612-4a6a-95cb-5adffb9c5b95", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "2db0ab42419ad03575e69541e74cef42babfc570bee81a47fa5e34de1117135f"}}, "hash": "b3737e9b1a908be2f98de84468d851adf2016de7a2df2ea2d36a61070a2d56d1", "text": "in the response, this is a 32-character hex-encoded MD5 sum of the payload or payload fragment. Useful for the host to check for any I2C/UART corruption.\n\nExample Response\nCOPY\n{\n  \"result\": 204\n}\nweb.delete  (Added in v1.5.6)\n\nPerforms a simple HTTP or HTTPS DELETE request against an external endpoint, and returns the response to the Notecard.\n\nArguments\nroute\n\nstring\n\nAlias for a Proxy Route in Notehub.\n\nname\n\nstring (optional)\n\nA web URL endpoint relative to the host configured in the Proxy Route. URL parameters may be added to this argument as well (e.g. /deleteReading?id=1).\n\ncontent\n\nstring (optional)\n\nThe MIME type of the body or payload of the response. Default is application/json.\n\nseconds (Added in v1.5.6)\n\ninteger (optional)\n\nIf specified, overrides the default 90 second timeout.\n\nasync (Added in v5.1.1)\n\nboolean (optional)\n\nIf true, the Notecard performs the web request asynchronously, and returns control to the host without waiting for a response from Notehub.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"web.delete\",\n  \"route\": \"SensorService\",\n  \"name\": \"/deleteReading?id=1\"\n}\nResponse Members\nresult\n\ninteger\n\nThe HTTP Status Code.\n\nbody\n\nJSON object\n\nThe JSON response body from the external service, if any. The maximum response size from the service is 8192 bytes.\n\npayload\n\nbase64 string\n\nA base64-encoded binary payload from the external service, if any. The maximum response size from the service is 8192 bytes.\n\nstatus\n\nstring\n\nIf a payload is returned in the response, this is a 32-character hex-encoded MD5 sum of", "start_char_idx": 7858, "end_char_idx": 9411, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "848b6625-3612-4a6a-95cb-5adffb9c5b95": {"__data__": {"id_": "848b6625-3612-4a6a-95cb-5adffb9c5b95", "embedding": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22c485fa-1e6c-45da-912f-92634113f004", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "58644fe9f4f1665b29f08a023de0d031816cfd71d19eef6f6f2128c181f505fb"}, "2": {"node_id": "8f540f08-0803-4cf3-b3f4-dd90c386291f", "node_type": null, "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}, "hash": "b3737e9b1a908be2f98de84468d851adf2016de7a2df2ea2d36a61070a2d56d1"}}, "hash": "2db0ab42419ad03575e69541e74cef42babfc570bee81a47fa5e34de1117135f", "text": "returned in the response, this is a 32-character hex-encoded MD5 sum of the payload or payload fragment. Useful for the host to check for any I2C/UART corruption.\n\nExample Response\nCOPY\n{\n  \"result\": 204\n}\nMore information:\nWeb Transactions Guide\nnote Requests\nCan we improve this page? Send us feedback", "start_char_idx": 9395, "end_char_idx": 9698, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"22c485fa-1e6c-45da-912f-92634113f004": {"node_ids": ["be21f0ac-838e-4717-b911-0feced5f3049", "c2184b59-d24d-4c3e-9bdd-ca6854859fdd", "336cff85-199d-4347-88eb-ff9f1f4b6bf4", "f04cea47-b7c2-4f97-a9fc-92bb1f658b6c", "6620b93c-e1f4-40ef-aac7-82ec11a7f407", "8f540f08-0803-4cf3-b3f4-dd90c386291f", "848b6625-3612-4a6a-95cb-5adffb9c5b95"], "metadata": {"title": "", "category": "Web Requests", "url": "https://dev.blues.io/api-reference/notecard-api/web-requests/"}}}}