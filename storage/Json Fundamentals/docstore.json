{"docstore/metadata": {"d5b45f65-34cb-417f-b410-5470c26063e6": {"doc_hash": "f21c61a6c334332317f6804e28efca81a98e8387935a1c0d2492b8226bb37690"}, "193cf7dc-105e-4546-b26b-960c1e621ffc": {"doc_hash": "536302b3b52094a1757a3fcc09c17635f4ac4e944d8ad3a0c7ac7762cc348f33", "ref_doc_id": "d5b45f65-34cb-417f-b410-5470c26063e6"}, "c9ecd36e-1ccf-4356-ad65-2b49cc68bda9": {"doc_hash": "0cd30e76b020416627adf06a84c37d7d53e78ff8afe7128d10e7ad5644470e0f", "ref_doc_id": "d5b45f65-34cb-417f-b410-5470c26063e6"}}, "docstore/data": {"193cf7dc-105e-4546-b26b-960c1e621ffc": {"__data__": {"id_": "193cf7dc-105e-4546-b26b-960c1e621ffc", "embedding": null, "metadata": {"title": "", "category": "Json Fundamentals", "url": "https://dev.blues.io/notecard/notecard-walkthrough/json-fundamentals/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5b45f65-34cb-417f-b410-5470c26063e6", "node_type": null, "metadata": {"title": "", "category": "Json Fundamentals", "url": "https://dev.blues.io/notecard/notecard-walkthrough/json-fundamentals/"}, "hash": "f21c61a6c334332317f6804e28efca81a98e8387935a1c0d2492b8226bb37690"}, "3": {"node_id": "c9ecd36e-1ccf-4356-ad65-2b49cc68bda9", "node_type": null, "metadata": {"title": "", "category": "Json Fundamentals", "url": "https://dev.blues.io/notecard/notecard-walkthrough/json-fundamentals/"}, "hash": "0cd30e76b020416627adf06a84c37d7d53e78ff8afe7128d10e7ad5644470e0f"}}, "hash": "536302b3b52094a1757a3fcc09c17635f4ac4e944d8ad3a0c7ac7762cc348f33", "text": "JSON Fundamentals\n\nJavaScript Object Notation, or JSON, is a lightweight format for storing and transporting data of most any kind. It contains \"fields\" of your own choosing to convey strings, numbers, boolean values, other JSON objects, and arrays of values:\n\nCOPY\n{\n \"temp\": 34.5,\n \"skies\": \"cloudy\",\n \"windy\": true\n}\n\nYou can learn more about using JSON and its syntax in this online tutorial from Codewall .\n\nHow the Notecard works with JSON\n\nAs you work with the Notecard API, there are a few behaviors and caveats to keep in mind:\n\nIf a structure field is \"\" (string), 0 (int), or 0.0 (float), then that field may be omitted from all JSON Requests and will be omitted from JSON Responses. In the case of responses, the absence of an expected field should be interpreted as 0 or empty.\n\nRepresentation of whole numbers will appear in JSON without a decimal point.\n\nIntegers greater than 2^31 and less than -2^31, while generally supported, are technically Undefined Behavior by the JSON specification and thus may be converted into floating point numbers by some implementations.\n\nSending JSON from one part of the software or service to another, and getting that JSON back from the software or service, does not guarantee the order of fields or the presence of any whitespace.\n\nAlthough tabs, CR, and LF characters are technically allowable whitespace in JSON, they are not allowed in Notecard Requests or Bodies and will never be placed within Notecard Responses. The Notecard uses the ndjson technique of new line-delimited json.\n\nThe Notecard JSON libraries do support UTF-8, but there may be language representation limitations due to the constraints of JSON within embedded systems.\n\nNotecard Requests & Responses\nNotecard", "start_char_idx": 0, "end_char_idx": 1733, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "c9ecd36e-1ccf-4356-ad65-2b49cc68bda9": {"__data__": {"id_": "c9ecd36e-1ccf-4356-ad65-2b49cc68bda9", "embedding": null, "metadata": {"title": "", "category": "Json Fundamentals", "url": "https://dev.blues.io/notecard/notecard-walkthrough/json-fundamentals/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5b45f65-34cb-417f-b410-5470c26063e6", "node_type": null, "metadata": {"title": "", "category": "Json Fundamentals", "url": "https://dev.blues.io/notecard/notecard-walkthrough/json-fundamentals/"}, "hash": "f21c61a6c334332317f6804e28efca81a98e8387935a1c0d2492b8226bb37690"}, "2": {"node_id": "193cf7dc-105e-4546-b26b-960c1e621ffc", "node_type": null, "metadata": {"title": "", "category": "Json Fundamentals", "url": "https://dev.blues.io/notecard/notecard-walkthrough/json-fundamentals/"}, "hash": "536302b3b52094a1757a3fcc09c17635f4ac4e944d8ad3a0c7ac7762cc348f33"}}, "hash": "0cd30e76b020416627adf06a84c37d7d53e78ff8afe7128d10e7ad5644470e0f", "text": "embedded systems.\n\nNotecard Requests & Responses\nNotecard Interfaces\nCan we improve this page? Send us feedback", "start_char_idx": 1676, "end_char_idx": 1787, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"d5b45f65-34cb-417f-b410-5470c26063e6": {"node_ids": ["193cf7dc-105e-4546-b26b-960c1e621ffc", "c9ecd36e-1ccf-4356-ad65-2b49cc68bda9"], "metadata": {"title": "", "category": "Json Fundamentals", "url": "https://dev.blues.io/notecard/notecard-walkthrough/json-fundamentals/"}}}}