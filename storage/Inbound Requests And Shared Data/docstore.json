{"docstore/metadata": {"a5c0f300-73b9-4172-8f7a-5ad2bf0649bc": {"doc_hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "5a08254f-9b88-4e14-b44b-87650881cee6": {"doc_hash": "fe6ee3c0d0c349fcb6dd415ed4ebc22fa32ef9b3b71fa7157658f32b2957a240", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "696d031b-5347-4b43-9b72-43758f0c88f9": {"doc_hash": "7beda1817f20a94db52e277267a270eb9fde313b28e49df172552adc7cfac997", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "dc891bd3-1cf6-439f-861f-b2d1eecf28a0": {"doc_hash": "f9c6c7e2e2e1e73b0d0ebaa288934aa210d50a5ab26c40db42685d7dfd9598dd", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "8b12438c-b5ee-42f4-b326-ac5ebe2532cf": {"doc_hash": "74e2ae22b4df38d103ec797420db3874d5039a5a981d64bb28c593d8dc951774", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "7ae9b5f1-a420-4fa4-b99b-f5c18537e16f": {"doc_hash": "702bb846d94b6ef3b78df297ad2adabbba2b184b2c935c5135cd0dcf043f43a0", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "18410c49-0b65-4699-a0ad-1e151ed7adb8": {"doc_hash": "948a16090d147ce70f8a10fb03a919f3d08536f0b4552f93334973d0effe7975", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "166ae2cf-d6f4-4756-a48b-c31149434dd3": {"doc_hash": "6a77ce2f288719ea643dc5cffbf38b1f00a610d71225b6544409236e51dae010", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "9e82621a-bf7a-420a-b33b-12c3dd34e928": {"doc_hash": "1322985ac49e49a4c00a4aa2762fa983d0e9620cb381e091c87c471538508004", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "951e533c-6e22-414d-b319-e856801e23de": {"doc_hash": "c97c74d5d6f1b24dcc5107d4c2972ffa75816aabb43d08c20ab8a12b3dfd2ffa", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "46617a72-4fdb-4f3f-afcf-1ee78dedee96": {"doc_hash": "48d0f3af1971d6911c21aebc877b9178a3d8c21dac8cca88af578d6d7de72bb6", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "7cda291d-0bca-4099-9b3d-bc2278c54e76": {"doc_hash": "e3b43cf584448aff5cab3736afa665d95a2dc6b07c2cbadbd1e7c2e2d72cb50d", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "992b0c39-c570-4f71-8aa0-f70fccba1240": {"doc_hash": "eff389d06ebd34d3ed37439d5fcbb804bff27c8c552e694eb3025df10f454701", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "c81ca57d-f923-4cff-8e64-65b574e1eadf": {"doc_hash": "22b381f9636b9125eb4f3752cbb90d02860e9255e3d32080c7eb496a24a69438", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "395a5a2d-f66d-4cde-baea-af3a4871e052": {"doc_hash": "2eb2539b1b5d5456d73d4a980c90dd6b7b9e90cb303824d10fde5d8bb8d1ba1b", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "1fd3f903-df1a-4a02-b714-3dba25fae9e0": {"doc_hash": "05e81d89d494e0498c1a82faf9ffb5ec22a50dae3bcdd4fa513f579001a30a0b", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "129874c9-a008-4be2-9840-15c4b87ffd6c": {"doc_hash": "dbee1d62554e06f09a5565ac5ec8b6de3f075676a6b417620c9cdb7afddeb98d", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "078a84c0-1202-4ec4-a8c3-1e660bc340d1": {"doc_hash": "3bd944782b8c95bdafd400dd3e032ffdab2f97d9d674a24db0202074c44c0648", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}, "846dc17c-8c1d-416a-ad7f-db128bf01d4e": {"doc_hash": "c1b8f1d918af4aa191806dd86e5ddaa85d0f77286f288ace7693be7ee639fee2", "ref_doc_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc"}}, "docstore/data": {"5a08254f-9b88-4e14-b44b-87650881cee6": {"__data__": {"id_": "5a08254f-9b88-4e14-b44b-87650881cee6", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "3": {"node_id": "696d031b-5347-4b43-9b72-43758f0c88f9", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "7beda1817f20a94db52e277267a270eb9fde313b28e49df172552adc7cfac997"}}, "hash": "fe6ee3c0d0c349fcb6dd415ed4ebc22fa32ef9b3b71fa7157658f32b2957a240", "text": "Inbound Requests & Shared Data\n\nAll of the scenarios discussed so far in this guide are focused on performing requests directly against the Notecard from a host, and synching data from the Notecard to Notehub. This type of data is called \"outbound data\" because it is data that starts on the Notecard and is synchronized to Notehub. In other words it is \"outbound\" from the perspective of the Notecard.\n\nMany solutions, however, will need to initiate data or requests from a cloud app or external service, and propagate that request down to the Notecard. This data is called \"inbound data\" because it is data that originates somewhere else and is synchronized to the Notecard. In other words, it is \"inbound\" from the perspective of the Notecard.\n\nUsing the API requests detailed below, you can perform inbound requests to:\n\nShare state between the Notecard and Notehub.\nNotify the host that new data is available.\n\nOnce available, a host can retrieve inbound data from the Notecard, and respond accordingly.\n\nSending Data Through Notehub\n\nInbound requests are requests that originate somewhere other than the Notecard, and are synchronized to the Notecard by Notehub. These requests are created either directly from the Notehub UI, or using the Notehub API.\n\nAdding Inbound Notes in Notehub\n\nTo add a Note that will sync to the Notecard from the Notehub UI, navigate to the Devices dashboard, select your device, and click the \"Add note\" button. In the modal, select the Notefile for your Note (the default is data.qi) and add the Note contents as a JSON object.\n\nNote\n\nThis approach only supports adding inbound queue files with the .qi or .qis extension. If you need to add Notes to a DB file, use the Notehub API, as described", "start_char_idx": 0, "end_char_idx": 1730, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "696d031b-5347-4b43-9b72-43758f0c88f9": {"__data__": {"id_": "696d031b-5347-4b43-9b72-43758f0c88f9", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "5a08254f-9b88-4e14-b44b-87650881cee6", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "fe6ee3c0d0c349fcb6dd415ed4ebc22fa32ef9b3b71fa7157658f32b2957a240"}, "3": {"node_id": "dc891bd3-1cf6-439f-861f-b2d1eecf28a0", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "f9c6c7e2e2e1e73b0d0ebaa288934aa210d50a5ab26c40db42685d7dfd9598dd"}}, "hash": "7beda1817f20a94db52e277267a270eb9fde313b28e49df172552adc7cfac997", "text": "If you need to add Notes to a DB file, use the Notehub API, as described below.\n\nAdding Inbound Notes with the Notehub.io API\n\nAlternatively, use the Notehub API to add inbound notes to Notehub. This approach works for both .qi/.qis and .db files.\n\nFor example, here's how to add a Note to the default data.qi file using curl.\n\nCOPY\ncurl -X POST\n     -L 'https://api.notefile.net/v1/projects/<projectUID>/devices/<deviceUID>/notes/data.qi'\n     -H 'Authorization: Bearer <access_token>'\n     -d '{\"body\":{\"key-1\":\"val-1\"}}'\n\nHere's an example for adding a new Note named sync-settings to a DB file named my-settings.db:\n\nCOPY\ncurl -X PUT\n     -L 'https://api.notefile.net/v1/projects/<projectUID>/devices/<deviceUID>/notes/my-settings.db/sync-settings'\n     -H 'Authorization: Bearer <access_token>'\n     -d '{\"body\": {\"interval\": 60 }}'\nNote\n\nNotehub API requests are authorized via OAuth bearer tokens. Consult the Notehub API documentation for more information.\n\nCreating & Handling Inbound Notes\n\nAs with outbound Notes on the Notecard, the same note.add request syntax is used on Notehub to create inbound Notes. The key difference is that inbound notes use a .qi or .qis file extension.\n\nCOPY\n{\n \"req\": \"note.add\",\n \"file\": \"data.qi\",\n \"body\": {\n  \"foo\": \"bar\"\n }\n}\nAdding Notes for Secure Transport\n\nIf you want to ensure that Notes are sent over encrypted", "start_char_idx": 1674, "end_char_idx": 3037, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "dc891bd3-1cf6-439f-861f-b2d1eecf28a0": {"__data__": {"id_": "dc891bd3-1cf6-439f-861f-b2d1eecf28a0", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "696d031b-5347-4b43-9b72-43758f0c88f9", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "7beda1817f20a94db52e277267a270eb9fde313b28e49df172552adc7cfac997"}, "3": {"node_id": "8b12438c-b5ee-42f4-b326-ac5ebe2532cf", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "74e2ae22b4df38d103ec797420db3874d5039a5a981d64bb28c593d8dc951774"}}, "hash": "f9c6c7e2e2e1e73b0d0ebaa288934aa210d50a5ab26c40db42685d7dfd9598dd", "text": "Notes for Secure Transport\n\nIf you want to ensure that Notes are sent over encrypted TLS to the Notecard, use the .qis extension. qis signifies that the Notefile is a secure inbound queue.\n\nCOPY\n{\n \"req\": \"note.add\",\n \"file\": \"data.qis\",\n \"body\": {\n  \"foo\": \"bar\"\n }\n}\nAdding Payloads to Notes\n\nAs with outbound notes, you can use the payload field, followed by a Base64-encoded string, instead of or in addition to the body field in note.add request.\n\nCOPY\n{\n \"req\": \"note.add\",\n \"file\": \"data.qis\",\n \"payload\": \"ewogICAgInRlbXAiOiAyMy4xMzQKfQ==\"\n}\nRetrieving Inbound Notes from the Notecard\n\nAfter a successful sync, inbound Notes and Notefiles are available to your Notecard. To get an overview of new data across all of your files, use the file.changes request with no arguments.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"file.changes\"\n}\n\nWhen passed with no arguments, file.changes returns an object with the total number of new notes across all files, and the totals for each file, by name.\n\nCOPY\n{\n \"total\": 2,\n \"info\": {\n  \"my-settings.db\": {\n   \"total\": 2\n  },\n  \"data.qi\": {\n   \"total\": 1\n  }\n }\n}\n\nTo obtain a summary of changes across a subset of available files, use the files argument and an array containing the file or files you're interested in.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"file.changes\",\n  \"files\":", "start_char_idx": 3024, "end_char_idx": 4342, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "8b12438c-b5ee-42f4-b326-ac5ebe2532cf": {"__data__": {"id_": "8b12438c-b5ee-42f4-b326-ac5ebe2532cf", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "dc891bd3-1cf6-439f-861f-b2d1eecf28a0", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "f9c6c7e2e2e1e73b0d0ebaa288934aa210d50a5ab26c40db42685d7dfd9598dd"}, "3": {"node_id": "7ae9b5f1-a420-4fa4-b99b-f5c18537e16f", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "702bb846d94b6ef3b78df297ad2adabbba2b184b2c935c5135cd0dcf043f43a0"}}, "hash": "74e2ae22b4df38d103ec797420db3874d5039a5a981d64bb28c593d8dc951774", "text": " \"req\": \"file.changes\",\n  \"files\": [\"data.qi\"]\n}\n\nThe response object is similar to the previous request, but returns only data for the files you specified.\n\nCOPY\n{\n \"total\": 1,\n \"info\": {\n  \"data.qi\": {\n   \"total\": 1\n  }\n }\n}\n\nOnce you've confirmed that inbound Notes are available, use the note.get request to retrieve them. Use the file argument to specify the name of the Notefile, or omit it to fetch a single Note from the data.qi Notefile.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.get\",\n  \"file\": \"requests.qi\"\n}\n\nFollowing queuing semantics, this request will return oldest available Note in the requests.qi Notefile, and the time it was created in Notehub.\n\nCOPY\n{\n \"body\": {\n  \"api-key1\": \"api-val1\"\n },\n \"time\": 1598909219\n}\n\nnote.get does not, by default, remove a Note when you request it, so repeated calls will return the same Note, even if multiple Notes are available in the Notefile. To delete a Note after retrieval, use the delete argument. Subsequent requests will return and delete successive Notes in the Notefile.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.get\",\n  \"file\": \"requests.qi\",\n  \"delete\": true\n}\nUsing Database Files for Replicated State\n\nQueue Notefiles are uni-directional in nature, and are not ideal for replicating state or settings between the Notecard and Notehub. For replicated state, use DB Notefiles. These files, which have a .db extension, are synchronized fully between the Notecard and Notehub, and contain Notes that can be individually read", "start_char_idx": 4384, "end_char_idx": 5874, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "7ae9b5f1-a420-4fa4-b99b-f5c18537e16f": {"__data__": {"id_": "7ae9b5f1-a420-4fa4-b99b-f5c18537e16f", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "8b12438c-b5ee-42f4-b326-ac5ebe2532cf", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "74e2ae22b4df38d103ec797420db3874d5039a5a981d64bb28c593d8dc951774"}, "3": {"node_id": "18410c49-0b65-4699-a0ad-1e151ed7adb8", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "948a16090d147ce70f8a10fb03a919f3d08536f0b4552f93334973d0effe7975"}}, "hash": "702bb846d94b6ef3b78df297ad2adabbba2b184b2c935c5135cd0dcf043f43a0", "text": "fully between the Notecard and Notehub, and contain Notes that can be individually read and updated.\n\nAdding and Updating Notes in DB Notefiles\n\nAdd Notes to a DB file with the note.add request. In addition to a Notefile ID (file), adding Notes to a DB file requires a Note ID (note). The Note ID is used to manage the Note directly, because DB Notefiles hold shared state that is synchronized between the Notecard and Notehub.\n\nNote\n\nAll of the requests in this section are valid for both the Notecard and the Notehub API.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.add\",\n  \"file\": \"my-settings.db\",\n  \"note\": \"measurements\",\n  \"body\": {\"interval\": 10}\n}\n\nAs with other note.add requests, a payload can be provided instead of, or in addition to, a body.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.add\",\n  \"file\": \"my-settings.db\",\n  \"note\": \"measurements\",\n  \"payload\": \"ewogICAgInRlbXAiOiAyMy4xMzQKfQ==\"\n}\n\nTo update a Note in a DB Notefile, use the note.update request. Provide a new body or payload to replace the existing Note content.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.update\",\n  \"file\": \"my-settings.db\",\n  \"note\": \"measurements\",\n  \"body\": {\"interval\": 60 }\n}\nFetching Notes from DB Notefiles\n\nTo retrieve a Note from a DB Notefile, use the note.get request and provide the file and note arguments with the Notefile ID and Note ID,", "start_char_idx": 5831, "end_char_idx": 7173, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "18410c49-0b65-4699-a0ad-1e151ed7adb8": {"__data__": {"id_": "18410c49-0b65-4699-a0ad-1e151ed7adb8", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "7ae9b5f1-a420-4fa4-b99b-f5c18537e16f", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "702bb846d94b6ef3b78df297ad2adabbba2b184b2c935c5135cd0dcf043f43a0"}, "3": {"node_id": "166ae2cf-d6f4-4756-a48b-c31149434dd3", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "6a77ce2f288719ea643dc5cffbf38b1f00a610d71225b6544409236e51dae010"}}, "hash": "948a16090d147ce70f8a10fb03a919f3d08536f0b4552f93334973d0effe7975", "text": "request and provide the file and note arguments with the Notefile ID and Note ID, respectively.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.get\",\n  \"file\": \"my-settings.db\",\n  \"note\": \"measurements\"\n}\n\nThe request above will return the measurements Note in the my-settings.db Notefile and the time of creation or the most recent update (shown below).\n\nCOPY\n{\n \"note\": \"measurements\",\n \"body\": {\n  \"interval\": 60\n },\n \"time\": 1598916085\n}\nDeleting Notes from a DB Notefile\n\nTo delete a DB Note after retrieval, use the delete argument.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.get\",\n  \"file\": \"my-settings.db\",\n  \"note\": \"measurements\",\n  \"delete\": true\n}\n\nAlternatively, if you do not need to retrieve the Note, delete the Note with the note.delete request. If successful, this request will return an empty JSON object ({}).\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.delete\",\n  \"file\": \"my-settings.db\",\n  \"note\": \"measurements\"\n}\n\nBecause DB Notefiles are shared between the Notecard and Notehub, updates and deletions made by either are reconciled during each sync.\n\nUsing Database Notefiles for Local-Only State\n\n(Added in v2.1.1)\n\nSometimes, your host may wish to use the Notecard to store application state or configuration, but you do not want that state to be synchronized to Notehub. For these cases, you can use the .dbx extension to create a Local-only Notefile. The semantics for adding, updating, and deleting local-only Database", "start_char_idx": 7181, "end_char_idx": 8618, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "166ae2cf-d6f4-4756-a48b-c31149434dd3": {"__data__": {"id_": "166ae2cf-d6f4-4756-a48b-c31149434dd3", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "18410c49-0b65-4699-a0ad-1e151ed7adb8", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "948a16090d147ce70f8a10fb03a919f3d08536f0b4552f93334973d0effe7975"}, "3": {"node_id": "9e82621a-bf7a-420a-b33b-12c3dd34e928", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "1322985ac49e49a4c00a4aa2762fa983d0e9620cb381e091c87c471538508004"}}, "hash": "6a77ce2f288719ea643dc5cffbf38b1f00a610d71225b6544409236e51dae010", "text": "The semantics for adding, updating, and deleting local-only Database Notefiles is the same as detailed above for replicated Database files.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.add\",\n  \"file\": \"local-config.dbx\",\n  \"note\": \"sensor-types\",\n  \"body\": {\"temp\": \"si7201\", \"gas\": \"bme680\"}\n}\nUsing Change Trackers with Inbound Data\n\nIf your host needs to work with inbound data on a regular basis within and across Notefiles, you can use a change tracker to incrementally work with inbound data. A change tracker is identified by a developer-defined string, like my_inbound_requests, and used to associate additions and deletions to Notefiles.\n\nNote\n\nChange trackers are associated with their respective files. Once a change tracker is created, it will consume resources until the changes have been queried. As a result, change trackers should not be created without a plan to consume the accumulated changes, and should be removed when no longer needed.\n\nConfiguring a Change Tracker for a Notefile\n\nTo set-up a change tracker for a single file, use the note.changes request with the Notefile ID as file, and a change tracker ID in the tracker argument.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.changes\",\n  \"file\": \"my-settings.db\",\n  \"tracker\": \"my_inbound_requests\"\n}\n\nThis request returns an object with the total number of Notes in the Notefile, the total number of Notes changed since the change tracker was started, and an object containing each Note body, organized by ID.\n\nCOPY\n{\n  \"changes\": 4,\n  \"total\": 4,\n  \"notes\": {\n    \"setting-one\": { \"body\": {", "start_char_idx": 8626, "end_char_idx": 10187, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "9e82621a-bf7a-420a-b33b-12c3dd34e928": {"__data__": {"id_": "9e82621a-bf7a-420a-b33b-12c3dd34e928", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "166ae2cf-d6f4-4756-a48b-c31149434dd3", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "6a77ce2f288719ea643dc5cffbf38b1f00a610d71225b6544409236e51dae010"}, "3": {"node_id": "951e533c-6e22-414d-b319-e856801e23de", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "c97c74d5d6f1b24dcc5107d4c2972ffa75816aabb43d08c20ab8a12b3dfd2ffa"}}, "hash": "1322985ac49e49a4c00a4aa2762fa983d0e9620cb381e091c87c471538508004", "text": " \"notes\": {\n    \"setting-one\": { \"body\": { \"foo\": \"bar\" }, \"time\": 1598918235 },\n    \"setting-two\": { \"body\": { \"foo\": \"bat\" }, \"time\": 1598918245 },\n    \"setting-three\": { \"body\": { \"foo\": \"baz\" }, \"time\": 1598918225 },\n    \"setting-four\": { \"body\": { \"foo\": \"foo\" }, \"time\": 1598910532 }\n  }\n}\n\nOn the first call, a tracker is instantiated, and the inbound tracker lists all existing Notes in a Notefile. When a tracker is instantiated, the state changes from zero Notes being tracked, to all the Notes in a Notefile being tracked. As a result, the list of changes, or all notes, are displayed.\n\nChange trackers on queue Notefiles (.qi/.qis)\n\nContinuing with the example above, assume three more settings have been added to the DB Notefile, my-settings.db.\n\nUse the max argument to limit the number of notes returned when querying a change tracker.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.changes\",\n  \"file\": \"my-settings.db\",\n  \"tracker\": \"my_inbound_requests\",\n  \"max\": 2\n}\n\nSubsequent calls to note.changes will display changed files only, while hiding previously viewed changes.\n\nCOPY\n// First Request\n{\n  \"changes\": 3,\n  \"total\":   7,\n  \"notes\":   {\n    \"setting-five\": {\"body\":{\"bim\": \"bam\"},\"time\":1598912838},\n    \"setting-six\": {\"body\":{\"bing\": \"bong\"},\"time\":1598923484}\n  }\n}\n\n// Second Request\n{\n ", "start_char_idx": 10215, "end_char_idx": 11527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "951e533c-6e22-414d-b319-e856801e23de": {"__data__": {"id_": "951e533c-6e22-414d-b319-e856801e23de", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "9e82621a-bf7a-420a-b33b-12c3dd34e928", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "1322985ac49e49a4c00a4aa2762fa983d0e9620cb381e091c87c471538508004"}, "3": {"node_id": "46617a72-4fdb-4f3f-afcf-1ee78dedee96", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "48d0f3af1971d6911c21aebc877b9178a3d8c21dac8cca88af578d6d7de72bb6"}}, "hash": "c97c74d5d6f1b24dcc5107d4c2972ffa75816aabb43d08c20ab8a12b3dfd2ffa", "text": " }\n}\n\n// Second Request\n{\n  \"changes\": 1,\n  \"total\":   7,\n  \"notes\":   {\n    \"setting-seven\": {\"body\":{\"zip\": \"zap\"},\"time\":1598927365}\n  }\n}\n\n// Third Request\n{\"total\":7}\n\nNotes will be retrieved incrementally until all Notes are returned, at which point, an object with only the total field is returned.\n\nBy default, Notes returned in note.changes are not deleted. If you want to delete them from the Notefile set the delete argument to true.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.changes\",\n  \"file\": \"my-settings.db\",\n  \"tracker\": \"my_inbound_requests\",\n  \"delete\": true\n}\nResetting a Change Tracker\n\nIf changes need to be reprocessed for any given reason, the reset parameter allows you to reset the change counter and tracker to their original states.\n\nTo reset a change tracker, perform a request to note.changes with the Notefile and change tracker id, and set the reset argument to true.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.changes\",\n  \"file\": \"my-settings.db\",\n  \"tracker\": \"my_inbound_requests\",\n  \"reset\": true\n}\nDeleting a Change Tracker\n\nChange trackers are meant to be long-lived and enable you to easily scan for changes on the Notecard at any time. As such, you won't often need to delete a change tracker unless the needs of your application change.\n\nTo delete a change tracker, perform a request to note.changes with the Notefile and change tracker id, and set the stop argument to true.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\":", "start_char_idx": 11538, "end_char_idx": 12986, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "46617a72-4fdb-4f3f-afcf-1ee78dedee96": {"__data__": {"id_": "46617a72-4fdb-4f3f-afcf-1ee78dedee96", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "951e533c-6e22-414d-b319-e856801e23de", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "c97c74d5d6f1b24dcc5107d4c2972ffa75816aabb43d08c20ab8a12b3dfd2ffa"}, "3": {"node_id": "7cda291d-0bca-4099-9b3d-bc2278c54e76", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e3b43cf584448aff5cab3736afa665d95a2dc6b07c2cbadbd1e7c2e2d72cb50d"}}, "hash": "48d0f3af1971d6911c21aebc877b9178a3d8c21dac8cca88af578d6d7de72bb6", "text": " \"req\": \"note.changes\",\n  \"file\": \"my-settings.db\",\n  \"tracker\": \"my_inbound_requests\",\n  \"stop\": true\n}\nUsing Change Trackers Across Multiple Notefiles\n\nTo use a change tracker with multiple files, use the tracker argument with the file.changes request, and provide a list of files to track.\n\nAnalogous to note.changes, the first request will create trackers of the same name on each of the Notefiles listed, and each subsequent request will query those existing trackers and return the results as a single response.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"file.changes\",\n  \"tracker\": \"multi-file-tracker\",\n  \"files\": [\"my-settings.db\", \"other-settings.db\"]\n}\n\nThe response returns the number of changes per file, as well as the total changes across all files.\n\nCOPY\n{\n  \"changes\": 5,\n  \"total\": 5,\n  \"info\": {\n    \"my-settings.db\": { \"changes\": 3, \"total\": 3 },\n    \"other-settings.db\": { \"changes\": 2, \"total\": 2 }\n  }\n}\n\nUsing the file.changes tracker syntax provides an efficient way to quickly query several files and determine which files have changed. Once the changed files are known, you can process those individual Notefiles using the note.changes API outlined above.\n\nHandling Notecard Interrupts\n\nHost applications that interface with the Notecard often need to determine if the Notecard has received inbound data for the host to process. This can be achieved through periodic polling and the use of change trackers, as described in \"Using Change Trackers with Inbound Data.\" However, this approach can be power-intensive on the host and difficult to optimize for low-power applications. As such,", "start_char_idx": 13004, "end_char_idx": 14610, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "7cda291d-0bca-4099-9b3d-bc2278c54e76": {"__data__": {"id_": "7cda291d-0bca-4099-9b3d-bc2278c54e76", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "46617a72-4fdb-4f3f-afcf-1ee78dedee96", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "48d0f3af1971d6911c21aebc877b9178a3d8c21dac8cca88af578d6d7de72bb6"}, "3": {"node_id": "992b0c39-c570-4f71-8aa0-f70fccba1240", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "eff389d06ebd34d3ed37439d5fcbb804bff27c8c552e694eb3025df10f454701"}}, "hash": "e3b43cf584448aff5cab3736afa665d95a2dc6b07c2cbadbd1e7c2e2d72cb50d", "text": "on the host and difficult to optimize for low-power applications. As such, the Notecard exposes a hardware pin called ATTN (referred to as the \"attention pin\"), which is used to notify the host that the Notecard has detected an event of interest. The card.attn request is used to configure the behavior of the ATTN pin.\n\nDepending upon its configuration, the Notecard can notify the host MCU in one or more of the following scenarios:\n\nWhen the Notecard receives a Note in specified Notefiles.\nWhen the Notecard connects to Notehub.\nWhen the Notecard detects motion.\nWhen the Notecard detects a location change.\nWhen the Notecard detects a change to its network state.\nWhen the Notecard is configured as a Watchdog timer.\nInterrupt behavior\n\nArming the interrupt causes the Notecard to pull the ATTN pin LOW. When armed, the GPIO connected to the Notecard attention pin will also read LOW, unless one of the monitored events occurs, in which case the pin will read HIGH. The interrupt is a latching interrupt. This means once it is armed, it will stay LOW until it has been disarmed or fired, and conversely, once fired it will remain HIGH until it has been rearmed.\n\nNote\n\nIn order to take full advantage of this behavior, you must correctly configure your host microcontroller. The two most common configurations, are attaching the Notecard's ATTN pin to an interrupt capable, GPIO pin or to the chip enable (EN) pin on the host MCU. In either case, your host MCU should respond by obtaining inbound file changes, rearming the interrupt, or performing other application specific actions.\n\nConfiguring the Attention Pin\n\nIn a card.attn request, the mode argument is the primary interface for configuring the attention configurations described below. In addition, this argument is", "start_char_idx": 14554, "end_char_idx": 16334, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "992b0c39-c570-4f71-8aa0-f70fccba1240": {"__data__": {"id_": "992b0c39-c570-4f71-8aa0-f70fccba1240", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "7cda291d-0bca-4099-9b3d-bc2278c54e76", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e3b43cf584448aff5cab3736afa665d95a2dc6b07c2cbadbd1e7c2e2d72cb50d"}, "3": {"node_id": "c81ca57d-f923-4cff-8e64-65b574e1eadf", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "22b381f9636b9125eb4f3752cbb90d02860e9255e3d32080c7eb496a24a69438"}}, "hash": "eff389d06ebd34d3ed37439d5fcbb804bff27c8c552e694eb3025df10f454701", "text": "primary interface for configuring the attention configurations described below. In addition, this argument is used to arm and disarm the attention pin, ATTN. The mode argument accepts both single arguments, and a comma-separated list of keywords that enable the configurations described below.\n\nDisarming the Attention Pin\n\nTo disarm the pin, pass disarm into the mode argument. Disarming the attention pin pulls the pin HIGH.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"disarm\"\n}\n\nAs of Notecard firmware v3.2.1, if you have multiple attention modes configured as detailed below, you can disarm all of these at once with the -all flag.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"disarm,-all\"\n}\nArming the Attention Pin\n\nTo arm the attention pin, pass arm into the mode argument of a card.attn request, along with the optional keywords or parameters that correspond with your desired configuration.\n\nSetting an Attention Timeout\n\nThe simplest attention mode configuration is to arm the pin, and instruct the Notecard to bring the pin HIGH after a timeout of n seconds. You can do this with the seconds argument, and by setting mode to arm.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"arm\",\n  \"seconds\": 10\n}\n\nThis request will return an empty JSON object ({}). Then, after the timeout has elapsed, the attention pin will be pulled HIGH by the Notecard. You can confirm that the attention pin has fired by making a request to card.attn with no arguments.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\":", "start_char_idx": 16302, "end_char_idx": 17836, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "c81ca57d-f923-4cff-8e64-65b574e1eadf": {"__data__": {"id_": "c81ca57d-f923-4cff-8e64-65b574e1eadf", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "992b0c39-c570-4f71-8aa0-f70fccba1240", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "eff389d06ebd34d3ed37439d5fcbb804bff27c8c552e694eb3025df10f454701"}, "3": {"node_id": "395a5a2d-f66d-4cde-baea-af3a4871e052", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "2eb2539b1b5d5456d73d4a980c90dd6b7b9e90cb303824d10fde5d8bb8d1ba1b"}}, "hash": "22b381f9636b9125eb4f3752cbb90d02860e9255e3d32080c7eb496a24a69438", "text": " \"req\": \"card.attn\"\n}\n\nThis request will return an object with a boolean, set, reflecting the state of the ATTN pin and a files array. The files array contains the timeout keyword, reflecting a timeout has occurred.\n\nCOPY\n{\n  \"files\": [\"timeout\"],\n  \"set\": true\n}\n\nIf the attention pin has not fired, a request to card.attn will return an empty JSON object ({}).\n\nNote\n\nThe files parameter is used as an input/output parameter with a list of files to watch for changes, and also to receive a list of Notefile IDs that have changed when using files mode.\n\nWatching for File Changes\n\nIf you want your host to be notified when the Notecard detects file changes, use files in the mode argument, as well as the files argument to provide an array of one or more Notefiles to watch.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"arm,files\",\n  \"files\": [\"data.qi\", \"my-settings.db\"]\n}\n\nAlternatively, pass an empty string array to the files argument to watch all Notefiles on the Notecard.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"arm,files\",\n  \"files\": [\"\"]\n}\n\nThe interrupt fires when the Notecard detects a change to a watched file. You can use a no argument, card.attn request to determine which file has changed. The response object will contain the name of the modified file, so you can issue a note.changes request to get new or modified Notes.\n\nCOPY\n{\n  \"files\": [\"data.qi\", \"modified\"],\n  \"set\": true\n}\n\nTo disable file mode, issue another card.attn request, and add a dash before the", "start_char_idx": 17927, "end_char_idx": 19443, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "395a5a2d-f66d-4cde-baea-af3a4871e052": {"__data__": {"id_": "395a5a2d-f66d-4cde-baea-af3a4871e052", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "c81ca57d-f923-4cff-8e64-65b574e1eadf", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "22b381f9636b9125eb4f3752cbb90d02860e9255e3d32080c7eb496a24a69438"}, "3": {"node_id": "1fd3f903-df1a-4a02-b714-3dba25fae9e0", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "05e81d89d494e0498c1a82faf9ffb5ec22a50dae3bcdd4fa513f579001a30a0b"}}, "hash": "2eb2539b1b5d5456d73d4a980c90dd6b7b9e90cb303824d10fde5d8bb8d1ba1b", "text": "disable file mode, issue another card.attn request, and add a dash before the files string in the mode argument to indicate that it should be disabled.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"-files\"\n}\nWatching for Service Connections\n\nThe attention pin can be set to fire whenever the Notecard successfully connects to Notehub with the connected string in the mode argument.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"arm,connected\"\n}\n\nThe interrupt fires the next time the Notecard connects. You can use a no argument, card.attn request to confirm the reason. In connection mode, the files array in a card.attn response object will include the connected string.\n\nCOPY\n{\n  \"files\": [\"connected\"],\n  \"set\": true\n}\n\nTo disable connection mode, issue another card.attn request, and add a dash before the connected string in the mode argument to indicate that it should be disabled.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"-connected\"\n}\nWatching for Notecard Motion\n\nThe attention pin can be set to fire whenever the Notecard accelerometer detects motion with the motion string in the mode argument.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"arm,motion\"\n}\n\nThe interrupt fires when the accelerometer detects movement. You can use a no argument, card.attn request to confirm the reason. In motion mode, the files array in a card.attn response object will include the motion string.\n\nCOPY\n{\n  \"files\": [\"motion\"],\n  \"set\": true\n}\n\nTo disable", "start_char_idx": 19385, "end_char_idx": 20892, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "1fd3f903-df1a-4a02-b714-3dba25fae9e0": {"__data__": {"id_": "1fd3f903-df1a-4a02-b714-3dba25fae9e0", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "395a5a2d-f66d-4cde-baea-af3a4871e052", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "2eb2539b1b5d5456d73d4a980c90dd6b7b9e90cb303824d10fde5d8bb8d1ba1b"}, "3": {"node_id": "129874c9-a008-4be2-9840-15c4b87ffd6c", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "dbee1d62554e06f09a5565ac5ec8b6de3f075676a6b417620c9cdb7afddeb98d"}}, "hash": "05e81d89d494e0498c1a82faf9ffb5ec22a50dae3bcdd4fa513f579001a30a0b", "text": " \"files\": [\"motion\"],\n  \"set\": true\n}\n\nTo disable motion mode, issue another card.attn request, and add a dash before the motion string in the mode argument to indicate that it should be disabled.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"-motion\"\n}\nWatching for Notecard Location Updates\n\nThe attention pin can be set to fire whenever the Notecard GNSS hardware detects a location update with the location string in the mode argument.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"arm,location\"\n}\n\nThe interrupt fires when a location change is detected. You can use a no argument, card.attn request to confirm the reason. In location mode, the files array in a card.attn response object will include the location string.\n\nCOPY\n{\n  \"files\": [\"location\"],\n  \"set\": true\n}\n\nTo disable location mode, issue another card.attn request, and add a dash before the location string in the mode argument to indicate that it should be disabled.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"-location\"\n}\nWatching for Environment Variable Changes\n\nThe attention pin can be set to fire whenever the Notecard detects an Environment Variable update with the env string in the mode argument.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"arm,env\"\n}\n\nThe interrupt fires when an Environment Variable change is detected. You can use a no argument, card.attn request to confirm the reason. In env mode, the files array in a card.attn response object will include the env", "start_char_idx": 20915, "end_char_idx": 22422, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "129874c9-a008-4be2-9840-15c4b87ffd6c": {"__data__": {"id_": "129874c9-a008-4be2-9840-15c4b87ffd6c", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "1fd3f903-df1a-4a02-b714-3dba25fae9e0", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "05e81d89d494e0498c1a82faf9ffb5ec22a50dae3bcdd4fa513f579001a30a0b"}, "3": {"node_id": "078a84c0-1202-4ec4-a8c3-1e660bc340d1", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "3bd944782b8c95bdafd400dd3e032ffdab2f97d9d674a24db0202074c44c0648"}}, "hash": "dbee1d62554e06f09a5565ac5ec8b6de3f075676a6b417620c9cdb7afddeb98d", "text": "In env mode, the files array in a card.attn response object will include the env string.\n\nCOPY\n{\n  \"files\": [\"env\"],\n  \"set\": true\n}\n\nTo disable env mode, issue another card.attn request, and add a dash before the env string in the mode argument to indicate that it should be disabled.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"-env\"\n}\nWatching for Notecard Network Status Changes\n\nThe attention pin can be set to fire whenever the Notecard detects a change in the network status it communicates via the card.wireless request.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"arm,wireless\"\n}\n\nThe interrupt fires when a network status change is detected. You can use a no argument, card.wireless request to inspect the change. In wireless mode, the files array in a card.attn response object will include the wireless string.\n\nCOPY\n{\n  \"files\": [\"wireless\"],\n  \"set\": true\n}\n\nTo disable wireless mode, issue another card.attn request, and add a dash before the wireless string in the mode argument to indicate that it should be disabled.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"-wireless\"\n}\nUsing Multiple Modes Together\n\nThe modes described above are not mutually-exclusive, and can be used together. Simply provide a comma between each watch mode when calling card.attn:\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"arm,files,connected,location\",\n  \"files\": [\"data.qi\"]\n}\n\nWhen multiple modes", "start_char_idx": 22400, "end_char_idx": 23854, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "078a84c0-1202-4ec4-a8c3-1e660bc340d1": {"__data__": {"id_": "078a84c0-1202-4ec4-a8c3-1e660bc340d1", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "129874c9-a008-4be2-9840-15c4b87ffd6c", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "dbee1d62554e06f09a5565ac5ec8b6de3f075676a6b417620c9cdb7afddeb98d"}, "3": {"node_id": "846dc17c-8c1d-416a-ad7f-db128bf01d4e", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "c1b8f1d918af4aa191806dd86e5ddaa85d0f77286f288ace7693be7ee639fee2"}}, "hash": "3bd944782b8c95bdafd400dd3e032ffdab2f97d9d674a24db0202074c44c0648", "text": " \"files\": [\"data.qi\"]\n}\n\nWhen multiple modes are used together, no argument calls to card.attn will identify all of the modes and files that caused the pin to fire.\n\nCOPY\n{\n  \"files\": [\"data.qi\", \"motion\", \"connected\"],\n  \"set\": true\n}\nMiscellaneous File Requests\n\nTo obtain information about local Notefiles on the Notecard, use the file.stats request.\n\nCOPY\n{\n  \"req\": \"file.stats\"\n}\n\nThis request returns a total number of notes across all Notefiles, a count of the number of Notes pending sync to Notehub (changes), if any, and a sync field of true if a sync is recommended based on the number of pending notes. This field should be considered false, if not present.\n\nCOPY\n{\n \"changes\": 1,\n \"total\": 4\n}\n\nFor details on Notes pending sync, use the file.changes.pending request.\n\nCOPY\n{\n  \"req\": \"file.changes.pending\"\n}\n\nThis request returns a pending boolean indicating whether any Notes are pending sync, total notes and changes across all files, as well as a per-file listing of pending changes.\n\nCOPY\n{\n \"changes\": 2,\n \"total\": 2,\n \"pending\": true,\n \"info\": {\n  \"sensors.qo\": {\n   \"changes\": 1,\n   \"total\": 1\n  },\n  \"data.qo\": {\n   \"changes\": 1,\n   \"total\": 1\n  }\n }\n}\n\nFinally, to delete a Notefile and all of the Notes contained within, use the file.delete request. This request accepts a single argument files, which is an array of Notefiles to delete. If successful, this request will return an empty JSON object ({}).\n\nCOPY\n{\n", "start_char_idx": 23881, "end_char_idx": 25320, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "846dc17c-8c1d-416a-ad7f-db128bf01d4e": {"__data__": {"id_": "846dc17c-8c1d-416a-ad7f-db128bf01d4e", "embedding": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5c0f300-73b9-4172-8f7a-5ad2bf0649bc", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "e4933fc49f98ddbf4c28455b62696609b38652b00b944cc20465fb957314db77"}, "2": {"node_id": "078a84c0-1202-4ec4-a8c3-1e660bc340d1", "node_type": null, "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}, "hash": "3bd944782b8c95bdafd400dd3e032ffdab2f97d9d674a24db0202074c44c0648"}}, "hash": "c1b8f1d918af4aa191806dd86e5ddaa85d0f77286f288ace7693be7ee639fee2", "text": "this request will return an empty JSON object ({}).\n\nCOPY\n{\n  \"req\":  \"file.delete\",\n  \"files\" [\"sensors.qo\"]\n}\nTime & Location Requests\nWeb Transactions\nCan we improve this page? Send us feedback", "start_char_idx": 25300, "end_char_idx": 25496, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"a5c0f300-73b9-4172-8f7a-5ad2bf0649bc": {"node_ids": ["5a08254f-9b88-4e14-b44b-87650881cee6", "696d031b-5347-4b43-9b72-43758f0c88f9", "dc891bd3-1cf6-439f-861f-b2d1eecf28a0", "8b12438c-b5ee-42f4-b326-ac5ebe2532cf", "7ae9b5f1-a420-4fa4-b99b-f5c18537e16f", "18410c49-0b65-4699-a0ad-1e151ed7adb8", "166ae2cf-d6f4-4756-a48b-c31149434dd3", "9e82621a-bf7a-420a-b33b-12c3dd34e928", "951e533c-6e22-414d-b319-e856801e23de", "46617a72-4fdb-4f3f-afcf-1ee78dedee96", "7cda291d-0bca-4099-9b3d-bc2278c54e76", "992b0c39-c570-4f71-8aa0-f70fccba1240", "c81ca57d-f923-4cff-8e64-65b574e1eadf", "395a5a2d-f66d-4cde-baea-af3a4871e052", "1fd3f903-df1a-4a02-b714-3dba25fae9e0", "129874c9-a008-4be2-9840-15c4b87ffd6c", "078a84c0-1202-4ec4-a8c3-1e660bc340d1", "846dc17c-8c1d-416a-ad7f-db128bf01d4e"], "metadata": {"title": "", "category": "Inbound Requests And Shared Data", "url": "https://dev.blues.io/notecard/notecard-walkthrough/inbound-requests-and-shared-data/"}}}}