{"docstore/metadata": {"351797a4-6310-4fa1-b872-f13e408be829": {"doc_hash": "753028bc76ff5ba704c83a75d803a60f24d0326d935ffb613c47e68210091318"}, "0e1c263d-8b75-4401-8ffa-436f29bb4545": {"doc_hash": "47afa6c80b20587de861a16a334d4eec78b55c626e81ec9ee649373b57ed2942", "ref_doc_id": "351797a4-6310-4fa1-b872-f13e408be829"}, "71a70ab8-89f1-44cb-937f-4f9e665fb258": {"doc_hash": "7e0c961d6caf7e8a31ab99a3e8762c75ed8ca06f15ac81db30ee3e1046556257", "ref_doc_id": "351797a4-6310-4fa1-b872-f13e408be829"}, "77389edd-d831-4862-bdd7-4d01fa9f461c": {"doc_hash": "7bf5ce5c668f7afb609fe067356ad5f9ea461cf3f4b5ec0e1130bf901b877bdf", "ref_doc_id": "351797a4-6310-4fa1-b872-f13e408be829"}, "446f8131-7e6b-4a2b-863b-f50f468d2e84": {"doc_hash": "ab44c7a528e2c672d2522cd558a1c36763cc3d516b11470f4033f88018c20b54", "ref_doc_id": "351797a4-6310-4fa1-b872-f13e408be829"}, "ff288515-fdbc-463b-9af4-446b68560f51": {"doc_hash": "a67018108d5b0785179b42432166a92b0188255f34c3284e90604394175e8b5c", "ref_doc_id": "351797a4-6310-4fa1-b872-f13e408be829"}, "dc149382-7e1e-4afc-9fe2-213b291b873c": {"doc_hash": "610b6e014321fa3f0384c5b9956061b39e2aca7bd62cd1c07ad7d47e3f2b5507", "ref_doc_id": "351797a4-6310-4fa1-b872-f13e408be829"}, "14a4c3d9-15a4-4d1a-904a-5ac86bc582e3": {"doc_hash": "ff1db9b513fb3e111f5443a7d1c6b92ac8c28c01a1411574dcd6e8df91254c92", "ref_doc_id": "351797a4-6310-4fa1-b872-f13e408be829"}}, "docstore/data": {"0e1c263d-8b75-4401-8ffa-436f29bb4545": {"__data__": {"id_": "0e1c263d-8b75-4401-8ffa-436f29bb4545", "embedding": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351797a4-6310-4fa1-b872-f13e408be829", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "753028bc76ff5ba704c83a75d803a60f24d0326d935ffb613c47e68210091318"}, "3": {"node_id": "71a70ab8-89f1-44cb-937f-4f9e665fb258", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "7e0c961d6caf7e8a31ab99a3e8762c75ed8ca06f15ac81db30ee3e1046556257"}}, "hash": "47afa6c80b20587de861a16a334d4eec78b55c626e81ec9ee649373b57ed2942", "text": "ABCDEFGHIJKLMNOPQRSTUVWXYZ\nAccount\n\nMetadata (email, role(s), etc.) maintained by a Notehub for an individual who has access to that Notehub for use in developing or operating Notecard-based applications.\n\nAppUID\n\nA globally-unique string identifier for a given Notehub application in the following format:\n\napp:00000000-0000-0000-0000-000000000000\n\nBody\n\nA JSON object containing data needed by an application. The contents of this object are up to the developer and can include any keys, values and nested objects required, as long as the object is valid JSON.\n\nExample\nConsumption Credit\n\nA Consumption Credit is a unit of measure used to pay for Notehub services, such as routing events. More information is available on our pricing page.\n\nCustomer\n\nThe entity or individual accountable for development of a product within which the Notecard is embedded.\n\nDeveloper\n\nSee, Customer\n\nDevice\n\nA product containing a Notecard. This may be the Notecard by itself, a Notecard on a Notecarrier, or embedded in a customer design.\n\nDeviceUID\n\nA globally-unique string identifier factory-assigned to the Notecard, such as the following.\n\ndev:000000000000000\n\nNote: This value is laser-engraved onto the Notecard; any customer wishing to use this as a part of their own product's serial number may easily do so as a part of their manufacturing process.\n\nEnvironment Variable\n\nEnvironment Variables are a state and settings management feature that allows for various levels of control for variables that apply to a Device, across a Fleet, or to all devices in a Project.\n\nThese values are key-value pairs and can be set in Notehub.io or via the Notehub API. They propagate to devices using the same synchronization mechanism used for Notes and Notefiles.\n\nFor more information, please see Understanding Environment Variables.\n\nEventUID\n\nA", "start_char_idx": 0, "end_char_idx": 1830, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "71a70ab8-89f1-44cb-937f-4f9e665fb258": {"__data__": {"id_": "71a70ab8-89f1-44cb-937f-4f9e665fb258", "embedding": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351797a4-6310-4fa1-b872-f13e408be829", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "753028bc76ff5ba704c83a75d803a60f24d0326d935ffb613c47e68210091318"}, "2": {"node_id": "0e1c263d-8b75-4401-8ffa-436f29bb4545", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "47afa6c80b20587de861a16a334d4eec78b55c626e81ec9ee649373b57ed2942"}, "3": {"node_id": "77389edd-d831-4862-bdd7-4d01fa9f461c", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "7bf5ce5c668f7afb609fe067356ad5f9ea461cf3f4b5ec0e1130bf901b877bdf"}}, "hash": "7e0c961d6caf7e8a31ab99a3e8762c75ed8ca06f15ac81db30ee3e1046556257", "text": "more information, please see Understanding Environment Variables.\n\nEventUID\n\nA globally-unique string identifier for a given Notehub event in the following format:\n\n00000000-0000-0000-0000-000000000000\n\nFleet\n\nAn arbitrary, customer-defined grouping of one or more Devices in a Notehub. Fleets can be used to define groups of Devices for uniform management, updates, and more. A Device may only belong to a single fleet at a time.\n\nFleetUID\n\nA globally-unique string identifier assigned to a fleet, such as the following.\n\nfleet:00000000-0000-0000-0000-000000000000\n\nHost MCU\n\nA Host Microcontroller Unit (or Host MCU) is a Customer Programmed and managed device that is used to send requests to and receive responses from a Notecard. The Host MCU is typically the main processor in a Customer product, connects to and controls other sensors, and facilitates communications to a from a connected Notecard.\n\nJSON\n\nJavaScript Object Notation (or JSON) is, according to json.org a \"a lightweight data-interchange format. It is easy for humans to read and write. It is easy for machines to parse and generate.\" The Notecard exclusively uses JSON for inbound and outbound communication because it provides a schema-less, human readable, machine parseable format that doesn't add more overhead than needed to network traffic.\n\nJSON objects are stored as Notes in Notefiles using the Newline Delimited JSON format, which separates each valid JSON object with a line separator \\n. Because of this, newline characters (\\r and \\n) are not allowed in developer-defined JSON bodies.\n\nNote\n\nA JSON object containing a developer-provided body and/or payload, as well as associated metadata managed by the Notecard itself, such as: the time the Note was added, cell tower information, product, and device info.\n\nThe body must also be a valid JSON object and is set by sending a note.add request to", "start_char_idx": 1759, "end_char_idx": 3641, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "77389edd-d831-4862-bdd7-4d01fa9f461c": {"__data__": {"id_": "77389edd-d831-4862-bdd7-4d01fa9f461c", "embedding": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351797a4-6310-4fa1-b872-f13e408be829", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "753028bc76ff5ba704c83a75d803a60f24d0326d935ffb613c47e68210091318"}, "2": {"node_id": "71a70ab8-89f1-44cb-937f-4f9e665fb258", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "7e0c961d6caf7e8a31ab99a3e8762c75ed8ca06f15ac81db30ee3e1046556257"}, "3": {"node_id": "446f8131-7e6b-4a2b-863b-f50f468d2e84", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "ab44c7a528e2c672d2522cd558a1c36763cc3d516b11470f4033f88018c20b54"}}, "hash": "7bf5ce5c668f7afb609fe067356ad5f9ea461cf3f4b5ec0e1130bf901b877bdf", "text": "body must also be a valid JSON object and is set by sending a note.add request to the Notecard.\n\nCOPY\n{\n  \"req\": \"note.add\",\n  \"body\": {\n    \"temp\": 24.6875,\n    \"voltage\": 4.99763\n  }\n}\n\nIn addition, if an application has pre-existing binary data that needs to be synchronized, that data can be Base64-encoded and specified as a payload. A Note can contain both a body and payload, if needed.\n\nCOPY\n{\n  \"req\": \"note.add\",\n  \"payload\": \"ewogICAgInRlbXAiOiAyMy4xMzQKfQ==\"\n}\n\nWhen added, a Note is annotated with time, location, product, and session data and stored in a Notefile before it is synchronized with Notehub.\n\nHere's an example of a Note with a custom body and its associated metadata:\n\nExample\nNote ID\n\nThe unique identifier of a Note in a Notefile. For .qi and .qo Notefiles these are system-generated. They are never needed in a request, but may be returned in the response body of some commands, like note.changes. In .db files, where Notes are meant to be long-lived and replicated between the Notecard and Notehub, the identifiers are developer-specified so that specific notes within the .db file can be read, updated and deleted.\n\nFor example, when requesting changes from a DB Notefile, like so:\n\nCOPY\n{\n \"req\": \"note.changes\",\n \"file\": \"my-settings.db\",\n \"tracker\": \"inbound-tracker\",\n \"start\": true\n}\n\nThe Notes returned are keyed by their Note ID (\"setting-one\", \"setting-two\", etc). This Note ID value is also used with the note.delete and note.update requests to delete or update Notes in a DB Notefile.\n\nCOPY\n{\n", "start_char_idx": 3649, "end_char_idx": 5184, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "446f8131-7e6b-4a2b-863b-f50f468d2e84": {"__data__": {"id_": "446f8131-7e6b-4a2b-863b-f50f468d2e84", "embedding": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351797a4-6310-4fa1-b872-f13e408be829", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "753028bc76ff5ba704c83a75d803a60f24d0326d935ffb613c47e68210091318"}, "2": {"node_id": "77389edd-d831-4862-bdd7-4d01fa9f461c", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "7bf5ce5c668f7afb609fe067356ad5f9ea461cf3f4b5ec0e1130bf901b877bdf"}, "3": {"node_id": "ff288515-fdbc-463b-9af4-446b68560f51", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "a67018108d5b0785179b42432166a92b0188255f34c3284e90604394175e8b5c"}}, "hash": "ab44c7a528e2c672d2522cd558a1c36763cc3d516b11470f4033f88018c20b54", "text": "to delete or update Notes in a DB Notefile.\n\nCOPY\n{\n \"changes\": 4,\n \"total\": 4,\n \"notes\": {\n  \"setting-one\": {\n   \"body\": {\n    \"foo\": \"bar\"\n   },\n   \"time\": 1598918235\n  },\n  \"setting-two\": {\n   \"body\": {\n    \"foo\": \"bat\"\n   },\n   \"time\": 1598918245\n  },\n  \"setting-three\": {\n   \"body\": {\n    \"foo\": \"baz\"\n   },\n   \"time\": 1598918225\n  },\n  \"setting-four\": {\n   \"body\": {\n    \"foo\": \"foo\"\n   },\n   \"time\": 1598910532\n  }\n }\n}\nNotefile\n\nA named JSON file that contains one or more Notes. These files are automatically created when the first Note is added, are persisted to Notecard flash, and are managed by the Notecard's synchronization policies. Notefile names are arbitrary and developers can create multiple Notefiles for an application based on their needs, for example a Notefile for environmental sensor data and a Notefile for actuator readings.\n\nThe Notefile extension determines how the file is treated during transport and synchronization, as well as when it is persisted.\n\nFiles with the .db extension operate as a database of JSON records that is fully replicated between the Notecard and a Notehub. These files are persisted between syncs and are useful for maintaining configuration and status information relevant to your app.\nFiles with the .qo extension represent a queue that is considered outbound-only from the Notecard to a Notehub. Notes are added to these files between synchronizations, and are deleted once synchronization to a Notehub is complete.\nFiles with the .qi extension represent a queue that is considered inbound-only", "start_char_idx": 5206, "end_char_idx": 6760, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "ff288515-fdbc-463b-9af4-446b68560f51": {"__data__": {"id_": "ff288515-fdbc-463b-9af4-446b68560f51", "embedding": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351797a4-6310-4fa1-b872-f13e408be829", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "753028bc76ff5ba704c83a75d803a60f24d0326d935ffb613c47e68210091318"}, "2": {"node_id": "446f8131-7e6b-4a2b-863b-f50f468d2e84", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "ab44c7a528e2c672d2522cd558a1c36763cc3d516b11470f4033f88018c20b54"}, "3": {"node_id": "dc149382-7e1e-4afc-9fe2-213b291b873c", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "610b6e014321fa3f0384c5b9956061b39e2aca7bd62cd1c07ad7d47e3f2b5507"}}, "hash": "a67018108d5b0785179b42432166a92b0188255f34c3284e90604394175e8b5c", "text": "with the .qi extension represent a queue that is considered inbound-only from a Notehub to the Notecard. These files are created on a Notehub and are deleted from the hub once transferred to a Notecard.\nFiles with the .dbs, .qos, and .qis extension are secure variants of the types enumerated above. By default, communication sessions between a Notecard and Notehub are sent un-encrypted to save bandwidth. For sensitive data, however, using these extensions ensure that the data is always sent over encrypted TLS sessions.\nPayload\n\nA base64-encoded string of binary data needed by an application. As with a Body, the contents of this object are up to the developer and can include any binary data up to a maximum length of 250 bytes.\n\nFor example, this binary data\n\nExample\n\ncan be encoded and passed like so:\n\nExample\nProductUID\n\nA Notehub-managed, globally-unique identifier that is used to match Devices with Projects. This string value is specified upon Project creation, must be unique across all Projects on a Notehub, and can be reserved by a Customer in advance. The value is used during a device's auto-provisioning process to find the Notehub Project that will securely manage the device and its data.\n\nThe ProductUID is an arbitrary string chosen by the customer. Once claimed by a Customer on a Notehub, devices using hub.set with that given ProductUID will automatically be assigned to that Project.\n\nThe * character can be used as a wildcard to reserve all ProductUIDs in a namespace, like so:\n\ncom.tesla.*\n\nOnce reserved, an individual Project might use a ProductUID like com.tesla.model-s.p85d for associated devices.\n\nSee also: Finding the ProductUID of a Notehub Project\n\nProduct SN\n\nA Product Serial Number (or Product SN) is an optional string assigned by a Customer to a Device that enables them to correlate a given DeviceUID to a customer-manufactured product. The Product", "start_char_idx": 6743, "end_char_idx": 8639, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "dc149382-7e1e-4afc-9fe2-213b291b873c": {"__data__": {"id_": "dc149382-7e1e-4afc-9fe2-213b291b873c", "embedding": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351797a4-6310-4fa1-b872-f13e408be829", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "753028bc76ff5ba704c83a75d803a60f24d0326d935ffb613c47e68210091318"}, "2": {"node_id": "ff288515-fdbc-463b-9af4-446b68560f51", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "a67018108d5b0785179b42432166a92b0188255f34c3284e90604394175e8b5c"}, "3": {"node_id": "14a4c3d9-15a4-4d1a-904a-5ac86bc582e3", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "ff1db9b513fb3e111f5443a7d1c6b92ac8c28c01a1411574dcd6e8df91254c92"}}, "hash": "610b6e014321fa3f0384c5b9956061b39e2aca7bd62cd1c07ad7d47e3f2b5507", "text": "them to correlate a given DeviceUID to a customer-manufactured product. The Product SN (and ProductUID) may either be assigned to the Notecard using a Request during Notecard initialization by the Host MCU, or may be programmed at the Customer's point of manufacturing by sending a Request on the USB, UART, AUX or I2C interface of the Notecard.\n\nProject\n\nA customer-defined entity that is associated with:\n\nAccounts belonging to a Customer's designated fleet operators and developers.\nFleets containing auto-provisioned Devices.\nRoutes assigned to fleets which transfer Device Notes to external APIs and Services.\nProjectUID\n\nA globally-unique string identifier assigned to a Notehub project, such as the following:\n\napp:00000000-0000-0000-0000-000000000000\n\nThe ProjectUID can be found in the Settings tab of a project in Notehub.\n\nRequest\n\nIn the context of the Notecard, a Request refers to a newline-delimited JSON object that is transmitted to the Notecard from a Host MCU (or a serial terminal connection from a development PC). Every request to the Notecard should take this form:\n\nExample\n\nWhere req is provided with every request and request-type corresponds to a valid request name as specified in this guide, and request-fields corresponds to one or more valid key-value pairs specific to a request-type.\n\nResponse\n\nIn the context of the Notecard, a Response refers to a newline-delimited JSON object that is transmitted from the Notecard from a Host MCU (or a serial terminal connection from a development PC) in response to a Request. Each Request will cause a single Response, and only a single Request will be outstanding at any given time.\n\nThe expected Response object will vary based on the Request type. An empty JSON object {} should be interpreted as a Request acknowledgement, and any Request that results in an error will receive a response that takes the following form:\n\nExample\nRoute\n\nAn", "start_char_idx": 8630, "end_char_idx": 10544, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "14a4c3d9-15a4-4d1a-904a-5ac86bc582e3": {"__data__": {"id_": "14a4c3d9-15a4-4d1a-904a-5ac86bc582e3", "embedding": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "351797a4-6310-4fa1-b872-f13e408be829", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "753028bc76ff5ba704c83a75d803a60f24d0326d935ffb613c47e68210091318"}, "2": {"node_id": "dc149382-7e1e-4afc-9fe2-213b291b873c", "node_type": null, "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}, "hash": "610b6e014321fa3f0384c5b9956061b39e2aca7bd62cd1c07ad7d47e3f2b5507"}}, "hash": "ff1db9b513fb3e111f5443a7d1c6b92ac8c28c01a1411574dcd6e8df91254c92", "text": "receive a response that takes the following form:\n\nExample\nRoute\n\nAn external API or Server location that should be forwarded Notes for a Device or Fleet upon receipt. Routes are defined in a Notehub for a Project, and can target a single Fleet or all devices. A Project can have multiple routes defined and active at any one time.\n\nLearn more about routing data with Notehub.\n\nRouteUID\n\nA globally-unique string identifier assigned to a Notehub route, such as the following:\n\nroute:8d65a087d5d290ce5bdf03aeff2becc0\n\nSerial Number\n\nSee Product Serial Number.\n\nSessionUID\n\nA globally-unique string identifier for a given Notehub session in the following format:\n\n00000000-0000-0000-0000-000000000000\n\nSignal\n\nA special type of Note designed for low-latency network communication. Signals are sent from Notecard to Notehub, and vice versa, as soon as they are created.\n\nSignals are only supported when a Notecard is in continuous mode.\n\nCan we improve this page? Send us feedback", "start_char_idx": 10548, "end_char_idx": 11525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"351797a4-6310-4fa1-b872-f13e408be829": {"node_ids": ["0e1c263d-8b75-4401-8ffa-436f29bb4545", "71a70ab8-89f1-44cb-937f-4f9e665fb258", "77389edd-d831-4862-bdd7-4d01fa9f461c", "446f8131-7e6b-4a2b-863b-f50f468d2e84", "ff288515-fdbc-463b-9af4-446b68560f51", "dc149382-7e1e-4afc-9fe2-213b291b873c", "14a4c3d9-15a4-4d1a-904a-5ac86bc582e3"], "metadata": {"title": "", "category": "Glossary", "url": "https://dev.blues.io/api-reference/glossary/"}}}}