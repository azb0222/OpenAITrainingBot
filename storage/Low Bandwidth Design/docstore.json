{"docstore/metadata": {"2b9d088f-599e-41c8-a576-104b90b0bca5": {"doc_hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "baa759d2-9ec2-4433-9c8e-68c273f3b6c8": {"doc_hash": "a64af64c3badb9a0c689cbe551fb766f0b9b2439a7f3899f6bf664f2c9350d73", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "f603b600-95a5-4b32-9b24-0b4b5d99184a": {"doc_hash": "4dd60eb0a89edf2322153ea99562f43afd8a10af1391171a400dab7b63333e5f", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "6e7a66a2-c19c-4fb3-b24f-9a7ac8969baa": {"doc_hash": "6dd2bbf3de1562c4eb3eb779baa645d379a628ad501066067ebfa78dcfabb656", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "93cdfd15-3552-478c-8d1a-d6909180ecd1": {"doc_hash": "b4e88da9a612bb7ed0dc50afb059adc9cf37809b1ba021eff67d77c0015da0ec", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "d9963415-4d4a-48b0-af6a-24c86a2bd1d8": {"doc_hash": "b279dc34c54af898081e16b911d682cc831bdfc7f278c556b0fc80eed18f05c9", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "0fd2ce4f-0dfd-4d74-ada4-b68309df797f": {"doc_hash": "bad7effc8ef8743e8efaeb7c9c92107bece4fed1e36db9af7b2e89c6b34941d5", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "379d610b-4cde-431e-ba10-08d99b2900b7": {"doc_hash": "588ea9cd596dc30444ca5215f68d70d5d1cf7ec55a94a3e1d94b5ad7e085da33", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "25372ab0-ab2e-47c5-9816-e9c76cc8e71f": {"doc_hash": "619fec1c42e3fb3cf806c927be1b7705659e739f8fe5f14c94a4501de6053999", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "f06fcb9c-5cc1-4c88-897a-fd484f82a43e": {"doc_hash": "590cd505b992f281953ea0252f3bade4d436c6999756c9f5882b076fad15d5c3", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "757be124-4835-4e79-a072-94030c50f04e": {"doc_hash": "ac97a5a60dd94cf8faf7c4484a012131f368734765fa09eded5d65c58eb90984", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "937647fc-ed93-4934-9198-b67c65de7868": {"doc_hash": "0874218d32004ddf9665f74387726eb1abc950d032ed591a9a61c61dad8be813", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "132a8be3-ea21-4e3b-9dbc-229fc1c079dd": {"doc_hash": "31d96b1ac4d0743abe4df08ba2ecc2345c196a76efd96a560a4530c53b5877c3", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "b1261f88-22f0-49b4-89f3-af7a9f890546": {"doc_hash": "277869022b7eec21215ed91b0a682c38424b916f91f71ac6e0c904891f737b4e", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}, "f022234a-95a0-4a00-b120-8b125f076dfc": {"doc_hash": "534bc00f6eca8e1c012b176e89fe265b0134b7c924f25d37da317f3e14fbcf97", "ref_doc_id": "2b9d088f-599e-41c8-a576-104b90b0bca5"}}, "docstore/data": {"baa759d2-9ec2-4433-9c8e-68c273f3b6c8": {"__data__": {"id_": "baa759d2-9ec2-4433-9c8e-68c273f3b6c8", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "3": {"node_id": "f603b600-95a5-4b32-9b24-0b4b5d99184a", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "4dd60eb0a89edf2322153ea99562f43afd8a10af1391171a400dab7b63333e5f"}}, "hash": "a64af64c3badb9a0c689cbe551fb766f0b9b2439a7f3899f6bf664f2c9350d73", "text": "Low Bandwidth Design\n\nWhen building an application that is expected to operate over a long period of time, you'll want to ensure that bandwidth is preserved and monitored, wherever possible. The Notecard provides features that allow you to optimize the size of Notes at rest and in transit, as well as a set of usage monitoring APIs.\n\nWorking with Note Templates\n\nBy default, the Notecard allows for maximum developer flexibility in the structure and content of Notes. As such, individual Notes in a Notefile do not share structure or schema. You can add JSON structures and payloads of any type and format to a Notefile, adding and removing fields as required by your application.\n\nIn order to provide this simplicity to developers, the design of the Notefile system is primarily memory based and designed to support no more than 100 Notes per Notefile. As long as your data needs and sync periods ensure regular uploads of data to Notehub, this limit is adequate for most applications.\n\nSome applications, however, will need to track and stage bursts of data that may eclipse the 100 Note limit in a short period of time, and before a sync can occur. For these types of use cases, the Notecard supports using a flash-based storage system based on Note templates.\n\nUsing the note.template request with any .qo/.qos Notefile, developers can provide the Notecard with a schema of sorts to apply to future Notes added to the Notefile. This template acts as a hint to the Notecard that allows it to internally store data as fixed-length records rather than as flexible, JSON objects, which tend to be much larger.\n\nCreating a Template\n\nTo create a template, use the file argument to specify the Notefile to which the template should be applied. Then, use the body argument to specify a template body, similar to the way you'd make a note.add request. That body must contain the name of each field expected in each note.add", "start_char_idx": 0, "end_char_idx": 1919, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f603b600-95a5-4b32-9b24-0b4b5d99184a": {"__data__": {"id_": "f603b600-95a5-4b32-9b24-0b4b5d99184a", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "baa759d2-9ec2-4433-9c8e-68c273f3b6c8", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "a64af64c3badb9a0c689cbe551fb766f0b9b2439a7f3899f6bf664f2c9350d73"}, "3": {"node_id": "6e7a66a2-c19c-4fb3-b24f-9a7ac8969baa", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "6dd2bbf3de1562c4eb3eb779baa645d379a628ad501066067ebfa78dcfabb656"}}, "hash": "4dd60eb0a89edf2322153ea99562f43afd8a10af1391171a400dab7b63333e5f", "text": "request. That body must contain the name of each field expected in each note.add request, and a value that serves as the hint indicating the data type to the Notecard. Each field can be a boolean, integer, float, or string.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.template\",\n  \"file\": \"readings.qo\",\n  \"body\": {\n    \"new_vals\": true,\n    \"temperature\": 12.1,\n    \"humidity\": 11,\n    \"pump_state\": \"4\"\n  }\n}\n\nThe Notecard responds to note.template with a single bytes field, indicating the number of bytes that will be transmitted to Notehub, per note, before compression.\n\nCOPY\n{\n  \"bytes\": 40\n}\nWarning\n\nPlease note that trying to \"update\" an existing template's body schema by using the same file argument used previously does not overwrite the old template, but rather creates a new one. This can become an issue if you create numerous Notefile templates (>25) to accommodate changes in data from individual Notes, as you may negate the advantage of templates by filling the flash storage on the Notecard and consuming additional cellular data by transferring each new template to Notehub.\n\nIn this scenario, we recommend defining a smaller number of consistent Notefile templates, binary-encoding the data and sending it in a note.add payload argument, or not using Notefile templates at all.\n\nYou can also specify a length argument that will set the maximum length of a payload (in bytes) that can be sent in Notes for the templated Notefile. If using Notecard firmware prior to v3.2.1, the length argument is required when using a payload with a templated Notefile.\n\nJSON\nC/C++\nPython\nCOPY\n{\n", "start_char_idx": 1853, "end_char_idx": 3452, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6e7a66a2-c19c-4fb3-b24f-9a7ac8969baa": {"__data__": {"id_": "6e7a66a2-c19c-4fb3-b24f-9a7ac8969baa", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "f603b600-95a5-4b32-9b24-0b4b5d99184a", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "4dd60eb0a89edf2322153ea99562f43afd8a10af1391171a400dab7b63333e5f"}, "3": {"node_id": "93cdfd15-3552-478c-8d1a-d6909180ecd1", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b4e88da9a612bb7ed0dc50afb059adc9cf37809b1ba021eff67d77c0015da0ec"}}, "hash": "6dd2bbf3de1562c4eb3eb779baa645d379a628ad501066067ebfa78dcfabb656", "text": " \"req\": \"note.template\",\n  \"file\": \"readings.qo\",\n  \"body\": {\n    \"new_vals\": true,\n    \"temperature\": 12.1,\n    \"humidity\": 11,\n    \"pump_state\": \"4\"\n  },\n  \"length\": 32\n}\n\nUsing the same body as above, and a payload length of 32 results in a template of 72 bytes.\n\nCOPY\n{\n  \"bytes\": 72\n}\nUnderstanding Template Data Types\n\nThe hints in each template Note body value come with a few expectations and requirements, as well as options for advanced usage.\n\nBoolean values must be specified in a template as true.\nString For firmware versions prior to v3.2.1 fields must be a numeric string to specify the max length. For example, \"42\" for a string that can be up to 42 characters in length. As of v3.2.1 variable-length strings are supported for any field and any string can be provided when configuring the template.\nInteger fields should use a specific value to indicate their type and length based on the following:\n11 - for a 1 byte signed integer (e.g. -128 to 127).\n12 - for a 2 byte signed integer (e.g. -32,768 to 32,767).\n13 - for a 3 byte signed integer (e.g. -8,388,608 to 8,388,607).\n14 - for a 4 byte signed integer (e.g. -2,147,483,648 to 2,147,483,647).\n18 - for a 8 byte signed integer (e.g. -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807).\n21 - for a 1 byte unsigned integer (e.g. 0 to 255). Available as of v3.3.1.\n22 - for a 2 byte unsigned integer (e.g. 0 to 65535). Available as of", "start_char_idx": 3520, "end_char_idx": 4929, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "93cdfd15-3552-478c-8d1a-d6909180ecd1": {"__data__": {"id_": "93cdfd15-3552-478c-8d1a-d6909180ecd1", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "6e7a66a2-c19c-4fb3-b24f-9a7ac8969baa", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "6dd2bbf3de1562c4eb3eb779baa645d379a628ad501066067ebfa78dcfabb656"}, "3": {"node_id": "d9963415-4d4a-48b0-af6a-24c86a2bd1d8", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b279dc34c54af898081e16b911d682cc831bdfc7f278c556b0fc80eed18f05c9"}}, "hash": "b4e88da9a612bb7ed0dc50afb059adc9cf37809b1ba021eff67d77c0015da0ec", "text": "- for a 2 byte unsigned integer (e.g. 0 to 65535). Available as of v3.3.1.\n23 - for a 3 byte unsigned integer (e.g. 0 to 16777215). Available as of v3.3.1.\n24 - for a 4 byte unsigned integer (e.g. 0 to 4294967295). Available as of v3.3.1.\nFloat fields should also use a specific value to indicate their type and length based on the following:\n12.1 - for an IEEE 754 2 byte float.\n14.1 - for an IEEE 754 4 byte float.\n18.1 - for an IEEE 754 8 byte float.\nUsing Arrays in Templates\n\nIf you're working with more complex data structures, it's possible to use arrays of data types when creating a template. The same definitions are used when assigning data types to the array.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.template\",\n  \"file\": \"readings.qo\",\n  \"body\": {\n    \"new_vals\": true,\n    \"temperature\": 12.1,\n    \"humidity\": 11,\n    \"pump_state\": \"4\",\n    \"array_vals\": [true, 12.1, 11, \"4\"]\n  }\n}\nVerifying a Template\n\nYou can use the verify:true argument to return the current template for a Notefile.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.template\",\n  \"file\": \"readings.qo\",\n  \"verify\": true\n}\n\nIf the file provided has an active template, it will be returned in a response body.\n\nCOPY\n{\n \"body\": {\n  \"new_vals\": true,\n  \"temperature\": 12.1,\n  \"humidity\": 11,\n  \"pump_state\": \"4\"\n },\n", "start_char_idx": 4877, "end_char_idx": 6166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "d9963415-4d4a-48b0-af6a-24c86a2bd1d8": {"__data__": {"id_": "d9963415-4d4a-48b0-af6a-24c86a2bd1d8", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "93cdfd15-3552-478c-8d1a-d6909180ecd1", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b4e88da9a612bb7ed0dc50afb059adc9cf37809b1ba021eff67d77c0015da0ec"}, "3": {"node_id": "0fd2ce4f-0dfd-4d74-ada4-b68309df797f", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "bad7effc8ef8743e8efaeb7c9c92107bece4fed1e36db9af7b2e89c6b34941d5"}}, "hash": "b279dc34c54af898081e16b911d682cc831bdfc7f278c556b0fc80eed18f05c9", "text": "\"humidity\": 11,\n  \"pump_state\": \"4\"\n },\n \"template\": true,\n \"length\": 32\n}\nAdding Notes to a Template Notefile\n\nAfter a template is created, use note.add requests to create Notes that conform to the template.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.add\",\n  \"file\": \"readings.qo\",\n  \"body\": {\n    \"new_vals\": true,\n    \"temperature\": 22.22,\n    \"humidity\": 43,\n    \"pump_state\": \"off\"\n  }\n}\n\nWhen adding Notes to a Notefile with an active template, the following JSON object is returned by the Notecard:\n\nCOPY\n{ \"template\": true }\n\nNotefiles with an active template validate each Note upon a note.add request. If any value in the Note body does not adhere to the template, or if the payload is longer than specified, an error is returned. For instance, the following Note includes a float for the humidity, which was specified in the template as an integer.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.add\",\n  \"file\": \"readings.qo\",\n  \"body\": {\n    \"new_vals\": true,\n    \"temperature\": 22.22,\n    \"humidity\": 43.22, // mistakenly specified here as a float instead of integer\n    \"pump_state\": \"off\"\n  }\n}\nCOPY\n{\n \"err\": \"error adding note: integer expected because of template\"\n}\n\nFor string values, an error is not returned on a note.add, but the provided value is truncated to the length (if specified in the template). For instance, the following Note includes a pump_state string longer than the maximum length defined in the", "start_char_idx": 6185, "end_char_idx": 7611, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "0fd2ce4f-0dfd-4d74-ada4-b68309df797f": {"__data__": {"id_": "0fd2ce4f-0dfd-4d74-ada4-b68309df797f", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "d9963415-4d4a-48b0-af6a-24c86a2bd1d8", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b279dc34c54af898081e16b911d682cc831bdfc7f278c556b0fc80eed18f05c9"}, "3": {"node_id": "379d610b-4cde-431e-ba10-08d99b2900b7", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "588ea9cd596dc30444ca5215f68d70d5d1cf7ec55a94a3e1d94b5ad7e085da33"}}, "hash": "bad7effc8ef8743e8efaeb7c9c92107bece4fed1e36db9af7b2e89c6b34941d5", "text": "the following Note includes a pump_state string longer than the maximum length defined in the template. The pump_state for this Note is truncated to four characters and saved as acti.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.add\",\n  \"file\": \"readings.qo\",\n  \"body\": {\n    \"new_vals\": true,\n    \"temperature\": 22.22,\n    \"humidity\": 43,\n    \"pump_state\": \"active\" // will be saved as \"acti\"\n  }\n}\nModifying a Template\n\nIf the needs of your application evolve, you can modify a template with another note.template request to the same Notefile. A new template can be set at any time and is non-destructive, meaning it has no impact on existing Notes in the Notefile.\n\nFor instance, you may need to modify the template field data types and/or add/remove fields:\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.template\",\n  \"file\": \"readings.qo\",\n  \"body\": {\n    \"new_vals\": true,\n    \"temperature\": 14.1, // Change to a 4 byte float\n    \"humidity\": 11,\n    \"pump_state\": \"4\",\n    \"pressure\": 12.1 // New field\n  }\n}\n\nThese template changes will be applied only to new Notes in the Notefile. Existing Notes remain unchanged.\n\nClearing a Template\n\nTo clear a template from a Notefile, simply call note.template with the Notefile name and omit the body and payload arguments. After clearing the template, all Notes written to the Notefile are stored as arbitrary JSON structures. This request, if successful, will return an empty JSON body", "start_char_idx": 7568, "end_char_idx": 8993, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "379d610b-4cde-431e-ba10-08d99b2900b7": {"__data__": {"id_": "379d610b-4cde-431e-ba10-08d99b2900b7", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "0fd2ce4f-0dfd-4d74-ada4-b68309df797f", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "bad7effc8ef8743e8efaeb7c9c92107bece4fed1e36db9af7b2e89c6b34941d5"}, "3": {"node_id": "25372ab0-ab2e-47c5-9816-e9c76cc8e71f", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "619fec1c42e3fb3cf806c927be1b7705659e739f8fe5f14c94a4501de6053999"}}, "hash": "588ea9cd596dc30444ca5215f68d70d5d1cf7ec55a94a3e1d94b5ad7e085da33", "text": "as arbitrary JSON structures. This request, if successful, will return an empty JSON body ({}).\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"note.template\",\n  \"file\": \"readings.qo\"\n}\nMeasuring Data Usage\n\nThe Notecard comes with a fixed amount of data available to send and receive over its lifetime. The amount of data transmitted and received is proportional to the amount of user data sent to the Notecard through requests like note.add. It may vary higher due to per-session TLS and TCP overhead or lower due to data compression.\n\nUltimately, it's up to you to determine how much data is needed in an application, and how often that data should be sent to Notehub. To support monitoring data usage in an application, the Notecard provides card.usage.get and card.usage.test requests to see current usage, and project the lifetime of the Notecard based on its current workload.\n\nObtaining Historical Usage\n\nThe card.usage.get request provides actual network usage statistics, and can provide this information across the Notecard's entire life since activation, or for periods of one hour, one day or a 30 day period.\n\nNote\n\nUsage data is updated by the Notecard at the end of each cellular connection. If connected in continuous mode, usage data will not be updated until the current session ends, which can be configured with the hub.set duration argument.\n\nA no argument request:\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.usage.get\"\n}\n\nIs the same as:\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.usage.get\",\n  \"mode\": \"total\"\n}\n\nThis request returns an object with the number of seconds since the Notecard was activated, the total number of bytes_sent and bytes_received, the approximate number of", "start_char_idx": 8997, "end_char_idx": 10686, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "25372ab0-ab2e-47c5-9816-e9c76cc8e71f": {"__data__": {"id_": "25372ab0-ab2e-47c5-9816-e9c76cc8e71f", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "379d610b-4cde-431e-ba10-08d99b2900b7", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "588ea9cd596dc30444ca5215f68d70d5d1cf7ec55a94a3e1d94b5ad7e085da33"}, "3": {"node_id": "f06fcb9c-5cc1-4c88-897a-fd484f82a43e", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "590cd505b992f281953ea0252f3bade4d436c6999756c9f5882b076fad15d5c3"}}, "hash": "619fec1c42e3fb3cf806c927be1b7705659e739f8fe5f14c94a4501de6053999", "text": "activated, the total number of bytes_sent and bytes_received, the approximate number of notes_sent and notes_received, the number of standard (sessions_standard) and TLS (sessions_secure) sessions, and the UNIX Epoch time of device activation.\n\nCOPY\n{\n \"seconds\": 661135,\n \"bytes_sent\": 65445,\n \"bytes_received\": 136651,\n \"notes_sent\": 50,\n \"notes_received\": 18,\n \"sessions_standard\": 51,\n \"sessions_secure\": 14,\n \"time\": 1598479763\n}\n\nTo analyze a period of time, the mode argument also accepts the values of 1hour, 1day, or 30day and an offset argument to skip backwards in time before returning stats for the mode unit specified. For instance, the following request will skip back two days, and return a single day of usage data.\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.usage.get\",\n  \"mode\": \"1day\",\n  \"offset\": 2\n}\nNote\n\nTo accurately determine the start of the calculated time period when using offset, use the time value of the response. Likewise, to calculate the end of the time period, add the seconds value to the time value.\n\nSIM Usage Data on Notehub.io\n\nAnother place to view a summary of data used by a Notecard is on Notehub.io. By navigating to Devices > SIM Usage you can see the sum total of bytes transferred to-date.\n\nThis same information is available under the SIM tab when viewing device details.\n\nNote\n\nThe usage statistics provided by card.usage may differ from what appears on Notehub.io. You should consider card.usage as more accurate than the values you see in Notehub.io. This is because the card.usage statistics are derived from the Notecard \"asking\" the modem (every time the modem powers down - or the duration of hub.set is met) how", "start_char_idx": 10687, "end_char_idx": 12355, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f06fcb9c-5cc1-4c88-897a-fd484f82a43e": {"__data__": {"id_": "f06fcb9c-5cc1-4c88-897a-fd484f82a43e", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "25372ab0-ab2e-47c5-9816-e9c76cc8e71f", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "619fec1c42e3fb3cf806c927be1b7705659e739f8fe5f14c94a4501de6053999"}, "3": {"node_id": "757be124-4835-4e79-a072-94030c50f04e", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "ac97a5a60dd94cf8faf7c4484a012131f368734765fa09eded5d65c58eb90984"}}, "hash": "590cd505b992f281953ea0252f3bade4d436c6999756c9f5882b076fad15d5c3", "text": "(every time the modem powers down - or the duration of hub.set is met) how many bytes were transferred over the cellular network. Notehub.io can only approximate this number by looking at how many bytes were transferred at a higher level (over TCP or TLS). The numbers in Notehub.io are also updated nightly by a process that queries the cellular carrier to determine how much data has been used on the SIM.\n\nProjecting the Lifetime of Available Data\n\nOnce your Notecard is running a workload that you feel is representative of its deployed use, you can use the card.usage.test request to estimate the lifetime of available data given its current usage rate.\n\nWhen called with no arguments, card.usage.test performs its projections based on all data since activation. Alternatively, use the days argument to specify the most recent number of days to analyze, hours to analyze a number of hours, and megabytes to specify the Notecard data quota from which to estimate. For example, if your project has been running production-ready firmware for the last week, and your data cap is 500 MB, you'd send the following request:\n\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.usage.test\",\n  \"days\": 7,\n  \"megabytes\": 500\n}\n\nThis request returns all of the fields that card.usage.get does so you can see actual usage over the defined period. In addition, the returned object contains the number of days used for the test, the average bytes_per_day sent during the analyzed period, and the max number of days of Notecard lifetime based on daily usage of the analyzed period. For example, if your Notecard sends around 44 kilobytes per day, it would take 11,833 days, or over 32 years before it eclipsed its data cap! Note: Usage information provided by the Notecard is representative of all network traffic, including TCP/IP and TLS", "start_char_idx": 12372, "end_char_idx": 14189, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "757be124-4835-4e79-a072-94030c50f04e": {"__data__": {"id_": "757be124-4835-4e79-a072-94030c50f04e", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "f06fcb9c-5cc1-4c88-897a-fd484f82a43e", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "590cd505b992f281953ea0252f3bade4d436c6999756c9f5882b076fad15d5c3"}, "3": {"node_id": "937647fc-ed93-4934-9198-b67c65de7868", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "0874218d32004ddf9665f74387726eb1abc950d032ed591a9a61c61dad8be813"}}, "hash": "ac97a5a60dd94cf8faf7c4484a012131f368734765fa09eded5d65c58eb90984", "text": "Notecard is representative of all network traffic, including TCP/IP and TLS overhead.\n\nCOPY\n{\n  \"days\":              2,\n  \"bytes_per_day\":     44289,\n  \"max\":               11833,\n \n  // Fields also sent with card.usage.get\n  \"bytes_sent\":        29327,\n  \"bytes_received\":    59252,\n  \"notes_sent\":        16,\n  \"notes_received\":    13,\n  \"sessions_standard\": 24,\n  \"sessions_secure\":   5\n}\nData Usage Estimates\n\nSince the Cellular Notecard comes prepaid with 500MB of cellular data, a common inquiry is precisely how much of that allocation is consumed when sending/receiving data.\n\nThis section aims to lay out some commonly-used scenarios and provide metrics around what approximate data usage numbers to expect, given the following set of testing parameters.\n\nTesting Parameters\nTests were performed using firmware v3.4.1 on an NBGL Notecard.\nNotecard was factory reset with a card.restore request: {\"req\":\"card.restore\",\"delete\":true}\nMeasurements were taken after a cold boot of the Notecard + three (3) completed hub.sync requests to ensure any data overhead related to its first connection was cleared: {\"req\":\"hub.sync\"}\nThe body of the Note used for all tests was {\"temp\":12.3,\"alert\":true}.\nWhen a Note Template was used, \"temp\" was set to float16 and \"alert\" was set to bool: {\"req\":\"note.template\",\"file\":\"test.qo\",\"body\":{\"temp\": 18.1,\"alert\": true}}\nThe continuous mode tests were performed with inbound", "start_char_idx": 14185, "end_char_idx": 15604, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "937647fc-ed93-4934-9198-b67c65de7868": {"__data__": {"id_": "937647fc-ed93-4934-9198-b67c65de7868", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "757be124-4835-4e79-a072-94030c50f04e", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "ac97a5a60dd94cf8faf7c4484a012131f368734765fa09eded5d65c58eb90984"}, "3": {"node_id": "132a8be3-ea21-4e3b-9dbc-229fc1c079dd", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "31d96b1ac4d0743abe4df08ba2ecc2345c196a76efd96a560a4530c53b5877c3"}}, "hash": "0874218d32004ddf9665f74387726eb1abc950d032ed591a9a61c61dad8be813", "text": "18.1,\"alert\": true}}\nThe continuous mode tests were performed with inbound and outbound arguments omitted from the hub.set request: {\"req\":\"hub.set\",\"mode\":\"continuous\",\"product\":\"<productuid>\"}\nInitial Cellular Connection\n\nAfter a power cycle or card.restart, the Notecard must re-negotiate its connection with Notehub. This always involves a TLS connection (for security purposes), even if there is no user data that needs to be synced. This is why we strongly encourage users to leave the Notecard powered-on, in an idle state, and to only restart the Notecard when strictly necessary.\n\nNote\n\nThe data usage for an initial connection will vary depending on the state of the connected Notehub project. For instance, upon boot, the Notecard will sync data in any existing .db/dbs Notefiles, any pending .qo/.qos Notefiles, and any Notefile templates. This is because part of the Notecard's boot process is to examine the data present on both sides (Notecard and Notehub) to make sure everything is completely in-sync after the initial power-on.\n\nThe value range provided below is based on a factory-reset Notecard associated with a newly-created Notehub project.\n\nApproximate Data Usage: 28KB +/- 3KB.\n\nPeriodic/Minimum Mode Usage\n\nThe Notecard, by default, is set to periodic mode to conserve power by only connecting when it needs to sync with Notehub. The following tests were performed in minimum mode, which is similar to periodic, but requires an explicit hub.sync request to send and receive data.\n\nTest: Templated Notefile\tData\nSync with 1 .qo Note (the first time a new template is used)\t1.5 KB\nSync with 1 .qo Note\t1.1 KB\nSync with 10 .qo Notes\t1.2 KB\nSync with 100 .qo Notes\t1.9 KB\nTest:", "start_char_idx": 15604, "end_char_idx": 17303, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "132a8be3-ea21-4e3b-9dbc-229fc1c079dd": {"__data__": {"id_": "132a8be3-ea21-4e3b-9dbc-229fc1c079dd", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "937647fc-ed93-4934-9198-b67c65de7868", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "0874218d32004ddf9665f74387726eb1abc950d032ed591a9a61c61dad8be813"}, "3": {"node_id": "b1261f88-22f0-49b4-89f3-af7a9f890546", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "277869022b7eec21215ed91b0a682c38424b916f91f71ac6e0c904891f737b4e"}}, "hash": "31d96b1ac4d0743abe4df08ba2ecc2345c196a76efd96a560a4530c53b5877c3", "text": "KB\nSync with 100 .qo Notes\t1.9 KB\nTest: Standard (non-Templated) Notefile\tData\nSync with 1 .qo Note\t1.0 KB\nSync with 10 .qo Notes\t1.2 KB\nSync with 100 .qo Notes\t3.6 KB\nTest: Templated Secure .qos Notefile\tData\nSync with 1 .qos Note (the first time a new template is used)\t8.0 KB\nSync with 1 .qos Note\t5.0 KB\nSync with 10 .qos Notes\t5.1 KB\nSync with 100 .qos Notes\t5.6 KB\nTest: Standard (non-Templated) Secure .qos Notefile\tData\nSync with 1 .qos Note\t6.6 KB\nSync with 10 .qos Notes\t6.4 KB\nSync with 100 .qos Notes\t10.3 KB\nContinuous Mode Usage\n\nThe use of continuous mode is only recommended when the Notecard is connected to line power and requires a low latency of syncing Notes with Notehub.\n\nTest: Templated Notefile\tData\nSync with 1 .qo Note (the first time a new template is used)\t1.0 KB\nSync with 1 .qo Note\t0.7 KB\nSync with 10 .qo Notes\t0.7 KB\nSync with 100 .qo Notes\t1.3 KB\nTest: Standard (non-Templated) Notefile\tData\nSync with 1 .qo Note\t0.9 KB\nSync with 10 .qo Notes\t0.7 KB\nSync with 100 .qo Notes\t3.3 KB\n\nWhen a Notecard is in continuous mode, it needs to occasionally negotiate with the carrier to maintain its session. This is why we are also documenting the usage of continuous mode in two \"idle\" states:\n\nThere are two options for a continuous mode connection:\n\nhub.set \"sync\":false to prevent the Notecard from checking for inbound Notefile", "start_char_idx": 17336, "end_char_idx": 18693, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "b1261f88-22f0-49b4-89f3-af7a9f890546": {"__data__": {"id_": "b1261f88-22f0-49b4-89f3-af7a9f890546", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "132a8be3-ea21-4e3b-9dbc-229fc1c079dd", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "31d96b1ac4d0743abe4df08ba2ecc2345c196a76efd96a560a4530c53b5877c3"}, "3": {"node_id": "f022234a-95a0-4a00-b120-8b125f076dfc", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "534bc00f6eca8e1c012b176e89fe265b0134b7c924f25d37da317f3e14fbcf97"}}, "hash": "277869022b7eec21215ed91b0a682c38424b916f91f71ac6e0c904891f737b4e", "text": "\"sync\":false to prevent the Notecard from checking for inbound Notefile changes.\nhub.set \"sync\":true to routinely check Notehub for inbound Notefile changes.\n\nWith sync:true both the Notecard and Notehub employ mechanisms to ensure that the socket connection between the Notecard and Notehub does not \"silently\" drop, as can happen with wireless connections. These mechanisms consume additional data usage, but allow a robust and near instantaneous notification of changes from Notehub to Notecard, which is essential in some applications.\n\nTest: Idle (hub.set with sync:false)\tData\nOne (1) hour idle\t1.2 KB\nTen (10) hours idle\t18.6 KB\nTest: Idle (hub.set with sync:true)\tData\nOne (1) hour idle\t3.9 KB\nTen (10) hours idle\t41.0 KB\nAdditional Notes and FAQs\nWhy is less bandwidth required (sometimes) to send 10 Notes vs 1 Note?\nThis is due to the fact that binary compression on the Notecard is only triggered at a certain threshold. This scenario is highly dependent on the size of the Note body or payload.\nWhy do syncs in continuous mode generally consume slightly less bandwidth than in periodic/minimum mode?\nPeriodic syncs require a small amount of overhead to establish a session, while continuous mode syncs are performed during an already-established session.\nWhy do syncs involving .qos, .qis, or .dbs files consume more bandwidth than similar syncs with .qo, .qi, or .db Notefiles?\nIf any of the Notefiles in a sync has a .qos, .qis, or .dbs file extension the Notecard must establish a TLS connection to Notehub before performing the sync, and the establishment of a TLS connection has an overhead of ~4 KB.\nLow Power Design\nHost Firmware Update", "start_char_idx": 18666, "end_char_idx": 20322, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f022234a-95a0-4a00-b120-8b125f076dfc": {"__data__": {"id_": "f022234a-95a0-4a00-b120-8b125f076dfc", "embedding": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9d088f-599e-41c8-a576-104b90b0bca5", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "b60686f8f5f6b41a90e3e15a8f1b1773af61c48ccf1cabe004dcbdda88f7a258"}, "2": {"node_id": "b1261f88-22f0-49b4-89f3-af7a9f890546", "node_type": null, "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}, "hash": "277869022b7eec21215ed91b0a682c38424b916f91f71ac6e0c904891f737b4e"}}, "hash": "534bc00f6eca8e1c012b176e89fe265b0134b7c924f25d37da317f3e14fbcf97", "text": "connection has an overhead of ~4 KB.\nLow Power Design\nHost Firmware Update Requests\nCan we improve this page? Send us feedback", "start_char_idx": 20310, "end_char_idx": 20436, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"2b9d088f-599e-41c8-a576-104b90b0bca5": {"node_ids": ["baa759d2-9ec2-4433-9c8e-68c273f3b6c8", "f603b600-95a5-4b32-9b24-0b4b5d99184a", "6e7a66a2-c19c-4fb3-b24f-9a7ac8969baa", "93cdfd15-3552-478c-8d1a-d6909180ecd1", "d9963415-4d4a-48b0-af6a-24c86a2bd1d8", "0fd2ce4f-0dfd-4d74-ada4-b68309df797f", "379d610b-4cde-431e-ba10-08d99b2900b7", "25372ab0-ab2e-47c5-9816-e9c76cc8e71f", "f06fcb9c-5cc1-4c88-897a-fd484f82a43e", "757be124-4835-4e79-a072-94030c50f04e", "937647fc-ed93-4934-9198-b67c65de7868", "132a8be3-ea21-4e3b-9dbc-229fc1c079dd", "b1261f88-22f0-49b4-89f3-af7a9f890546", "f022234a-95a0-4a00-b120-8b125f076dfc"], "metadata": {"title": "", "category": "Low Bandwidth Design", "url": "https://dev.blues.io/notecard/notecard-walkthrough/low-bandwidth-design/"}}}}