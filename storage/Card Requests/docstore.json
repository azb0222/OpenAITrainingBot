{"docstore/metadata": {"682a027f-b28d-4dba-9731-f7a04c77a099": {"doc_hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "720aa8d7-f2b0-46f5-b281-f25abdff48f6": {"doc_hash": "073c4b3055e049cd724ec2d2844731f1e5a2895f93e85305d4a10ba59c8f048f", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "39813d25-b4ec-4195-b2d0-01635048b7c4": {"doc_hash": "63b63cb57b3d269e6459c3b6780e64d6171de2085cfe3edb3b9c39f47bcd35d8", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "a8a52566-cefa-40da-a7f0-43f93dabc4f4": {"doc_hash": "79363ad6feb54140462cc5121847fe0a81aba37b6876996f78255d5c562e201d", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "4085a739-3353-41f9-beea-bdc3145237a4": {"doc_hash": "ae76bb6f6e444f4a1c0b4d28edaef1c559369e120d0b5f77c2ea33bf6fc96f46", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "71a6e04b-b4de-44c3-a71c-97d6b48f0fc0": {"doc_hash": "aeadb93dd085fda0db11eb333e3a7e79487e4931130b1f611e7d017d62572984", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "ec6e04e4-5341-4277-a7ab-43d97741d77b": {"doc_hash": "cb9e1a65356bb99748c1372e58148ff06160a3f1060235fecee5a47955797a4a", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "ada6c377-8b8d-45b9-9ef5-f428d5c1c9fc": {"doc_hash": "89840c595c4ba4e45b11cd14450892141e839cc39edd7e128d22c520e4820fc2", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "7589cc44-2718-40f3-9d71-e52997d07194": {"doc_hash": "b1814b62491fe178ef509ee5f179078d54b313ca7124bec775db0c462d3bbb0e", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "d6818117-e500-46c7-b123-f9234319528b": {"doc_hash": "2ef4b290af9937f95364f9a518eb3ef7076100cb77a158de2082d7a648765de2", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "38fa8423-1d58-4b1f-95d7-d38bfc1315f4": {"doc_hash": "f8209154b56fb21b609762aa18a21319e37a5eb8300bf25e5e90907ad981c12a", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "9cda6db2-ca18-466e-b1d5-895240cd5dac": {"doc_hash": "1f05a488a679d1a336aa51563c403eac7374ceaffa57c2497416957b2e449abc", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "5f908d5f-aefa-4f55-962b-fa72585c3360": {"doc_hash": "e708425f8788bc8fabf24d9b38eeade82df57063d7597b6b4bfc2e6cdd68f2f8", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "842e55aa-e4a0-4980-8485-b17e724cdcac": {"doc_hash": "f60d7e9a5b194ca7b29fdc5e811e392de90c9a1a965bf805a5de4e7ca9b9a008", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "3dcfab35-4098-484c-a95d-ef955dbfceb9": {"doc_hash": "e8b8ef65d3e69377a446768c8fdfb8af3690f7dd9f61fb9623884de79d5b6479", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "5f119488-4243-43e6-9b10-8ed9ff2c4d80": {"doc_hash": "bb7140957501c6b52b19cd5a289aaff1cfd95393174945a1167c80e7654ffd96", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "c3ebc534-5208-4db7-bf13-805d756db279": {"doc_hash": "42cfdec38040636e86933a117afb6bd2a285252536883fe254138c942a0bdebe", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "6ee5838b-401f-4c4c-99ba-8fb69d88e0eb": {"doc_hash": "443b848a06fb0c5a1048a80da38151ed0a0ab24764e5d38c085a50339f747c72", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "a40ef254-9a54-4376-b54f-f9c93036abdb": {"doc_hash": "edf663ad6c2818d42fd8e177ef95d8521a97c9c6def280638af969ae4d23f613", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "3f0c67d8-9897-4e3d-aa9a-5d444ae6f878": {"doc_hash": "33743a681c5d7bf0194faf058a9bede881a8a0c1a0a68751a5e2a919b2ea665a", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "66d302dc-3e41-462a-b957-ca7719b2fcad": {"doc_hash": "121efcb8aaa7d9944f05bbcc6a1e69675b0a7db12cf572f63a8c2f3e9c5843da", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "2de4e138-ac9b-4525-86ec-941b95f2e4be": {"doc_hash": "32a58e0f2008943d8377042a2e9777a0864df5aaf979f5a6fc92b1901550db9c", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "c930430e-a0ac-4ff1-b9c5-e0127bf61c92": {"doc_hash": "abe96e7733bdc4d65d1be22f9b0030354431060357d8ccec6cce8cae7446f97a", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "7c011eb6-ff5f-4b47-befb-a583bcea240b": {"doc_hash": "438b25a9ce31e094c27f7752fbb3f73c7f102e5098e0ebd84b88d6320f059783", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "b60afa71-8cb7-425c-ae76-9161721947b0": {"doc_hash": "b6da357795b15d2d10fdb55dc638a99c199ad4460c88e6f404769fb4f786ff20", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "a8e55667-059b-467f-a793-bcc553c4af22": {"doc_hash": "90898ef788879c398e9e99770a8f5cfe71b88b5093ec5bde641a710c77818bc6", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "8a4f6b3e-41c1-4fdd-b4cc-0bf150fcc055": {"doc_hash": "eaba56552df71e71596e3c95b7540e1b6b45a24d89383df6289f2ada4e619c45", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "fe90ae5c-8cfd-46ac-8005-f6e1686a0602": {"doc_hash": "30418dce925c7631a2ac4557d6598f931a85544681f269155232e8f8dc64fb87", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "0e1e2a7b-59f1-4077-865a-37643f4ada69": {"doc_hash": "ef759f9934c0a92f423f177ecd5c4c3d4c2be80224c1a7ee89aeeed71bc33f23", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "69a35753-eee6-4b2a-8f1e-4c95f7b21507": {"doc_hash": "44500e87507788c6606b0c3531ecf4dc001ee863bf0b29fcf1c35353a6f51a20", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "6222f1bd-1920-4276-9d06-c0dcf525898d": {"doc_hash": "162413bd7df14c495f488ce4fcbcf3e23661da023079629f267f21bcf5ef3cd6", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "d5972845-7755-4b78-94ab-6bc675a7b012": {"doc_hash": "a5f2aff1ca0b65e5646b92e58746e3bf0a3c7c0fa77b4e8526634f16a9c79119", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "ced2a95d-fed6-4f3d-9a75-8b658058c55d": {"doc_hash": "39d708eef19573c780fd94c896bf191dc54f6e9f95457aee54f3385a1c582c96", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "6ad81a2d-696e-418d-9f5d-cebab3b70a0a": {"doc_hash": "07761e7f5f8542c687e2fc875071a71fd217f5cc286e53d506efaa89840b8804", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}, "d0b9097b-dc99-4782-83a5-907be692a611": {"doc_hash": "7e8fee4fafa0dfd402629434fe6de4ef4ca7dbf2ef805e617a105811feaf8bd0", "ref_doc_id": "682a027f-b28d-4dba-9731-f7a04c77a099"}}, "docstore/data": {"720aa8d7-f2b0-46f5-b281-f25abdff48f6": {"__data__": {"id_": "720aa8d7-f2b0-46f5-b281-f25abdff48f6", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "3": {"node_id": "39813d25-b4ec-4195-b2d0-01635048b7c4", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "63b63cb57b3d269e6459c3b6780e64d6171de2085cfe3edb3b9c39f47bcd35d8"}}, "hash": "073c4b3055e049cd724ec2d2844731f1e5a2895f93e85305d4a10ba59c8f048f", "text": "card Requests\n\nThe Notecard provides a number of requests that can be used to configure the behavior of the Notecard, its pins, its use of GPS and accelerometer data, and to query the state of the Device, its network connection and peripherals. All of these requests begin with the card prefix.\n\ncard.attn \n\nConfigure hardware notification from the Notecard to MCU host. Note: Requires a connection between the notecard ATTN pin and a GPIO pin on the host MCU.\n\nArguments\nmode\n\nstring\n\nA comma-separated list of one or more of the following keywords:\n\n\"\"\n\nFetches currently-pending events in the \"files\" collection.\n\n\"arm\"\n\nClear \"files\" events and cause the ATTN pin to go LOW. After an event occurs or \"seconds\" has elapsed, the ATTN pin will then go HIGH (a.k.a. \"fires\"). If \"seconds\" is 0, no timeout will be scheduled. If ATTN is armed, calling arm again will disarm (briefly pulling ATTN HIGH), then arm (non-idempotent).\n\n\"auxgpio\" (Added in v3.4.1)\n\nWhen armed, causes ATTN to fire if an AUX GPIO input changes. Disable by using -auxpgio.\n\n\"connected\"\n\nWhen armed, will cause ATTN to fire whenever the module connects to cellular. Disable with -connected.\n\n\"disarm\"\n\nCauses ATTN pin to go HIGH if it had been LOW. As of v3.2.1, -all can be used with disarm to clear all ATTN monitors currently set.\n\n\"env\" (Added in v3.4.1)\n\nWhen armed, causes ATTN to fire if an environment variable changes on the Notecard. Disable by using -env.\n\n\"files\"\n\nWhen armed, will cause ATTN to fire if any of the \"files\" are modified. Disable by using", "start_char_idx": 0, "end_char_idx": 1539, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "39813d25-b4ec-4195-b2d0-01635048b7c4": {"__data__": {"id_": "39813d25-b4ec-4195-b2d0-01635048b7c4", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "720aa8d7-f2b0-46f5-b281-f25abdff48f6", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "073c4b3055e049cd724ec2d2844731f1e5a2895f93e85305d4a10ba59c8f048f"}, "3": {"node_id": "a8a52566-cefa-40da-a7f0-43f93dabc4f4", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "79363ad6feb54140462cc5121847fe0a81aba37b6876996f78255d5c562e201d"}}, "hash": "63b63cb57b3d269e6459c3b6780e64d6171de2085cfe3edb3b9c39f47bcd35d8", "text": "will cause ATTN to fire if any of the \"files\" are modified. Disable by using -files.\n\n\"location\"\n\nWhen armed, will cause ATTN to fire whenever the Notecard GPS module makes a position fix. Disable by using -location.\n\n\"motion\"\n\nWhen armed, will cause ATTN to fire whenever the accelerometer detects module motion. Disable with -motion.\n\n\"rearm\" (Added in v1.5.3)\n\nWill arm ATTN if not already armed. Otherwise, resets the values of mode, files, and seconds specified in the initial arm or rearm request (idempotent).\n\n\"signal\"\n\nWhen armed, will cause ATTN to fire whenever the Notecard receives a signal.\n\n\"sleep\"\n\nInstruct the Notecard to pull the ATTN pin low for a period of time, and optionally keep a payload in memory. Can be used by the host to sleep the host MCU.\n\n\"usb\"\n\nWhen armed, will enable USB power events firing the ATTN pin. Disable with -usb.\n\n\"watchdog\"\n\nNot an \"arm\" mode, rather will cause the ATTN pin to go from HIGH to LOW, then HIGH if the notecard fails to receive any JSON requests for \"seconds.\"\n\n\"wireless\" (Added in v1.5.3)\n\nInstruct the Notecard to fire the ATTN pin whenever the card.wireless status changes.\n\nfiles\n\narray (optional)\n\nA list of Notefiles to watch for file-based interrupts.\n\nseconds\n\nint32 (optional)\n\nTo set an ATTN timeout when arming, or when using sleep.\n\nNOTE: When the Notecard is in continuous mode, the seconds timeout is serviced by a routine that wakes every 15 seconds. You can predict when the device will wake, by rounding up to the nearest 15 second interval.\n\npayload\n\nbase64 string (optional)\n\nWhen using sleep mode, a payload of data", "start_char_idx": 1478, "end_char_idx": 3077, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "a8a52566-cefa-40da-a7f0-43f93dabc4f4": {"__data__": {"id_": "a8a52566-cefa-40da-a7f0-43f93dabc4f4", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "39813d25-b4ec-4195-b2d0-01635048b7c4", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "63b63cb57b3d269e6459c3b6780e64d6171de2085cfe3edb3b9c39f47bcd35d8"}, "3": {"node_id": "4085a739-3353-41f9-beea-bdc3145237a4", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "ae76bb6f6e444f4a1c0b4d28edaef1c559369e120d0b5f77c2ea33bf6fc96f46"}}, "hash": "79363ad6feb54140462cc5121847fe0a81aba37b6876996f78255d5c562e201d", "text": "string (optional)\n\nWhen using sleep mode, a payload of data from the host that the Notecard should hold in memory until retrieved by the host.\n\nstart\n\nboolean (optional)\n\nWhen using sleep mode and the host has reawakened, request the Notecard to return the stored payload.\n\nverify (Added in v3.2.1)\n\nboolean (optional)\n\nWhen true, returns the current attention mode configuration, if any.\n\nFiles\nConnected\nMotion\nLocation\nSignal\nWatchdog\nSleep With Payload\nRetrieve Payload\nDisarm all Modes\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.attn\",\n  \"mode\": \"arm,files\",\n  \"files\": [\"data.qi\", \"my-settings.db\"]\n}\n\nConfigure the Notecard to perform an interrupt on the data.qi and my-settings.db.\n\nResponse Members\nset\n\nboolean\n\ntrue if an attention mode is currently active. A response with no set field indicates false.\n\nfiles\n\narray\n\nA list of files changed since file attention mode was set. In addition, this field will include keywords to signify the occurrence of other attention mode triggers:\n\n\"connected\"\n\n\"files\"\n\n\"location\"\n\n\"motion\"\n\n\"timeout\"\n\n\"watchdog\"\n\npayload\n\nbase64 string\n\nWhen using sleep mode with a payload, the payload provided by the host to the Notecard.\n\ntime\n\nUNIX Epoch time\n\nWhen using sleep mode with a payload, the time that the payload was stored by the Notecard.\n\nExample Response\nCOPY\n{\n  \"files\": [\"data.qi\", \"modified\"],\n  \"set\": true\n}\nMore information:\nHandling Notecard Interrupts from a Host\nPutting a Host to Sleep\ncard.aux \n\nConfigure various uses of the general-purpose", "start_char_idx": 3089, "end_char_idx": 4593, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "4085a739-3353-41f9-beea-bdc3145237a4": {"__data__": {"id_": "4085a739-3353-41f9-beea-bdc3145237a4", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "a8a52566-cefa-40da-a7f0-43f93dabc4f4", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "79363ad6feb54140462cc5121847fe0a81aba37b6876996f78255d5c562e201d"}, "3": {"node_id": "71a6e04b-b4de-44c3-a71c-97d6b48f0fc0", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "aeadb93dd085fda0db11eb333e3a7e79487e4931130b1f611e7d017d62572984"}}, "hash": "ae76bb6f6e444f4a1c0b4d28edaef1c559369e120d0b5f77c2ea33bf6fc96f46", "text": "a Host to Sleep\ncard.aux \n\nConfigure various uses of the general-purpose I/O (gpio) pins AUX1-AUX4 on the Notecard edge connector for tracking applications and simple gpio sensing and counting tasks.\n\nNote\n\nUtilizing these pins requires a physical connection to each pin, separate from a connection to the Notecard's serial data interfaces.\n\nArguments\nmode\n\nstring\n\nThe AUX mode. Must be one of the following:\n\n\"dfu\" (Added in v3.5.1)\n\n\"gpio\"\n\n\"motion\"\n\n\"monitor\"\n\n\"neo-monitor\" (Added in v3.5.1)\n\n\"off\"\n\n\"track\"\n\n\"-\"\n\nusage\n\narray of strings (required for gpio mode)\n\nAn ordered list of pin modes for each AUX pin when in GPIO mode. Possible values are:\n\n\"\" to leave the pin unchanged.\n\n\"off\" to disable the pin.\n\n\"high\" to set the pin as a HIGH output.\n\n\"low\" to set the pin as a LOW output.\n\n\"input\" to set the pin as an input.\n\n\"input-pulldown\" to set the pin as a pull-down input. (Added in v3.3.1)\n\n\"input-pullup\" to set the pin as a pull-up input. (Added in v3.3.1)\n\n\"count\" to set the pin as an input (interrupt) that increments a counter for each rising edge pulse on the pin. It is up to the device's designer to make sure that the signal is either HIGH or LOW at any time, and is never left floating.\n\n\"count-pulldown\" Same as count usage, but a pull-down resistor internal to the Notecard will automatically keep the pin from floating.\n\n\"count-pullup\" Same as count usage, but a pull-up resistor internal to the Notecard will", "start_char_idx": 4582, "end_char_idx": 6019, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "71a6e04b-b4de-44c3-a71c-97d6b48f0fc0": {"__data__": {"id_": "71a6e04b-b4de-44c3-a71c-97d6b48f0fc0", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "4085a739-3353-41f9-beea-bdc3145237a4", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "ae76bb6f6e444f4a1c0b4d28edaef1c559369e120d0b5f77c2ea33bf6fc96f46"}, "3": {"node_id": "ec6e04e4-5341-4277-a7ab-43d97741d77b", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "cb9e1a65356bb99748c1372e58148ff06160a3f1060235fecee5a47955797a4a"}}, "hash": "aeadb93dd085fda0db11eb333e3a7e79487e4931130b1f611e7d017d62572984", "text": "Same as count usage, but a pull-up resistor internal to the Notecard will automatically keep the pin from floating and falling edges of pulses are counted.\n\nseconds\n\nint (optional)\n\nWhen in gpio mode, if an AUX pin is configured as a count type, the count of rising edges can be broken into samples of this duration. Passing 0 or omitting this field will total into a single sample.\n\nmax\n\nint (optional)\n\nWhen in gpio mode, if an AUX pin is configured as a count type, the maximum number of samples of duration seconds, after which all subsequent counts are added to the final sample. Passing 0 or omitting this value will provide a single incrementing count of rising edges on the pin.\n\nstart\n\nboolean (optional)\n\nWhen in gpio mode, if an AUX pin is configured as a count type, set to true to reset counters and start incrementing.\n\ngps\n\nboolean (optional)\n\nIf true, along with \"mode\":\"track\" the Notecard supports the use of an external GPS module. See Using AUX Track Mode with an External GPS for more information.\n\nrate (Added in v3.2.1)\n\nint (optional)\n\nThe AUX UART baud rate for debug communication over the AUXRX and AUXTX pins.\n\nsync (Added in v3.3.1, extended in v3.4.1)\n\nboolean (optional)\n\nIf true, for pins set as input by usage, the Notecard will autonomously report any state changes as new notes in file (Added in v3.3.1). For pins used as counter, the Notecard will use an interrupt to count pulses and will report the total in a new note in file unless it has been noted in the previous second. (Added in v3.4.1).\n\nfile (Added in v3.3.1)\n\nstring (optional)\n\nThe name of the Notefile used", "start_char_idx": 6022, "end_char_idx": 7628, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "ec6e04e4-5341-4277-a7ab-43d97741d77b": {"__data__": {"id_": "ec6e04e4-5341-4277-a7ab-43d97741d77b", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "71a6e04b-b4de-44c3-a71c-97d6b48f0fc0", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "aeadb93dd085fda0db11eb333e3a7e79487e4931130b1f611e7d017d62572984"}, "3": {"node_id": "ada6c377-8b8d-45b9-9ef5-f428d5c1c9fc", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "89840c595c4ba4e45b11cd14450892141e839cc39edd7e128d22c520e4820fc2"}}, "hash": "cb9e1a65356bb99748c1372e58148ff06160a3f1060235fecee5a47955797a4a", "text": "(optional)\n\nThe name of the Notefile used to report state changes when used in conjunction with \"sync\": true. Default Notefile name is _button.qo.\n\nconnected (Added in v3.3.1)\n\nboolean (optional)\n\nIf true, defers the sync of the state change Notefile to the next sync as configured by the hub.set request.\n\nlimit (Added in v3.4.1)\n\nboolean (optional)\n\nIf true, along with \"mode\":\"track\" and gps:true the Notecard will disable concurrent modem use during GPS tracking.\n\nsensitivity (Added in v3.5.1)\n\nint (optional)\n\nWhen used with \"mode\":\"neo-monitor\", this controls the brightness of NeoPixel lights, where 100 is the maximum brightness and 1 is the minimum.\n\nms (Added in v5.1.1)\n\nint (optional)\n\nWhen in gpio mode, this argument configures a debouncing interval. With a debouncing interval in place, the Notecard excludes all transitions with a shorter duration than the provided debounce time, in milliseconds. This interval only applies to GPIOs configured with a usage of count, count-pulldown, or count-pullup.\n\nMotion Mode\nTrack Mode\nMonitor Mode\nNeo-Monitor Mode\nTrack Mode With External GPS\nGPIO Mode\nGPIO Mode With Count\nGPIO Mode With Notefile\nSetting AUX UART Baud\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.aux\",\n  \"mode\": \"motion\"\n}\n\nSupplement autonomous tracking with digital inputs and a status output.\n\nResponse Members\nmode\n\nstring\n\nThe current AUX mode, or off if not set.\n\nstate\n\narray of JSON objects\n\nWhen in AUX gpio mode, the state of each AUX pin. Possible values are:\n\n{} when the pin is off.\n\n{\"high\":", "start_char_idx": 7654, "end_char_idx": 9181, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "ada6c377-8b8d-45b9-9ef5-f428d5c1c9fc": {"__data__": {"id_": "ada6c377-8b8d-45b9-9ef5-f428d5c1c9fc", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "ec6e04e4-5341-4277-a7ab-43d97741d77b", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "cb9e1a65356bb99748c1372e58148ff06160a3f1060235fecee5a47955797a4a"}, "3": {"node_id": "7589cc44-2718-40f3-9d71-e52997d07194", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "b1814b62491fe178ef509ee5f179078d54b313ca7124bec775db0c462d3bbb0e"}}, "hash": "89840c595c4ba4e45b11cd14450892141e839cc39edd7e128d22c520e4820fc2", "text": "Possible values are:\n\n{} when the pin is off.\n\n{\"high\": true}\n\n{\"low\": true}\n\n{\"input\": true}\n\n{\"count\": [4]} where each item in the array is the count per sample.\n\ntime\n\nUNIX Epoch time\n\nWhen in AUX gpio mode, and if count is enabled on an AUX pin, the time that counting started.\n\nseconds\n\ninteger\n\nWhen in AUX gpio mode, and if count is enabled on an AUX pin, the number of seconds per sample.\n\npower (Added in v3.3.1)\n\nboolean\n\nIf true, indicates the Notecard has USB (main) power. This parameter only appears in the body of the Note in Notehub if using \"sync\":true.\n\nExample Response\nCOPY\n{\n  \"mode\": \"gpio\",\n  \"state\": [\n    {}, // AUX1\n    { \"low\": true }, // AUX2\n    { \"high\": true }, // AUX3\n    { \"count\": [3] } // AUX4\n  ],\n  \"time\": 1592587637,\n  \"seconds\": 2\n}\nMore information:\nWorking with the Notecard AUX Pins\nUsing Monitor Mode\ncard.aux.serial \n\nAdded in v3.4.1. Configure various uses of the AUXTX and AUXRX pins on the Notecard edge connector.\n\nNote\n\nUtilizing these pins requires a physical connection to each pin, separate from a connection to the Notecard's serial data interfaces. See this guide for an example of connecting to the Notecard AUX pins using an FTDI cable.\n\nArguments\nmode\n\nstring\n\nThe AUX mode. Must be one of the following:\n\n\"req\" (Default) for request/response monitoring on the AUX pins\n\n\"gps\"\n\n\"notify\" And one or more of the options below to send streaming data or", "start_char_idx": 9170, "end_char_idx": 10579, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "7589cc44-2718-40f3-9d71-e52997d07194": {"__data__": {"id_": "7589cc44-2718-40f3-9d71-e52997d07194", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "ada6c377-8b8d-45b9-9ef5-f428d5c1c9fc", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "89840c595c4ba4e45b11cd14450892141e839cc39edd7e128d22c520e4820fc2"}, "3": {"node_id": "d6818117-e500-46c7-b123-f9234319528b", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "2ef4b290af9937f95364f9a518eb3ef7076100cb77a158de2082d7a648765de2"}}, "hash": "b1814b62491fe178ef509ee5f179078d54b313ca7124bec775db0c462d3bbb0e", "text": "And one or more of the options below to send streaming data or Notification data over the AUX pins.\n\n\"accel\"\n\n\"signals\"\n\n\"env\"\n\n\"dfu\" (Added in v5.1.1)\n\nduration\n\ninteger (optional)\n\nIf using mode: \"accel\", specify a sampling duration for the Notecard accelerometer.\n\nrate\n\ninteger (optional)\n\nThe baud rate or speed at which information is transmitted over AUX serial. The default is 115200 unless using GPS, in which case the default is 9600.\n\nlimit\n\nboolean (optional)\n\nIf true, along with mode:\"gps\" the Notecard will disable concurrent modem use during GPS tracking.\n\nminutes (Added in v5.1.1)\n\ninteger (optional)\n\nWhen using mode: \"dfu\", specify an interval for notifying the host.\n\nReq Mode\nGPS Mode\nAccelerometer Mode\nSignal Mode\nEnvironment Variable Mode\nDFU Mode\nMultiple Mode\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.aux.serial\",\n  \"mode\": \"req\"\n}\nResponse Members\nmode\n\nstring\n\nThe current AUX mode.\n\nrate (Added in v4.1.1)\n\ninteger\n\nThe baud rate or speed at which information is transmitted over AUX serial.\n\nExample Response\nCOPY\n{\n  \"mode\": \"req\",\n  \"rate\": 115200\n}\nMore information:\nWorking with the Notecard AUX Pins\ncard.carrier \n\nUses the AUX5 pin on the Notecard edge connector to notify the Notecard that the pin is connected to a Notecarrier that supports charging, using open-drain.\n\nOnce set, {\"charging\":true} will appear in a response if the Notecarrier is currently indicating that charging is in progress.\n\nArguments\nmode\n\nstring\n\nThe AUX5", "start_char_idx": 10578, "end_char_idx": 12046, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "d6818117-e500-46c7-b123-f9234319528b": {"__data__": {"id_": "d6818117-e500-46c7-b123-f9234319528b", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "7589cc44-2718-40f3-9d71-e52997d07194", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "b1814b62491fe178ef509ee5f179078d54b313ca7124bec775db0c462d3bbb0e"}, "3": {"node_id": "38fa8423-1d58-4b1f-95d7-d38bfc1315f4", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "f8209154b56fb21b609762aa18a21319e37a5eb8300bf25e5e90907ad981c12a"}}, "hash": "2ef4b290af9937f95364f9a518eb3ef7076100cb77a158de2082d7a648765de2", "text": "charging is in progress.\n\nArguments\nmode\n\nstring\n\nThe AUX5 mode. Set to \"charging\" to tell the Notecard that AUX5 is connected to a Notecarrier that supports charging on AUX5. Set to \"-\" or \"off\" to turn off the AUX5 detection.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.carrier\",\n  \"mode\": \"charging\"\n}\nResponse Members\nmode\n\nstring\n\nThe current AUX5 mode, or off if not set.\n\ncharging\n\nboolean\n\nWill display true when in AUX5 \"charging\" mode.\n\nExample Response\nCOPY\n{\n \"mode\": \"charging\",\n \"charging\": true\n}\ncard.contact \n\nUsed to set or retrieve information about the Notecard maintainer. Once set, this information is synched to Notehub and can be found in the _env.dbs file.\n\nArguments\nname\n\nstring (optional)\n\norg\n\nstring (optional)\n\nrole\n\nstring (optional)\n\nemail\n\nstring (optional)\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.contact\",\n  \"name\": \"Tom Turkey\",\n  \"org\": \"Blues\",\n  \"role\": \"Head of Security\",\n  \"email\": \"tom@blues.com\"\n}\nResponse Members\nname\n\nstring\n\nName of the Notecard maintainer.\n\norg\n\nstring\n\nOrganization name of the Notecard maintainer.\n\nrole\n\nstring\n\nRole of the Notecard maintainer.\n\nemail\n\nstring\n\nEmail address of the Notecard maintainer.\n\nExample Response\nCOPY\n{\n  \"name\": \"Tom Turkey\",\n  \"org\": \"Blues\",\n  \"role\": \"Head of Security\",\n  \"email\": \"tom@blues.com\"\n}\ncard.dfu \n\nAdded", "start_char_idx": 12043, "end_char_idx": 13372, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "38fa8423-1d58-4b1f-95d7-d38bfc1315f4": {"__data__": {"id_": "38fa8423-1d58-4b1f-95d7-d38bfc1315f4", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "d6818117-e500-46c7-b123-f9234319528b", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "2ef4b290af9937f95364f9a518eb3ef7076100cb77a158de2082d7a648765de2"}, "3": {"node_id": "9cda6db2-ca18-466e-b1d5-895240cd5dac", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "1f05a488a679d1a336aa51563c403eac7374ceaffa57c2497416957b2e449abc"}}, "hash": "f8209154b56fb21b609762aa18a21319e37a5eb8300bf25e5e90907ad981c12a", "text": "\"tom@blues.com\"\n}\ncard.dfu \n\nAdded in v3.5.1\n\nUsed to configure a Notecard for Notecard Outboard Firmware Update.\n\nArguments\nname\n\nstring\n\nOne of the supported classes of host MCU. Supported MCU classes are \"esp32\", \"stm32\", \"stm32-bi\", and \"-\", which resets the configuration.\n\nThe \"bi\" in \"stm32-bi\" stands for \"boot inverted\", and the \"stm32-bi\" option should be used on STM32 family boards where the hardware boot pin is assumed to be active low, instead of active high.\n\nSupported MCUs can be found on the Notecarrier-F datasheet.\n\non\n\nboolean (optional)\n\nSet to true to enable Notecard Outboard Firmware Update.\n\noff\n\nboolean (optional)\n\nSet to true to disable Notecard Outboard Firmware Update from occurring.\n\nstop\n\nboolean (optional)\n\nSet to true to disable the host RESET that is normally performed on the host MCU when the Notecard starts up (in order to ensure a clean startup), and also when the Notecard wakes up the host MCU after the expiration of a card.attn \"sleep\" operation. If true, the host MCU will not be reset in these two conditions.\n\nstart\n\nboolean (optional)\n\nSet to true to enable the host RESET if previously disabled with \"stop\":true.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.dfu\",\n  \"name\": \"stm32\",\n  \"on\": true\n}\nResponse Members\nname\n\nstring\n\nThe class of MCU that the Notecard is currently configured to support for Outboard DFU.\n\nExample Response\nCOPY\n{\n  \"name\": \"stm32\"\n}\nMore information:\nNotecard Outboard", "start_char_idx": 13394, "end_char_idx": 14848, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "9cda6db2-ca18-466e-b1d5-895240cd5dac": {"__data__": {"id_": "9cda6db2-ca18-466e-b1d5-895240cd5dac", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "38fa8423-1d58-4b1f-95d7-d38bfc1315f4", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "f8209154b56fb21b609762aa18a21319e37a5eb8300bf25e5e90907ad981c12a"}, "3": {"node_id": "5f908d5f-aefa-4f55-962b-fa72585c3360", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "e708425f8788bc8fabf24d9b38eeade82df57063d7597b6b4bfc2e6cdd68f2f8"}}, "hash": "1f05a488a679d1a336aa51563c403eac7374ceaffa57c2497416957b2e449abc", "text": "\"name\": \"stm32\"\n}\nMore information:\nNotecard Outboard Firmware Update Guide\ncard.io \n\nCan be used to override the Notecard's I2C address from its default of 0x17.\n\nArguments\ni2c\n\ndecimal (optional)\n\nThe alternate address to use for I2C communication. Pass -1 to reset to the default address.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.io\",\n  \"i2c\": 24\n}\n\nSet the I2C address to 0x18.\n\nResponse Members\nNone: an empty object {} means success.\ncard.location \n\nRetrieves the last known GPS location of the Cellular Notecard and the time at which it was acquired. Use card.location.mode to configure GPS settings.\n\nArguments\nNone\nExample\nJSON\nC/C++\nPython\nCOPY\n{ \"req\": \"card.location\" }\nResponse Members\nstatus\n\nstring\n\nThe current status of the Notecard GPS connection.\n\nmode\n\nstring\n\nThe GPS connection mode. Will be continuous, periodic, or off.\n\nlat\n\ndecimal\n\nThe latitude in degrees of the last known location.\n\nlon\n\ndecimal\n\nThe longitude in degrees of the last known location.\n\ntime\n\nUNIX Epoch time\n\nThe time of location capture.\n\nmax\n\ninteger\n\nIf a geofence is enabled by card.location.mode, meters from the geofence center.\n\nExample Response\nCOPY\n{\n  \"status\": \"GPS updated (58 sec, 41dB SNR, 9 sats) {gps-active}\n            {gps-signal} {gps-sats} {gps}\",\n  \"mode\":   \"periodic\",\n  \"lat\":    42.577600,\n  \"lon\":", "start_char_idx": 14832, "end_char_idx": 16158, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "5f908d5f-aefa-4f55-962b-fa72585c3360": {"__data__": {"id_": "5f908d5f-aefa-4f55-962b-fa72585c3360", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "9cda6db2-ca18-466e-b1d5-895240cd5dac", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "1f05a488a679d1a336aa51563c403eac7374ceaffa57c2497416957b2e449abc"}, "3": {"node_id": "842e55aa-e4a0-4980-8485-b17e724cdcac", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "f60d7e9a5b194ca7b29fdc5e811e392de90c9a1a965bf805a5de4e7ca9b9a008"}}, "hash": "e708425f8788bc8fabf24d9b38eeade82df57063d7597b6b4bfc2e6cdd68f2f8", "text": " \"lat\":    42.577600,\n  \"lon\":    -70.871340,\n  \"time\":   1598554399,\n  \"max\":    25\n}\nMore information:\nNotecard Time & Location Requests\ncard.location.mode \n\nSets location-related configuration settings. Retrieves the current location mode when passed with no argument.\n\nArguments\nmode\n\nstring (optional)\n\nMust be one of:\n\n\"\" to retrieve the current mode.\n\n\"off\" to turn location mode off.\n\n\"periodic\" to sample location at a specified interval, if the device has moved.\n\n\"continuous\" to enable the Notecard's GNSS module for continuous sampling.\n\n\"fixed\" to report the location as a fixed location using the specified lat and lon coordinates.\n\nseconds\n\nint (optional)\n\nWhen in periodic mode, location will be sampled at this interval, if the Notecard detects motion. If seconds is < 300, during periods of sustained movement the Notecard will leave the GPS on continuously to avoid powering GPS on and off repeatedly.\n\nvseconds\n\nstring (optional)\n\nIn periodic mode, overrides seconds with a voltage-variable value.\n\ndelete\n\nboolean (optional)\n\nSet to true to delete the last known location stored in the Notecard.\n\nmax\n\nint (optional)\n\nMeters from a geofence center. Used to enable geofence location tracking.\n\nlat\n\ndecimal (Default: last known location)\n\nWhen geofence is enabled, latitude in degrees of the geofence center.\n\nlon\n\ndecimal (Default: last known location)\n\nWhen geofence is enabled, longitude in degrees of the geofence center.\n\nminutes\n\nint (Default: 5)\n\nWhen geofence is enabled, the number of minutes the device should be outside the geofence before the", "start_char_idx": 16186, "end_char_idx": 17760, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "842e55aa-e4a0-4980-8485-b17e724cdcac": {"__data__": {"id_": "842e55aa-e4a0-4980-8485-b17e724cdcac", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "5f908d5f-aefa-4f55-962b-fa72585c3360", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "e708425f8788bc8fabf24d9b38eeade82df57063d7597b6b4bfc2e6cdd68f2f8"}, "3": {"node_id": "3dcfab35-4098-484c-a95d-ef955dbfceb9", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "e8b8ef65d3e69377a446768c8fdfb8af3690f7dd9f61fb9623884de79d5b6479"}}, "hash": "f60d7e9a5b194ca7b29fdc5e811e392de90c9a1a965bf805a5de4e7ca9b9a008", "text": "is enabled, the number of minutes the device should be outside the geofence before the Notecard location is tracked.\n\nthreshold\n\nint (Default: 0)\n\nWhen in periodic mode, the number of motion events (registered by the built-in accelerometer) required to trigger GPS to turn on.\n\nContinuous Mode\nPeriodic Mode\nVoltage Variable Mode\nGeofence Mode\nFixed Mode\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.location.mode\",\n  \"mode\": \"continuous\"\n}\nResponse Members\nmode\n\nstring\n\nThe current location mode.\n\nseconds\n\ninteger\n\nIf specified, the periodic sample interval.\n\nvseconds\n\nstring\n\nIf specified, the voltage-variable period.\n\nmax\n\ninteger\n\nIf geofence is enabled, the meters from geofence center.\n\nlat\n\ndecimal\n\nIf geofence is enabled, the geofence center latitude in degrees.\n\nlon\n\ndecimal\n\nIf geofence is enabled, the geofence center longitude in degrees.\n\nminutes (Added in v1.5.3)\n\ninteger\n\nIf geofence is enabled, the currently configured geofence debounce period.\n\nthreshold (Added in v3.4.1)\n\ninteger\n\nWhen in periodic mode, the number of motion events (registered by the built-in accelerometer) required to trigger GPS to turn on.\n\nExample Response\nCOPY\n{\n  \"mode\": \"continuous\",\n  \"max\": 100,\n  \"lat\": 42.5776,\n  \"lon\": -70.87134,\n  \"minutes\": 2,\n  \"threshold\": 4\n}\nMore information:\nLocation Continuous Mode\nLocation Periodic Mode\nLocation Sampling at Voltage Variable Intervals\nGeofencing with the Notecard\ncard.location.track \n\nStore location data in a Notefile at the periodic interval, or", "start_char_idx": 17712, "end_char_idx": 19208, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "3dcfab35-4098-484c-a95d-ef955dbfceb9": {"__data__": {"id_": "3dcfab35-4098-484c-a95d-ef955dbfceb9", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "842e55aa-e4a0-4980-8485-b17e724cdcac", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "f60d7e9a5b194ca7b29fdc5e811e392de90c9a1a965bf805a5de4e7ca9b9a008"}, "3": {"node_id": "5f119488-4243-43e6-9b10-8ed9ff2c4d80", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "bb7140957501c6b52b19cd5a289aaff1cfd95393174945a1167c80e7654ffd96"}}, "hash": "e8b8ef65d3e69377a446768c8fdfb8af3690f7dd9f61fb9623884de79d5b6479", "text": "\n\nStore location data in a Notefile at the periodic interval, or using a specified heartbeat. Only available when card.location.mode has been set to periodic.\n\nArguments\nstart\n\nboolean\n\nSet to true to start Notefile tracking.\n\nheartbeat\n\nboolean\n\nWhen start is true, set to true to enable tracking even when motion is not detected.\n\nsync (Added in v1.5.5)\n\nboolean\n\nSet to true to perform an immediate sync to the Notehub each time a new Note is added.\n\nstop\n\nboolean\n\nSet to true to stop Notefile tracking.\n\nhours\n\ninteger\n\nIf heartbeat is true, add a heartbeat entry at this interval.\n\nfile\n\nstring (Default: _track.qo)\n\nThe Notefile in which to store tracked location data. See the _track.qo Notefile's documentation for details on the format of the data captured.\n\nStart\nStop\nHeartbeat\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.location.track\",\n  \"start\": true,\n  \"file\": \"locations.qo\"\n}\nResponse Members\nstart\n\nboolean\n\ntrue if tracking is enabled.\n\nstop\n\nboolean\n\ntrue if tracking is disabled.\n\nheartbeat\n\nboolean\n\ntrue if heartbeat is enabled.\n\nseconds\n\ninteger\n\nIf tracking is enabled and a heartbeat hours value is not set, the tracking interval set in card.location.mode.\n\nhours\n\ninteger\n\nThe heartbeat interval, if provided.\n\nfile\n\nstring\n\nThe tracking Notefile, if provided.\n\nExample Response\nCOPY\n{\n  \"start\": true,\n  \"heartbeat\": true,\n  \"file\": \"locations.qo\",\n  \"hours\": 2\n}\nMore information:\nTracking GPS Location Readings\nThe _track.qo Notefile\ncard.monitor", "start_char_idx": 19227, "end_char_idx": 20701, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "5f119488-4243-43e6-9b10-8ed9ff2c4d80": {"__data__": {"id_": "5f119488-4243-43e6-9b10-8ed9ff2c4d80", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "3dcfab35-4098-484c-a95d-ef955dbfceb9", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "e8b8ef65d3e69377a446768c8fdfb8af3690f7dd9f61fb9623884de79d5b6479"}, "3": {"node_id": "c3ebc534-5208-4db7-bf13-805d756db279", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "42cfdec38040636e86933a117afb6bd2a285252536883fe254138c942a0bdebe"}}, "hash": "bb7140957501c6b52b19cd5a289aaff1cfd95393174945a1167c80e7654ffd96", "text": "GPS Location Readings\nThe _track.qo Notefile\ncard.monitor \n\nWhen a Notecard is in monitor mode, this API is used to configure the general-purpose AUX1-AUX4 pins to test and monitor Notecard activity.\n\nNote\n\nUtilizing these pins requires a physical connection to each pin, separate from a connection to the Notecard's M.2 connector.\n\nArguments\nmode\n\nstring (optional)\n\nCan be set to one of green, red or yellow to temporarily override the behavior of an AUX pin LED.\n\nSee Using Monitor Mode for additional details.\n\ncount\n\nint (optional)\n\nThe number of pulses to send to the overridden AUX pin LED. Set this value to 0 to return the LED to its default behavior.\n\nusb\n\nboolean (optional)\n\nSet to true to configure LED behavior so that it is only active when the Notecard is connected to USB power.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.monitor\",\n  \"mode\": \"green\",\n  \"count\": 5\n}\nResponse Members\nNone: an empty object {} means success.\nMore information:\nUsing Monitor Mode\ncard.motion \n\nReturns information about the Notecard accelerometer's motion and orientation. Motion tracking must be enabled first with card.motion.mode. Otherwise, this request will return {}.\n\nArguments\nminutes\n\ninteger (optional)\n\nAmount of time to sample for buckets of accelerometer-measured movement. For instance, 5 will sample motion events for the previous five minutes and return a movements string with motion counts in each bucket.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.motion\",\n  \"minutes\": 2\n}\nResponse Members\ncount\n\ninteger\n\nThe number of accelerometer motion events since the card.motion request was last made.\n\nalert\n\nboolean\n\ntrue if the", "start_char_idx": 20703, "end_char_idx": 22353, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "c3ebc534-5208-4db7-bf13-805d756db279": {"__data__": {"id_": "c3ebc534-5208-4db7-bf13-805d756db279", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "5f119488-4243-43e6-9b10-8ed9ff2c4d80", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "bb7140957501c6b52b19cd5a289aaff1cfd95393174945a1167c80e7654ffd96"}, "3": {"node_id": "6ee5838b-401f-4c4c-99ba-8fb69d88e0eb", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "443b848a06fb0c5a1048a80da38151ed0a0ab24764e5d38c085a50339f747c72"}}, "hash": "42cfdec38040636e86933a117afb6bd2a285252536883fe254138c942a0bdebe", "text": "card.motion request was last made.\n\nalert\n\nboolean\n\ntrue if the Notecard's accelerometer detected a free-fall since the last request to card.motion.\n\nmotion\n\nUNIX Epoch time\n\nTime of the last accelerometer motion event.\n\nstatus\n\nstring\n\nComma-separated list of accelerometer orientation events that ocurred since the last request to card.motion. One or more of the following:\n\n\"face-up\"\n\n\"face-down\"\n\n\"portrait-up\"\n\n\"portrait-down\"\n\n\"landscape-right\"\n\n\"landscape-left\"\n\nseconds\n\ninteger\n\nIf the minutes argument is provided, the duration of each bucket of sample accelerometer movements.\n\nmovements\n\nstring\n\nIf the minutes argument is provided, a string of base-36 characters, where each character represents the number of accelerometer movements in each bucket during the sample duration. Each character will be a digit 0-9, A-Z to indicate a count of 10-35, or * to indicate a count greater than 35.\n\nExample Response\nCOPY\n{\n  \"count\": 17,\n  \"status\": \"face-up\",\n  \"alert\": true,\n  \"motion\": 1599741952,\n  \"seconds\": 5,\n  \"movements\": \"520000000000000000000A\"\n}\nMore information:\nMotion Monitoring\nRetrieving Motion Results over a Time Period\ncard.motion.mode \n\nConfigures accelerometer motion monitoring parameters used when providing results to card.motion.\n\nArguments\nstart\n\nboolean (optional)\n\ntrue to enable the Notecard accelerometer and start motion tracking.\n\nstop\n\nboolean (optional)\n\ntrue to disable the Notecard accelerometer stop motion tracking.\n\nseconds\n\ninteger (optional)\n\nPeriod for each bucket of movements to be accumulated when minutes is used with card.motion.\n\nsensitivity", "start_char_idx": 22350, "end_char_idx": 23946, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6ee5838b-401f-4c4c-99ba-8fb69d88e0eb": {"__data__": {"id_": "6ee5838b-401f-4c4c-99ba-8fb69d88e0eb", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "c3ebc534-5208-4db7-bf13-805d756db279", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "42cfdec38040636e86933a117afb6bd2a285252536883fe254138c942a0bdebe"}, "3": {"node_id": "a40ef254-9a54-4376-b54f-f9c93036abdb", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "edf663ad6c2818d42fd8e177ef95d8521a97c9c6def280638af969ae4d23f613"}}, "hash": "443b848a06fb0c5a1048a80da38151ed0a0ab24764e5d38c085a50339f747c72", "text": "to be accumulated when minutes is used with card.motion.\n\nsensitivity (Added in v3.3.1)\n\ninteger (Default -1)\n\nUsed to set the accelerometer sample rate. The default sample rate of 1.6Hz could miss short-duration accelerations (e.g. bumps and jolts), and free fall detection may not work reliably with short falls. The penalty for increasing the sample rate to 25Hz is increased current consumption by ~1.5uA relative to the default -1 setting.\n\n-1 : 1.6Hz, +/-2G range, 1 milli-G sensitivity\n\n1 : 25Hz, +/- 16G range, 7.8 milli-G sensitivity\n\n2 : 25Hz, +/- 8G range, 3.9 milli-G sensitivity\n\n3 : 25Hz, +/- 4G range, 1.95 milli-G sensitivity\n\n4 : 25Hz, +/- 2G range, 1 milli-G sensitivity\n\n5 : 25Hz, +/- 2G range, 0.25 milli-G sensitivity\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.motion.mode\",\n  \"start\": true,\n  \"seconds\": 10,\n  \"sensitivity\": 2\n}\nResponse Members\nNone: an empty object {} means success.\nMore information:\nConfiguring Motion Monitoring with card.motion.mode\ncard.motion.sync \n\nConfigures automatic sync triggered by Notecard movement.\n\nArguments\nstart\n\nboolean (optional)\n\ntrue to start motion-triggered syncing.\n\nstop\n\nboolean (optional)\n\ntrue to stop motion-triggered syncing.\n\nminutes\n\ninteger (optional)\n\nThe maximum frequency at which sync will be triggered. Even if a threshold is set and exceeded, there will only be a single sync for this amount of time.\n\ncount\n\ninteger (optional)\n\nThe number of most", "start_char_idx": 23943, "end_char_idx": 25378, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "a40ef254-9a54-4376-b54f-f9c93036abdb": {"__data__": {"id_": "a40ef254-9a54-4376-b54f-f9c93036abdb", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "6ee5838b-401f-4c4c-99ba-8fb69d88e0eb", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "443b848a06fb0c5a1048a80da38151ed0a0ab24764e5d38c085a50339f747c72"}, "3": {"node_id": "3f0c67d8-9897-4e3d-aa9a-5d444ae6f878", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "33743a681c5d7bf0194faf058a9bede881a8a0c1a0a68751a5e2a919b2ea665a"}}, "hash": "edf663ad6c2818d42fd8e177ef95d8521a97c9c6def280638af969ae4d23f613", "text": "this amount of time.\n\ncount\n\ninteger (optional)\n\nThe number of most recent motion buckets to examine.\n\nthreshold\n\ninteger (optional)\n\nThe number of buckets that must indicate motion in order to trigger a sync.\n\nIf set to 0, the Notecard will only perform a sync when its orientation changes.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.motion.sync\",\n  \"start\": true,\n  \"minutes\": 20,\n  \"count\": 20,\n  \"threshold\": 5\n}\nResponse Members\nNone: an empty object {} means success.\nMore information:\nConfiguring Notehub Sync on Motion\nThe _motion.qo Notefile\ncard.motion.track \n\nConfigures automatic capture of Notecard accelerometer motion in a Notefile.\n\nArguments\nstart\n\nboolean (optional)\n\ntrue to start motion capture.\n\nstop\n\nboolean (optional)\n\ntrue to stop motion capture.\n\nminutes\n\ninteger (optional)\n\nThe maximum period to capture Notes in the Notefile.\n\ncount\n\ninteger (optional)\n\nThe number of most recent motion buckets to examine.\n\nthreshold\n\ninteger (optional)\n\nThe number of buckets that must indicate motion in order to capture.\n\nfile\n\nstring (Default _motion.qo)\n\nThe Notefile to use for motion capture Notes. See the _motion.qo Notefile's documentation for details on the format of the data captured.\n\nnow\n\nboolean (optional)\n\nSet to true to trigger the immediate creation of a _motion.qo event if the orientation of the Notecard changes (overriding the minutes setting).\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.motion.track\",\n  \"start\": true,\n  \"minutes\": 20,\n  \"count\":", "start_char_idx": 25380, "end_char_idx": 26876, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "3f0c67d8-9897-4e3d-aa9a-5d444ae6f878": {"__data__": {"id_": "3f0c67d8-9897-4e3d-aa9a-5d444ae6f878", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "a40ef254-9a54-4376-b54f-f9c93036abdb", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "edf663ad6c2818d42fd8e177ef95d8521a97c9c6def280638af969ae4d23f613"}, "3": {"node_id": "66d302dc-3e41-462a-b957-ca7719b2fcad", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "121efcb8aaa7d9944f05bbcc6a1e69675b0a7db12cf572f63a8c2f3e9c5843da"}}, "hash": "33743a681c5d7bf0194faf058a9bede881a8a0c1a0a68751a5e2a919b2ea665a", "text": " \"start\": true,\n  \"minutes\": 20,\n  \"count\": 20,\n  \"threshold\": 5,\n  \"file\": \"movements.qo\"\n}\nResponse Members\nNone: an empty object {} means success.\nMore information:\nAutomatic Motion Capture\nThe _motion.qo Notefile\ncard.random \n\nAdded in v1.5.3\n\nObtain a single random 32 bit unsigned integer modulo count or count bytes of random data from the Notecard hardware random number generator.\n\nArguments\nmode\n\nstring (optional)\n\nAccepts a single value \"payload\" and, if specified, uses the count value to determine the number of bytes of random data to generate and return to the host.\n\ncount\n\nint\n\nIf the mode argument is excluded from the request, the Notecard uses this as an upper-limit parameter and returns a random unsigned 32 bit integer between zero and the value provided.\n\nIf \"mode\":\"payload\" is used, this argument sets the number of random bytes of data to return in a base64-encoded buffer from the Notecard.\n\nGet a Random Number\nGet a Buffer of Numbers\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.random\",\n  \"count\": 100\n}\nResponse Members\ncount\n\nint\n\nA random number generated by the Notecard's onboard hardware random number generator.\n\npayload\n\nbas64 string\n\nIf using \"mode\":\"payload\", a base64-encoded string with random values, the length of which is specified by the count argument.\n\nExample Response\nCOPY\n{\n  \"count\": 86\n}\ncard.restart \n\nPerforms a firmware restart of the Notecard.\n\nWarning\n\nCalls to card.restart are not supported for use in production applications as they can cause increased cellular data and consumption credit", "start_char_idx": 26901, "end_char_idx": 28448, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "66d302dc-3e41-462a-b957-ca7719b2fcad": {"__data__": {"id_": "66d302dc-3e41-462a-b957-ca7719b2fcad", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "3f0c67d8-9897-4e3d-aa9a-5d444ae6f878", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "33743a681c5d7bf0194faf058a9bede881a8a0c1a0a68751a5e2a919b2ea665a"}, "3": {"node_id": "2de4e138-ac9b-4525-86ec-941b95f2e4be", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "32a58e0f2008943d8377042a2e9777a0864df5aaf979f5a6fc92b1901550db9c"}}, "hash": "121efcb8aaa7d9944f05bbcc6a1e69675b0a7db12cf572f63a8c2f3e9c5843da", "text": "for use in production applications as they can cause increased cellular data and consumption credit usage.\n\nArguments\nNone\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.restart\"\n}\nResponse Members\nNone: an empty object {} means success.\ncard.restore \n\nPerforms a factory reset on the Notecard and restarts.\n\nArguments\ndelete\n\nboolean (optional)\n\ntrue to also clear out configuration settings (for example, the ProductUID). Please note that the Notecard will be unable to sync to notehub until the ProductUID is re-set if this option is used.\n\nconnected (Added in v1.5.5)\n\nboolean (optional)\n\ntrue to request Notehub perform a device-specific factory reset (delete and deprovision) the next time the Notecard connects. This would also remove any Notefile templates used by this device.\n\nConversely, if connected is false (or omitted), then the Notecard's settings and data will be restored from Notehub the next time the Notecard connects to the previously used Notehub project.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.restore\",\n  \"delete\": true,\n  \"connected\": true\n}\nResponse Members\nNone: an empty object {} means success.\ncard.status \n\nReturns general information about the Notecard's operating status.\n\nArguments\nNone\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.status\"\n}\nResponse Members\nstatus\n\nstring\n\nGeneral status information.\n\nusb\n\nboolean\n\ntrue is the Notecard is being powered by USB.\n\nstorage\n\ninteger\n\nThe percentage of storage in use on the Notecard.\n\ntime\n\nUNIX Epoch time\n\nThe UNIX Epoch Time of approximately when the Notecard was first powered", "start_char_idx": 28400, "end_char_idx": 29978, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "2de4e138-ac9b-4525-86ec-941b95f2e4be": {"__data__": {"id_": "2de4e138-ac9b-4525-86ec-941b95f2e4be", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "66d302dc-3e41-462a-b957-ca7719b2fcad", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "121efcb8aaa7d9944f05bbcc6a1e69675b0a7db12cf572f63a8c2f3e9c5843da"}, "3": {"node_id": "c930430e-a0ac-4ff1-b9c5-e0127bf61c92", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "abe96e7733bdc4d65d1be22f9b0030354431060357d8ccec6cce8cae7446f97a"}}, "hash": "32a58e0f2008943d8377042a2e9777a0864df5aaf979f5a6fc92b1901550db9c", "text": "time\n\nThe UNIX Epoch Time of approximately when the Notecard was first powered up.\n\nconnected\n\nboolean\n\ntrue if connected to Notehub.\n\ncell\n\nboolean\n\ntrue if the modem is currently powered on.\n\ngps (Added in v3.3.1)\n\nboolean\n\ntrue if Notecard's GPS module is currently powered on.\n\nwifi (Added in v3.3.1)\n\nboolean\n\ntrue if the Wi-Fi Notecard's radio is currently powered on.\n\nExample Response\nCOPY\n{\n  \"status\":    \"{normal}\",\n  \"usb\":       true,\n  \"storage\":   8,\n  \"time\":      1599684765,\n  \"connected\": true,\n  \"cell\":      true\n}\ncard.temp \n\nGet the current temperature from the Notecard's onboard calibrated temperature sensor.\n\nArguments\nseconds\n\nint (optional)\n\nIf specified, creates a templated _temp.qo file that gathers Notecard temperature value at the specified seconds interval. When using card.aux track mode, the sensor temperature, pressure, and humidity is also included with each Note.\n\nstop\n\nboolean (optional)\n\nIf set to true, the Notecard will stop logging the temperature value at the interval specified with the seconds parameter (see above).\n\nGet Card Temp\nConfigure Temp Tracking\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.temp\"\n}\nResponse Members\nvalue\n\ndecimal\n\nThe current temperature in degrees centigrade, including the calibration offset.\n\ncalibration\n\ndecimal\n\nThe calibration differential of the sensor.\n\nExample Response\nCOPY\n{\n  \"value\": 27.625,\n  \"calibration\": -3.0\n}\nMore", "start_char_idx": 29997, "end_char_idx": 31405, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "c930430e-a0ac-4ff1-b9c5-e0127bf61c92": {"__data__": {"id_": "c930430e-a0ac-4ff1-b9c5-e0127bf61c92", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "2de4e138-ac9b-4525-86ec-941b95f2e4be", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "32a58e0f2008943d8377042a2e9777a0864df5aaf979f5a6fc92b1901550db9c"}, "3": {"node_id": "7c011eb6-ff5f-4b47-befb-a583bcea240b", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "438b25a9ce31e094c27f7752fbb3f73c7f102e5098e0ebd84b88d6320f059783"}}, "hash": "abe96e7733bdc4d65d1be22f9b0030354431060357d8ccec6cce8cae7446f97a", "text": "27.625,\n  \"calibration\": -3.0\n}\nMore information:\nNotecard Temperature Monitoring\ncard.time \n\nRetrieves current date and time information. Upon power-up, the Notecard must complete a sync to Notehub in order to obtain time and location data. Before the time is obtained, this request will return {\"zone\":\"UTC,Unknown\"}.\n\nArguments\nNone\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.time\"\n}\nResponse Members\ntime\n\nUNIX Epoch time\n\nThe current time. Will only populate if the Notecard has completed a sync to Notehub to obtain the time.\n\narea\n\nstring\n\nThe geographic area of the Notecard, if the cell tower is recognized.\n\nzone\n\nstring\n\nThe time zone of the Notecard, if the cell tower is recognized.\n\nminutes\n\ninteger\n\nNumber of minutes East of GMT, if the cell tower is recognized.\n\nlat\n\ndecimal\n\nLatitude of the Notecard, if the cell tower is recognized.\n\nlon\n\ndecimal\n\nLongitude of the Notecard, if the cell tower is recognized.\n\ncountry\n\nstring\n\nThe country where the Notecard is located, if the cell tower is recognized.\n\nExample Response\nCOPY\n{\n  \"time\": 1599769214,\n  \"area\": \"Beverly, MA\",\n  \"zone\": \"CDT,America/New York\",\n  \"minutes\": -300,\n  \"lat\": 42.5776,\n  \"lon\": -70.87134,\n  \"country\": \"US\"\n}\nMore information:\nObtaining the Current Time and Date\ncard.triangulate \n\nEnables or disables a behavior by which the Notecard gathers information about surrounding cell towers and/or Wi-Fi access points with each new Notehub session.\n\nArguments\nmode\n\nstring\n\nThe", "start_char_idx": 31440, "end_char_idx": 32912, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "7c011eb6-ff5f-4b47-befb-a583bcea240b": {"__data__": {"id_": "7c011eb6-ff5f-4b47-befb-a583bcea240b", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "c930430e-a0ac-4ff1-b9c5-e0127bf61c92", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "abe96e7733bdc4d65d1be22f9b0030354431060357d8ccec6cce8cae7446f97a"}, "3": {"node_id": "b60afa71-8cb7-425c-ae76-9161721947b0", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "b6da357795b15d2d10fdb55dc638a99c199ad4460c88e6f404769fb4f786ff20"}}, "hash": "438b25a9ce31e094c27f7752fbb3f73c7f102e5098e0ebd84b88d6320f059783", "text": "points with each new Notehub session.\n\nArguments\nmode\n\nstring\n\nThe triangulation approach to use for determining the Notecard location. The following keywords can be used separately or together in a comma-delimited list, in any order.\n\ncell enables cell tower scanning to determine the position of the Device.\n\nwifi enables the use of nearby Wi-Fi access points to determine the position of the Device. To leverage this feature, the host will need to provide access point information to the Notecard via the text argument in subsequent requests.\n\n- to clear the currently-set triangulation mode.\n\nSee Using Cell Tower & Wi-Fi Triangulation for more information.\n\non\n\nboolean (Default: false)\n\ntrue to instruct the Notecard to triangulate even if the module has not moved. Only takes effect when set is true.\n\nusb\n\nboolean (Default: false)\n\ntrue to use perform triangulation only when the Notecard is connected to USB power. Only takes effect when set is true.\n\nset\n\nboolean (Default: false)\n\ntrue to instruct the module to use the state of the on and usb arguments.\n\nminutes\n\ninteger (Default: 0)\n\nMinimum delay, in minutes, between triangulation attempts. Use 0 for no time-based suppression.\n\ntext\n\nstring (Optional)\n\nWhen using Wi-Fi triangulation, a newline-terminated list of Wi-Fi access points obtained by the external module. Format should follow the ESP32's AT+CWLAP command output.\n\nSee Using Cell Tower & Wi-Fi Triangulation for more information.\n\ntime\n\nUNIX Epoch time (Optional)\n\nWhen passed with text, records the time that the Wi-Fi access point scan was performed. If not provided, Notecard time is used.\n\nSingle Mode\nDual Mode\nSend Wi-Fi AP Data\nDisable", "start_char_idx": 32885, "end_char_idx": 34555, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "b60afa71-8cb7-425c-ae76-9161721947b0": {"__data__": {"id_": "b60afa71-8cb7-425c-ae76-9161721947b0", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "7c011eb6-ff5f-4b47-befb-a583bcea240b", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "438b25a9ce31e094c27f7752fbb3f73c7f102e5098e0ebd84b88d6320f059783"}, "3": {"node_id": "a8e55667-059b-467f-a793-bcc553c4af22", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "90898ef788879c398e9e99770a8f5cfe71b88b5093ec5bde641a710c77818bc6"}}, "hash": "b6da357795b15d2d10fdb55dc638a99c199ad4460c88e6f404769fb4f786ff20", "text": "time is used.\n\nSingle Mode\nDual Mode\nSend Wi-Fi AP Data\nDisable Triangulation\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.triangulate\",\n  \"mode\": \"cell\",\n  \"on\": true,\n  \"set\": true\n}\nResponse Members\nmotion\n\nUNIX Epoch time\n\nTime of last detected Notecard movement.\n\ntime\n\nUNIX Epoch time\n\nTime of last triangulation scan.\n\nmode\n\nstring\n\nA comma-separated list indicating the active triangulation modes.\n\non\n\nboolean\n\ntrue if triangulation scans will be performed even if the device has not moved.\n\nusb\n\nboolean\n\ntrue if triangulation scans will be performed only when the device is USB-powered.\n\nlength\n\ninteger\n\nThe length of the text buffer provided in the current or a previous request.\n\nExample Response\nCOPY\n{\n  \"usb\": true,\n  \"mode\": \"wifi,cell\",\n  \"length\": 443,\n  \"on\": true,\n  \"time\": 1606755042,\n  \"motion\": 1606757487\n}\nMore information:\nUsing Cell Tower & Wi-Fi Triangulation\ncard.usage.get \n\nReturns the card's network usage statistics.\n\nNote\n\nUsage data is updated by the Notecard at the end of each network connection. If connected in continuous mode, usage data will not be updated until the current session ends, which you can configure with the hub.set duration argument.\n\nArguments\nmode\n\nstring (Default: \"total\")\n\nThe time period to use for statistics. Must be one of:\n\n\"total\" for all stats since the Notecard was activated.\n\n\"1hour\"\n\n\"1day\"\n\n\"30day\"\n\noffset\n\ninteger (optional)\n\nThe number of time periods to look backwards, based on the specified mode.\n\nTo", "start_char_idx": 34561, "end_char_idx": 36038, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "a8e55667-059b-467f-a793-bcc553c4af22": {"__data__": {"id_": "a8e55667-059b-467f-a793-bcc553c4af22", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "b60afa71-8cb7-425c-ae76-9161721947b0", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "b6da357795b15d2d10fdb55dc638a99c199ad4460c88e6f404769fb4f786ff20"}, "3": {"node_id": "8a4f6b3e-41c1-4fdd-b4cc-0bf150fcc055", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "eaba56552df71e71596e3c95b7540e1b6b45a24d89383df6289f2ada4e619c45"}}, "hash": "90898ef788879c398e9e99770a8f5cfe71b88b5093ec5bde641a710c77818bc6", "text": "number of time periods to look backwards, based on the specified mode.\n\nTo accurately determine the start of the calculated time period when using offset, use the time value of the response. Likewise, to calculate the end of the time period, add the seconds value to the time value.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.usage.get\",\n  \"mode\": \"1day\",\n  \"offset\": 5\n}\nResponse Members\nseconds\n\ninteger\n\nNumber of seconds in the analyzed period.\n\ntime\n\nUNIX Epoch time\n\nStart time of the analyzed period or, if mode=\"total\", the time of activation.\n\nbytes_sent\n\ninteger\n\nNumber of bytes sent by the Notecard to Notehub.\n\nbytes_received\n\ninteger\n\nNumber of bytes received by the Notecard from Notehub.\n\nnotes_sent\n\ninteger\n\nApproximate number of notes sent by the Notecard to Notehub.\n\nnotes_received\n\ninteger\n\nApproximate number of notes received by the Notecard from Notehub.\n\nsessions_standard\n\ninteger\n\nNumber of standard Notehub sessions.\n\nsessions_secure\n\ninteger\n\nNumber of secure Notehub sessions.\n\nExample Response\nCOPY\n{\n  \"seconds\": 1291377,\n  \"time\": 1598479763,\n  \"bytes_sent\": 163577,\n  \"bytes_received\": 454565,\n  \"notes_sent\": 114,\n  \"notes_received\": 26,\n  \"sessions_standard\": 143,\n  \"sessions_secure\": 31\n}\nMore information:\nMeasuring Data Usage\ncard.usage.test \nArguments\ndays\n\ninteger (optional)\n\nNumber of days to use for the test.\n\nhours\n\ninteger (optional)\n\nIf you want to analyze a period shorter than one day, the number of hours to use for the test.\n\nmegabytes\n\ninteger (Default:", "start_char_idx": 36032, "end_char_idx": 37546, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "8a4f6b3e-41c1-4fdd-b4cc-0bf150fcc055": {"__data__": {"id_": "8a4f6b3e-41c1-4fdd-b4cc-0bf150fcc055", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "a8e55667-059b-467f-a793-bcc553c4af22", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "90898ef788879c398e9e99770a8f5cfe71b88b5093ec5bde641a710c77818bc6"}, "3": {"node_id": "fe90ae5c-8cfd-46ac-8005-f6e1686a0602", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "30418dce925c7631a2ac4557d6598f931a85544681f269155232e8f8dc64fb87"}}, "hash": "eaba56552df71e71596e3c95b7540e1b6b45a24d89383df6289f2ada4e619c45", "text": "the number of hours to use for the test.\n\nmegabytes\n\ninteger (Default: 1024)\n\nThe Notecard lifetime data quota (in megabytes) to use for the test.\n\nExample\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.usage.test\",\n  \"days\": 7,\n  \"megabytes\": 500\n}\nResponse Members\nmax\n\ninteger\n\nThe days of projected data available based on test.\n\ndays\n\ninteger\n\nThe number of days used for the test.\n\nbytes_per_day\n\ninteger\n\nAverage bytes per day used during the test period.\n\nseconds\n\ninteger\n\nNumber of seconds in the analyzed period.\n\ntime\n\nUNIX Epoch time\n\nTime of device activation.\n\nbytes_sent\n\ninteger\n\nNumber of bytes sent by the Notecard to Notehub.\n\nbytes_received\n\ninteger\n\nNumber of bytes received by the Notecard from Notehub.\n\nnotes_sent\n\ninteger\n\nNumber of notes sent by the Notecard to Notehub.\n\nnotes_received\n\ninteger\n\nNumber of notes received by the Notecard from Notehub.\n\nsessions_standard\n\ninteger\n\nNumber of standard Notehub sessions.\n\nsessions_secure\n\ninteger\n\nNumber of secure Notehub sessions.\n\nExample Response\nCOPY\n{\n  \"max\": 12730,\n  \"days\": 7,\n  \"bytes_per_day\": 41136,\n  \"seconds\": 1291377,\n  \"time\": 1598479763,\n  \"bytes_sent\": 163577,\n  \"bytes_received\": 454565,\n  \"notes_sent\": 114,\n  \"notes_received\": 26,\n  \"sessions_standard\": 143,\n  \"sessions_secure\": 31\n}\nMore information:\nProjecting the Lifetime of Available Data\ncard.version \n\nReturns firmware version information for the Notecard.\n\nArguments\napi (Added in", "start_char_idx": 37549, "end_char_idx": 38978, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "fe90ae5c-8cfd-46ac-8005-f6e1686a0602": {"__data__": {"id_": "fe90ae5c-8cfd-46ac-8005-f6e1686a0602", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "8a4f6b3e-41c1-4fdd-b4cc-0bf150fcc055", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "eaba56552df71e71596e3c95b7540e1b6b45a24d89383df6289f2ada4e619c45"}, "3": {"node_id": "0e1e2a7b-59f1-4077-865a-37643f4ada69", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "ef759f9934c0a92f423f177ecd5c4c3d4c2be80224c1a7ee89aeeed71bc33f23"}}, "hash": "30418dce925c7631a2ac4557d6598f931a85544681f269155232e8f8dc64fb87", "text": "firmware version information for the Notecard.\n\nArguments\napi (Added in v1.5.5)\n\ninteger (Optional)\n\nSpecify a major version of the Notecard firmware that a host expects to use.\n\nGet Notecard Version\nSet API Version\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.version\"\n}\nResponse Members\nbody\n\nJSON object\n\nAn object containing Notecard firmware details for programmatic access.\n\nversion\n\nstring\n\nThe full version number of the Notecard firmware.\n\ndevice\n\nstring\n\nThe DeviceUID of the Notecard.\n\nname\n\nstring\n\nThe official name of the device.\n\nboard\n\ninteger\n\nThe Notecard board version number.\n\nsku\n\nstring\n\nThe Notecard SKU.\n\napi\n\ninteger\n\nThe current Notecard API major version in use.\n\nExample Response\nCOPY\n{\n  \"version\": \"notecard-5.1.1.16026\",\n  \"device\": \"dev:000000000000000\",\n  \"name\": \"Blues Wireless Notecard\",\n  \"sku\": \"NOTE-WBNA-500\",\n  \"board\": \"1.11\",\n  \"api\": 5,\n  \"body\": {\n    \"org\": \"Blues Wireless\",\n    \"product\": \"Notecard\",\n    \"target\": \"r5\",\n    \"version\": \"notecard-5.1.1\",\n    \"ver_major\": 5,\n    \"ver_minor\": 1,\n    \"ver_patch\": 1,\n    \"ver_build\": 16026,\n    \"built\": \"Jan 27 2023 15:58:47\"\n  }\n}\ncard.voltage \n\nProvides the current V+ voltage level on the Notecard, and provides information about historical voltage trends. When", "start_char_idx": 38976, "end_char_idx": 40231, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "0e1e2a7b-59f1-4077-865a-37643f4ada69": {"__data__": {"id_": "0e1e2a7b-59f1-4077-865a-37643f4ada69", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "fe90ae5c-8cfd-46ac-8005-f6e1686a0602", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "30418dce925c7631a2ac4557d6598f931a85544681f269155232e8f8dc64fb87"}, "3": {"node_id": "69a35753-eee6-4b2a-8f1e-4c95f7b21507", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "44500e87507788c6606b0c3531ecf4dc001ee863bf0b29fcf1c35353a6f51a20"}}, "hash": "ef759f9934c0a92f423f177ecd5c4c3d4c2be80224c1a7ee89aeeed71bc33f23", "text": "on the Notecard, and provides information about historical voltage trends. When used with the mode argument, configures voltage thresholds based on how the device is powered.\n\nArguments\nhours\n\ninteger (Default: all available data)\n\nThe number of hours to analyze, up to 720 (30 days).\n\nmode\n\nstring (Default: default)\n\nUsed to set voltage thresholds based on how the Notecard will be powered, and which can be used to configure voltage-variable Notecard behavior. Each value is shorthand that assigns a battery voltage reading to a given device state like high, normal, low, and dead. One of:\n\n\"lipo\" for LiPo batteries. Equivalent to \"usb:4.6;high:4.0;normal:3.5;low:3.2;dead:0\".\n\n\"l91\" for L91 batteries. Equivalent to \"high:5.0;normal:4.5;low:0\".\n\n\"alkaline\" for Alkaline batteries. Equivalent to \"usb:4.6;high:4.2;normal:3.6;low:0\".\n\n\"tad\" for Tadiran HLC batteries. Equivalent to \"usb:4.6;normal:3.2;low:0\".\n\n\"lic\" for Lithium-ion capacitors. Equivalent to \"usb:4.6;high:3.8;normal:3.1;low:0\".\n\n\"default\" for the default behavior. Equivalent to \"normal:2.5;dead:0\".\n\n\"?\" to query the Notecard for its currently-set thresholds.\n\noffset\n\ninteger (Default: 0)\n\nNumber of hours to move into the past before starting analysis.\n\nvmax\n\ninteger (Default: 4.5)\n\nIgnore voltage readings above this level when performing calculations.\n\nvmin\n\ninteger (Default: 2.5)\n\nIgnore voltage readings", "start_char_idx": 40227, "end_char_idx": 41610, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "69a35753-eee6-4b2a-8f1e-4c95f7b21507": {"__data__": {"id_": "69a35753-eee6-4b2a-8f1e-4c95f7b21507", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "0e1e2a7b-59f1-4077-865a-37643f4ada69", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "ef759f9934c0a92f423f177ecd5c4c3d4c2be80224c1a7ee89aeeed71bc33f23"}, "3": {"node_id": "6222f1bd-1920-4276-9d06-c0dcf525898d", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "162413bd7df14c495f488ce4fcbcf3e23661da023079629f267f21bcf5ef3cd6"}}, "hash": "44500e87507788c6606b0c3531ecf4dc001ee863bf0b29fcf1c35353a6f51a20", "text": "(Default: 2.5)\n\nIgnore voltage readings below this level when performing calculations.\n\nname\n\nstring\n\nSpecifies an environment variable to override application default timing values.\n\nusb (Added in v3.5.1)\n\nboolean (Default: false)\n\nWhen enabled, the Notecard will monitor for changes to USB power state, which you can act upon with alert and sync arguments.\n\nalert (Added in v3.5.1)\n\nboolean (Default: false)\n\nWhen enabled and the usb argument is set to true, the Notecard will add an entry to the health.qo Notefile when USB power is connected or disconnected.\n\nsync (Added in v3.5.1)\n\nboolean (Default: false)\n\nWhen enabled and the usb argument is set to true, the Notecard will perform a sync when USB power is connected or disconnected.\n\nVoltage Trends\nSet Voltage Thresholds\nQuery Voltage Thresholds\nEnable USB Power Alerting\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.voltage\",\n  \"hours\": 300,\n  \"vmax\": 4,\n  \"vmin\": 2.2\n}\nResponse Members\nmode\n\nstring\n\nCurrent power mode, or usb if the Notecard is connected to USB power.\n\nusb\n\nboolean\n\ntrue if the Notecard is connected to USB power.\n\nvalue\n\ndecimal\n\nThe current voltage.\n\nhours\n\ninteger\n\nThe number of hours used for trend analysis.\n\nvmin\n\ndecimal\n\nThe lowest voltage value captured during the measurement period.\n\nvmax\n\ndecimal\n\nThe highest voltage value captured during the measurement period.\n\nvavg\n\ndecimal\n\nThe average voltage value during the measured period.\n\ndaily\n\ndecimal\n\nChange of moving average in the last 24 hours, if relevant to the time period", "start_char_idx": 41644, "end_char_idx": 43162, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6222f1bd-1920-4276-9d06-c0dcf525898d": {"__data__": {"id_": "6222f1bd-1920-4276-9d06-c0dcf525898d", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "69a35753-eee6-4b2a-8f1e-4c95f7b21507", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "44500e87507788c6606b0c3531ecf4dc001ee863bf0b29fcf1c35353a6f51a20"}, "3": {"node_id": "d5972845-7755-4b78-94ab-6bc675a7b012", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "a5f2aff1ca0b65e5646b92e58746e3bf0a3c7c0fa77b4e8526634f16a9c79119"}}, "hash": "162413bd7df14c495f488ce4fcbcf3e23661da023079629f267f21bcf5ef3cd6", "text": "of moving average in the last 24 hours, if relevant to the time period analyzed.\n\nweekly\n\ndecimal\n\nChange of moving average in the last 7 days, if relevant to the time period analyzed.\n\nmonthly\n\ndecimal\n\nChange of moving average in the last 30 days, if relevant to the time period analyzed.\n\nExample Response\nCOPY\n{\n  \"usb\": true,\n  \"hours\": 120,\n  \"mode\": \"usb\",\n  \"value\": 5.112190219747135,\n  \"vmin\": 4,\n  \"vmax\": 4,\n  \"vavg\": 4\n}\nMore information:\nVoltage Monitoring\ncard.wifi \n\nSets up a Wi-Fi Notecard to connect to a Wi-Fi access point. This request is not available for Cellular Notecards.\n\nNote\n\nWi-Fi updates cannot occur if you have changed a Wi-Fi Notecard's connection mode from periodic to continuous. If you have a Wi-Fi Notecard in continuous mode, you must change it using a hub.set request before using card.wifi.\n\nArguments\nssid\n\nstring (optional)\n\nThe SSID of the Wi-Fi access point. Alternatively, use - to clear an already set SSID.\n\npassword\n\nstring (optional)\n\nThe network password of the Wi-Fi access point. Alternatively, use - to clear an already set password.\n\nname\n\nstring (optional)\n\nBy default, the Notecard creates a SoftAP (software enabled access point) under the name \"Notecard\". You can use the name argument to change the name of the SoftAP to a custom name.\n\nIf you include a - at the end of the name (for example \"name\": \"acme-\"), the Notecard will append the last four digits of the network's MAC address (for example acme\u2014025c). This allows you to distinguish between multiple Notecards in SoftAP mode.\n\norg\n\nstring (optional)\n\nIf specified,", "start_char_idx": 43142, "end_char_idx": 44724, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "d5972845-7755-4b78-94ab-6bc675a7b012": {"__data__": {"id_": "d5972845-7755-4b78-94ab-6bc675a7b012", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "6222f1bd-1920-4276-9d06-c0dcf525898d", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "162413bd7df14c495f488ce4fcbcf3e23661da023079629f267f21bcf5ef3cd6"}, "3": {"node_id": "ced2a95d-fed6-4f3d-9a75-8b658058c55d", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "39d708eef19573c780fd94c896bf191dc54f6e9f95457aee54f3385a1c582c96"}}, "hash": "a5f2aff1ca0b65e5646b92e58746e3bf0a3c7c0fa77b4e8526634f16a9c79119", "text": "in SoftAP mode.\n\norg\n\nstring (optional)\n\nIf specified, replaces the Blues logo on the SoftAP page with the provided name.\n\nstart\n\nboolean (optional)\n\nSpecify true to activate SoftAP mode on the Notecard programatically.\n\nCreate a Connection\nClear a Connection\nCustomize the SoftAP\nCustomize the SoftAP w/MAC Address\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.wifi\",\n  \"ssid\": \"<ssid name>\",\n  \"password\": \"<password>\"\n}\nResponse Members\nsecure\n\nboolean\n\ntrue means that the Wi-Fi access point is using Management Frame Protection.\n\nversion\n\nstring\n\nThe Silicon Labs WF200 Wi-Fi Transceiver binary version.\n\nssid\n\nstring\n\nThe SSID of the Wi-Fi access point.\n\nsecurity\n\nstring\n\nThe security protocol the Wi-Fi access point uses.\n\nExample Response\nCOPY\n{\n  \"secure\": true,\n  \"version\": \"3.12.3\",\n  \"ssid\": \"<ssid name>\",\n  \"security\": \"wpa2-psk\"\n}\nMore information:\nConnecting to a Wi-Fi Access Point\ncard.wireless \n\nView the last known network state, or customize the behavior of the modem. Note: Be careful when using this mode with hardware not on hand as a mistake may cause loss of network and Notehub access.\n\nArguments\nmode\n\nstring\n\nNetwork scan mode. Must be one of:\n\n\"-\" to reset to the default mode.\n\n\"auto\" to perform automatic band scan mode (this is the default mode).\n\n\"m\" to restrict the modem to Cat-M1.\n\n\"nb\" to restrict the modem to Cat-NB1.\n\n\"gprs\" to restrict the modem to EGPRS.\n\napn\n\nstring\n\nAccess Point Name (APN) when using", "start_char_idx": 44732, "end_char_idx": 46174, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "ced2a95d-fed6-4f3d-9a75-8b658058c55d": {"__data__": {"id_": "ced2a95d-fed6-4f3d-9a75-8b658058c55d", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "d5972845-7755-4b78-94ab-6bc675a7b012", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "a5f2aff1ca0b65e5646b92e58746e3bf0a3c7c0fa77b4e8526634f16a9c79119"}, "3": {"node_id": "6ad81a2d-696e-418d-9f5d-cebab3b70a0a", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "07761e7f5f8542c687e2fc875071a71fd217f5cc286e53d506efaa89840b8804"}}, "hash": "39d708eef19573c780fd94c896bf191dc54f6e9f95457aee54f3385a1c582c96", "text": "Point Name (APN) when using an external SIM. Use \"-\" to reset to the Notecard default APN.\n\nmethod (Added in LTS v4.1.1)\n\nUsed when configuring a Notecard to failover to a different SIM.\n\n\"-\" resets the Notecard to the default method.\n\n\"dual-primary-secondary\" will attempt to register with the internal SIM first, then failover to the external SIM.\n\n\"dual-secondary-primary\" will attempt to register with the external SIM first, then failover to the internal SIM.\n\n\"primary\" will exclusively use the internal SIM.\n\n\"secondary\" will exclusively use the external SIM.\n\nCurrent Network State\nChange Scan Mode\nReset Scan Mode\nSet External SIM APN\nFailover to External SIM\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.wireless\"\n}\nResponse Members\nstatus\n\nstring\n\nThe current status of the wireless connection and modem.\n\ncount\n\ninteger\n\nNumber of bars of signal quality.\n\nnet\n\nJSON object\n\nAn object with detailed modem, radio access technology, and signal information (details will differ depending on whether it's a Cellular or Wi-Fi Notecard).\n\nExample Response\nCOPY\n{\n  \"status\": \"{modem-off}\",\n  \"count\": 1,\n  \"net\": {\n    \"iccid\": \"00000000000000000000\",\n    \"imsi\": \"000000000000000\",\n    \"imei\": \"000000000000000\",\n    \"modem\": \"EG91NAXGAR07A03M1G_BETA0415_01.001.01.001\",\n    \"band\": \"LTE BAND 2\",\n    \"rat\": \"lte\",\n    \"rssir\": -69,\n    \"rssi\": -70,\n    \"rsrp\": -105,\n    \"sinr\": 86,\n  ", "start_char_idx": 46202, "end_char_idx": 47589, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6ad81a2d-696e-418d-9f5d-cebab3b70a0a": {"__data__": {"id_": "6ad81a2d-696e-418d-9f5d-cebab3b70a0a", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "ced2a95d-fed6-4f3d-9a75-8b658058c55d", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "39d708eef19573c780fd94c896bf191dc54f6e9f95457aee54f3385a1c582c96"}, "3": {"node_id": "d0b9097b-dc99-4782-83a5-907be692a611", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "7e8fee4fafa0dfd402629434fe6de4ef4ca7dbf2ef805e617a105811feaf8bd0"}}, "hash": "07761e7f5f8542c687e2fc875071a71fd217f5cc286e53d506efaa89840b8804", "text": "-105,\n    \"sinr\": 86,\n    \"rsrq\": -17,\n    \"bars\": 1,\n    \"mcc\": 310,\n    \"mnc\": 410,\n    \"lac\": 28681,\n    \"cid\": 211150856,\n    \"updated\": 1599225076\n  }\n}\nMore information:\nViewing and Customizing Modem Behavior\nUsing External SIM Cards\ncard.wireless.penalty \n\nAdded in v1.5.6\n\nView the current state of a Notecard Penalty Box, manually remove the Notecard from a penalty box, or override penalty box defaults.\n\nWarning\n\nThe misuse of this feature may result in the cellular carrier preventing the Notecard from future connections because it's effectively \"spamming\" the network. The cellular carrier may blacklist devices that it thinks are attempting to connect too frequently.\n\nArguments\nstop\n\nboolean\n\nSet to true to remove the Notecard from certain types of penalty boxes.\n\nset\n\nboolean\n\nSet to true to override the default settings of the Network Registration Failure Penalty Box.\n\nrate\n\nfloat (Default 1.25)\n\nThe rate at which the penalty box time multiplier is increased over successive retries. Used with the set argument to override the Network Registration Failure Penalty Box defaults.\n\nadd\n\ninteger (Default 15)\n\nThe number of minutes to add to successive retries. Used with the set argument to override the Network Registration Failure Penalty Box defaults.\n\nmax\n\ninteger (Default 4320)\n\nThe maximum number of minutes that a device can be in a Network Registration Failure Penalty Box. Used with the set argument to override the Network Registration Failure Penalty Box defaults.\n\nmin\n\ninteger (Default 15)\n\nThe number of minutes of the first retry interval of a Network Registration Failure Penalty Box. Used with the", "start_char_idx": 47596, "end_char_idx": 49231, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "d0b9097b-dc99-4782-83a5-907be692a611": {"__data__": {"id_": "d0b9097b-dc99-4782-83a5-907be692a611", "embedding": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "682a027f-b28d-4dba-9731-f7a04c77a099", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "40ada259f5beadcc3fcd23b27497f5f942386cfdcf0bf147335a64ea8e8df25c"}, "2": {"node_id": "6ad81a2d-696e-418d-9f5d-cebab3b70a0a", "node_type": null, "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}, "hash": "07761e7f5f8542c687e2fc875071a71fd217f5cc286e53d506efaa89840b8804"}}, "hash": "7e8fee4fafa0dfd402629434fe6de4ef4ca7dbf2ef805e617a105811feaf8bd0", "text": "of the first retry interval of a Network Registration Failure Penalty Box. Used with the set argument to override the Network Registration Failure Penalty Box defaults.\n\nCheck Penalty Box State\nRemove from Penalty Box\nOverride Default Penalty Box Settings\nJSON\nC/C++\nPython\nCOPY\n{\n  \"req\": \"card.wireless.penalty\"\n}\nResponse Members\nminutes\n\ninteger\n\nThe time since the first network registration failure.\n\ncount\n\ninteger\n\nThe number of consecutive network registration failures.\n\nseconds (Added in LTS v4.1.1)\n\ninteger\n\nIf the Notecard is in a Penalty Box, the number of seconds until the penalty condition ends.\n\nExample Response\nCOPY\n{\n    \"minutes\": 36,\n    \"count\": 2\n}\nMore information:\nUnderstanding Notecard Penalty Boxes\nIntroduction\ndfu Requests\nCan we improve this page? Send us feedback", "start_char_idx": 49160, "end_char_idx": 49958, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"682a027f-b28d-4dba-9731-f7a04c77a099": {"node_ids": ["720aa8d7-f2b0-46f5-b281-f25abdff48f6", "39813d25-b4ec-4195-b2d0-01635048b7c4", "a8a52566-cefa-40da-a7f0-43f93dabc4f4", "4085a739-3353-41f9-beea-bdc3145237a4", "71a6e04b-b4de-44c3-a71c-97d6b48f0fc0", "ec6e04e4-5341-4277-a7ab-43d97741d77b", "ada6c377-8b8d-45b9-9ef5-f428d5c1c9fc", "7589cc44-2718-40f3-9d71-e52997d07194", "d6818117-e500-46c7-b123-f9234319528b", "38fa8423-1d58-4b1f-95d7-d38bfc1315f4", "9cda6db2-ca18-466e-b1d5-895240cd5dac", "5f908d5f-aefa-4f55-962b-fa72585c3360", "842e55aa-e4a0-4980-8485-b17e724cdcac", "3dcfab35-4098-484c-a95d-ef955dbfceb9", "5f119488-4243-43e6-9b10-8ed9ff2c4d80", "c3ebc534-5208-4db7-bf13-805d756db279", "6ee5838b-401f-4c4c-99ba-8fb69d88e0eb", "a40ef254-9a54-4376-b54f-f9c93036abdb", "3f0c67d8-9897-4e3d-aa9a-5d444ae6f878", "66d302dc-3e41-462a-b957-ca7719b2fcad", "2de4e138-ac9b-4525-86ec-941b95f2e4be", "c930430e-a0ac-4ff1-b9c5-e0127bf61c92", "7c011eb6-ff5f-4b47-befb-a583bcea240b", "b60afa71-8cb7-425c-ae76-9161721947b0", "a8e55667-059b-467f-a793-bcc553c4af22", "8a4f6b3e-41c1-4fdd-b4cc-0bf150fcc055", "fe90ae5c-8cfd-46ac-8005-f6e1686a0602", "0e1e2a7b-59f1-4077-865a-37643f4ada69", "69a35753-eee6-4b2a-8f1e-4c95f7b21507", "6222f1bd-1920-4276-9d06-c0dcf525898d", "d5972845-7755-4b78-94ab-6bc675a7b012", "ced2a95d-fed6-4f3d-9a75-8b658058c55d", "6ad81a2d-696e-418d-9f5d-cebab3b70a0a", "d0b9097b-dc99-4782-83a5-907be692a611"], "metadata": {"title": "", "category": "Card Requests", "url": "https://dev.blues.io/api-reference/notecard-api/card-requests/"}}}}