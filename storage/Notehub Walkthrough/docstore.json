{"docstore/metadata": {"fad9b7ca-3753-40be-9d48-a1c257a322ed": {"doc_hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "ffc406a9-769b-4bb2-a18c-eb87332d0c5a": {"doc_hash": "77fd5057454c13d13ad2b443c36b6181140ac650614b3aaabd9a2f5515644cdd", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "f08519b9-404c-4cfd-b7e9-97a200d8e0ef": {"doc_hash": "26da85ea7bf1e5a33632eb2d6ebb9311c0cf041d58207b256290229c0d2f3272", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "55c3700b-5f69-4588-848c-a403588c7b48": {"doc_hash": "1169eb5e399ce9f516bee2d133d9e5b0db1f73f4d5576c2466e9cd739bac2217", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "f8bef8b0-e70a-4ec7-bcfd-11fb4f18c42e": {"doc_hash": "3f29ab421d60becdc8ba5801847a3af3061c1f499c06d06d2b2dfe03d497536e", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "a47d19b6-c47b-4ae7-aaef-748197fcf64a": {"doc_hash": "a00477f50166976986d3b0f7229de2001aacd402c1930e7db673ff8ae9f9d055", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "54ae54ce-8227-448b-b730-6f9496fc7633": {"doc_hash": "31c849de69f53662c141e283e8b8c0e02dd7d455c8261a7c145555cd61ec2470", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "d9295c08-903f-4f90-8f7a-365f784f0ee6": {"doc_hash": "671ce915a4530b77e8ddbfe1de0ae07cb455edb0da08c5efc20f55a436a51759", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "adfb199c-894d-402b-8df7-db5ddadc424c": {"doc_hash": "dd8ddd8da42ccc98191348b002fea2f585d73197617d6565c36e44655e4c4699", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "490f99f7-fa5b-4555-890a-5bba2df2cbcd": {"doc_hash": "78b4bfaed08212b12f64eac4e1043d1d4ec1a652a5e639be5f4c05854189507e", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "cd1d5af9-9654-4dd4-af5d-ac4d4c84ed4c": {"doc_hash": "9250285aac10cb4fb9b9554e5ef6afe6eafb80a2261ff5b4fed753f95d0192ef", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "a1a5facb-35fe-4d75-97d8-43007b726d3d": {"doc_hash": "54578b041086ff7a270f7708f2df338ecbf4b5f388af8be79afed1b8f78a6004", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "de6d8d76-c2a0-4f6c-b6b1-fca6d2ae5cbc": {"doc_hash": "e3a9559e49414b57b6925360c0d002eeaafad1bdfe3e446fe5bd41ebd10b3f63", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "8afd22b8-cdc3-4acb-9491-865ca299bce7": {"doc_hash": "02b4f95b4e1a7174e8157958ee14d0a735b96c3563f2a09b9ec563e28ca1e68b", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "2ed724e3-ae2d-4f10-949a-a74563b0e411": {"doc_hash": "2de471e96fcaf5f4ffbc5fb6a4dd61ca9fb46d819b10758b74abe8aade34457b", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "4e5fd9a6-e90a-4d8e-be1a-3aebea8879f6": {"doc_hash": "827116e996fe8a81c653299bc85da621a7b6340586f4a340803c2e9060bbfba6", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "e4ecd49d-c65e-4b35-afdc-6be3362e5563": {"doc_hash": "a523db777c5e9f33fd72e590c64de0fb22469b386f9ff2aa7da2f95cfe9b4485", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "aee414cb-206f-4f80-b3b8-8258192c1771": {"doc_hash": "357985a497025071a77fba1ed23a8151805f0c5e41dedd60227fac52ff669738", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "8daf60a0-badc-4e38-8175-8ce277b121ca": {"doc_hash": "4c096dac5fe88bb7e72a76d505f6219a2dd068d8da47d5b7fd10aca6d6d3f245", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "67200c2b-3616-4558-af2d-0e69a7766d5a": {"doc_hash": "0c908caab55bc02ec62c85e0d6a5fd8b70842005c6cb2a4e3e2d90a710dab79b", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "6b797559-d64a-4612-8a31-fca028a35925": {"doc_hash": "9339a9d209eedb79c76cf9aac7852552f597db5e97e644414e7380e001da982e", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "1bccd335-440d-4bd4-97ff-becdb21071b2": {"doc_hash": "fc3e58dd0a02ee67ed5e682ca5fe504f1fad730b1ba51e5dff01391ba56defe7", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "370035b2-1558-453a-b9b2-22578333e2a1": {"doc_hash": "18c2ae871dc6658032a4d42dae714d20cac84c92cd28817c242a3b0696d23681", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "3dd1f002-6c8a-4f9b-98c3-9596086d1245": {"doc_hash": "9559e36bcc52396c298a3ce0e2bde924afe7112d9ecdd2e63f45c5633043acc0", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "2f996799-e9c2-491e-8a24-c135a8a9ba16": {"doc_hash": "63c92db88a6aa4c44bbba7c44567e393dd5c0c79d8a57f1c2cd722bfa4486912", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}, "ddf0ce10-0729-47e3-b3a5-d88676ea7222": {"doc_hash": "d9675d0e015814f5baeebeb98c43e6ff0fa46fab334430e08bdc0042aafed0c1", "ref_doc_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed"}}, "docstore/data": {"ffc406a9-769b-4bb2-a18c-eb87332d0c5a": {"__data__": {"id_": "ffc406a9-769b-4bb2-a18c-eb87332d0c5a", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "3": {"node_id": "f08519b9-404c-4cfd-b7e9-97a200d8e0ef", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "26da85ea7bf1e5a33632eb2d6ebb9311c0cf041d58207b256290229c0d2f3272"}}, "hash": "77fd5057454c13d13ad2b443c36b6181140ac650614b3aaabd9a2f5515644cdd", "text": "Notehub\n\nNotehub is a cloud-based service designed to connect to Notecard devices and synchronize Notefiles.\n\nThis walkthrough covers what Notehub is, how to get started, and how to utilize Notehub's rich feature set to accomplish your application's IoT objectives.\n\nWhat is Notehub?\n\nNotehub is available as a feature rich software as a service (SaaS) platform, implemented as Notehub.io. Notehub is also made available as open-source software (OSS), allowing you to implement your own UI and features tailored to your specific business needs.\n\nNotehub.io provides a UI and a RESTful API which allow you to explore the vast collection of data and metadata created by the Notecard/Notehub infrastructure. Notehub also provides functionality for interacting with Notecards, securely routing data, managing Notecard and host firmware, as well as managing projects, fleets, and teams.\n\nThe remainder of this document details and describes the features and functionality of the Blues SaaS product, Notehub.io.\n\nFeatures\nDetailed information about Notecard Devices, Events, and Sessions.\nEvent routing to external services (such as AWS, Azure, MQTT servers, as well as most HTTPS endpoints).\nOver-the-Air (OTA) Notecard firmware and host firmware updates.\nAbility to view and modify Team, Project, Fleet, and Product settings.\nQuick and easy filtering of information by device, session, or event details.\nAbility to set cascading environment variables to enable scalable state updates to projects, fleets, and devices.\nDownloadable device information in JSON format.\nCreate a Notehub Account\n\nNavigate your browser to Notehub.io, and you will be greeted with the sign-in screen.\n\nClick the Sign up button at the bottom of the display. Alternatively, if you already have a GitHub account and you would prefer to sign up using GitHub, you may click the Sign in", "start_char_idx": 0, "end_char_idx": 1853, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f08519b9-404c-4cfd-b7e9-97a200d8e0ef": {"__data__": {"id_": "f08519b9-404c-4cfd-b7e9-97a200d8e0ef", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "ffc406a9-769b-4bb2-a18c-eb87332d0c5a", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "77fd5057454c13d13ad2b443c36b6181140ac650614b3aaabd9a2f5515644cdd"}, "3": {"node_id": "55c3700b-5f69-4588-848c-a403588c7b48", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "1169eb5e399ce9f516bee2d133d9e5b0db1f73f4d5576c2466e9cd739bac2217"}}, "hash": "26da85ea7bf1e5a33632eb2d6ebb9311c0cf041d58207b256290229c0d2f3272", "text": "account and you would prefer to sign up using GitHub, you may click the Sign in with GitHub button.\n\nIf you chose to create an account using email, enter your name, email address, and create a password. Then click Sign up.\n\nOtherwise, if you chose to create an account using GitHub, then follow the prompts to authorize Notehub.\n\nVerify your email address by clicking on the link in the email you receive from support@blues.io. The link will return you to Notehub.io and you will be ready to create your first project.\n\nCreate a New Project\n\nProjects are core to the functionality of Notehub. They provide a way to organize fleets of devices, distribute firmware, organize teams, and provide team access controls.\n\nA Project is composed of one or more identifiers called ProductUIDs. Each Project is created with an initial ProductUID, enabling you to associate your Notecard(s) to your Project as soon as it is created.\n\nNote\n\nProjects may also be managed via the Notehub API.\n\nNavigate to Notehub.io, and click on the Create Project button in the upper right corner.\n\nThe Create Project dialog will open.\n\nProvide a name for the project in the Project Name input box.\n\nProvide a unique identifier for the default ProductUID. In order to help ensure your ProductUID is unique, every ProductUID is prepended with the reverse domain name notation of your account email.\n\nFor example, if you signed up with winston.smith@oceania.com, then your product would take the form of com.oceania.winston.smith:your_product_uid.\n\nBy default, projects will be associated with the Billing Account tied to your Notehub account. If you wish to associate the project with a billing account other than your main account - for instance a company account - you can select it in the Billing Account dropdown.\n\nClick the Create Project button.\n\nSending Data to Notehub from Notecard\n\nData is sent to", "start_char_idx": 1790, "end_char_idx": 3667, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "55c3700b-5f69-4588-848c-a403588c7b48": {"__data__": {"id_": "55c3700b-5f69-4588-848c-a403588c7b48", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "f08519b9-404c-4cfd-b7e9-97a200d8e0ef", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "26da85ea7bf1e5a33632eb2d6ebb9311c0cf041d58207b256290229c0d2f3272"}, "3": {"node_id": "f8bef8b0-e70a-4ec7-bcfd-11fb4f18c42e", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "3f29ab421d60becdc8ba5801847a3af3061c1f499c06d06d2b2dfe03d497536e"}}, "hash": "1169eb5e399ce9f516bee2d133d9e5b0db1f73f4d5576c2466e9cd739bac2217", "text": "button.\n\nSending Data to Notehub from Notecard\n\nData is sent to Notehub (from Notecard devices or via the Notehub API) in the form of JSON objects called Notes.\n\nThis is an example of a Note containing arbitrary temperature and humidity data in the body of the Note, along with metadata about the Note and the device's location:\n\nCOPY\n{\n  \"event\": \"df9f5e04-7aa4-44d1-bd7f-068b6b576ffc\",\n  \"session\": \"6facb2b9-b4af-4790-bc70-a8c3b566c1f3\",\n  \"best_id\": \"dev:868050040247343\",\n  \"device\": \"dev:868050040247343\",\n  \"product\": \"product:com.blues.name:project\",\n  \"app\": \"app:911ee04e-cd6d-469a-8379-de05062aa5r3\",\n  \"received\": 1670791362.736713,\n  \"req\": \"note.add\",\n  \"when\": 1670790603,\n  \"file\": \"data.qo\",\n  \"body\": {\n    \"temperature\": 24.56,\n    \"humidity\": 68.22\n  },\n  \"best_location_type\": \"tower\",\n  \"best_location_when\": 1670791362,\n  \"best_lat\": 41.83748,\n  \"best_lon\": -89.183298,\n  \"best_location\": \"Shorewood Hills WI\",\n  \"best_country\": \"US\",\n  \"best_timezone\": \"America/Chicago\",\n  \"tower_when\": 1670791362,\n  \"tower_lat\": 41.83748,\n  \"tower_lon\": -89.183298,\n  \"tower_country\": \"US\",\n  \"tower_location\": \"Shorewood Hills WI\",\n  \"tower_timezone\":", "start_char_idx": 3677, "end_char_idx": 4839, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f8bef8b0-e70a-4ec7-bcfd-11fb4f18c42e": {"__data__": {"id_": "f8bef8b0-e70a-4ec7-bcfd-11fb4f18c42e", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "55c3700b-5f69-4588-848c-a403588c7b48", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "1169eb5e399ce9f516bee2d133d9e5b0db1f73f4d5576c2466e9cd739bac2217"}, "3": {"node_id": "a47d19b6-c47b-4ae7-aaef-748197fcf64a", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "a00477f50166976986d3b0f7229de2001aacd402c1930e7db673ff8ae9f9d055"}}, "hash": "3f29ab421d60becdc8ba5801847a3af3061c1f499c06d06d2b2dfe03d497536e", "text": "\"Shorewood Hills WI\",\n  \"tower_timezone\": \"America/Chicago\",\n  \"tower_id\": \"310,410,17169,77315594\",\n  \"status\": \"success\"\n}\n\nNotes are stored in Notefiles, which are also named JSON files. Notefiles are automatically created when a Note is first added, are persisted to Notecard flash, and are managed by the Notecard's synchronization policies with Notehub.\n\nNotecard and Notehub work together to provide bidirectional wireless communication capabilities. In this diagram, Notes are sent from a host microcontroller (or single-board computer) to an arbitrary cloud endpoint.\n\nThe Notehub UI displays a list of Events that contains Notes, along with other session and environment-specific events sent automatically by the Notecard.\n\nA hands-on example of the outbound data flow from Notecard to Notehub is available as part of the Notecard quickstart experience.\n\nNote\n\nNotehub retains event data for 7 days after it is created.\n\nRouting Data with Notehub\n\nOne powerful feature of Notehub is routes, which allow you to forward your data from Notehub to a public cloud like AWS, Azure, or Google Cloud, a messaging platform like MQTT, or a custom HTTP/HTTPS endpoint. Routes are defined in a Notehub for a single project, and can target any fleet(s) and/or device(s). A Notehub project can have multiple routes defined and active at any one time.\n\nAvailable Route Types\nAvailable Route Tutorials\nManually Routing Events\nBulk Event Retries\nAutomatic Retry of Failed Route\nUsing Placeholder Variable Substitution/Interpolation\nAvailable Route Types\n\nThere are a variety of different route types available in Notehub, exposing different configuration options depending on the service and protocol.\n\nGeneral HTTP/HTTPS Request/Response\n\nAllows you to send Notecard events to external HTTP/HTTPS endpoints, including webhooks.\n\nView the General", "start_char_idx": 4858, "end_char_idx": 6697, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "a47d19b6-c47b-4ae7-aaef-748197fcf64a": {"__data__": {"id_": "a47d19b6-c47b-4ae7-aaef-748197fcf64a", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "f8bef8b0-e70a-4ec7-bcfd-11fb4f18c42e", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "3f29ab421d60becdc8ba5801847a3af3061c1f499c06d06d2b2dfe03d497536e"}, "3": {"node_id": "54ae54ce-8227-448b-b730-6f9496fc7633", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "31c849de69f53662c141e283e8b8c0e02dd7d455c8261a7c145555cd61ec2470"}}, "hash": "a00477f50166976986d3b0f7229de2001aacd402c1930e7db673ff8ae9f9d055", "text": "events to external HTTP/HTTPS endpoints, including webhooks.\n\nView the General HTTP/HTTPS Route Tutorial\n\nAWS\n\nAmazon Web Services (AWS) is the world's most comprehensive and broadly adopted cloud platform, offering over 200 fully featured services from data centers globally. Millions of customers\u2014including the fastest-growing startups, largest enterprises, and leading government agencies are using AWS to lower costs, become more agile, and innovate faster.\n\nView the AWS IoT Analytics Route Tutorial\n\nAzure\n\nThe Azure cloud platform is more than 200 products and cloud services designed to help you bring new solutions to life to solve today's challenges and create the future. Build, run, and manage applications across multiple clouds, on-premises, and at the edge, with the tools and frameworks of your choice.\n\nView the Azure IoT Central Route Tutorial\n\nGoogle Cloud Function\n\nGoogle Cloud Functions is a serverless execution environment for building and connecting cloud services. With Cloud Functions you write simple, single-purpose functions that are attached to events emitted from your cloud infrastructure and services. Your function is triggered when an event being watched is fired.\n\nView the Google Cloud Platform Route Tutorial\n\nMQTT\n\nMQTT is an OASIS standard messaging protocol for the Internet of Things (IoT). It is designed as an extremely lightweight publish/subscribe messaging transport that is ideal for connecting remote devices with a small code footprint and minimal network bandwidth.\n\nView the MQTT Route Tutorial\n\nProxy for Device Web Requests\n\nAllows you to send Notecard web requests to external HTTP/HTTPS endpoints, using the Notehub as a proxy.\n\nThingWorx API\n\nThingWorx is an ultra-versatile IoT software platform used for enterprise applications in all varieties of industries. Think of ThingWorx as the foundation on which to build a powerful tool that's perfectly", "start_char_idx": 6665, "end_char_idx": 8572, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "54ae54ce-8227-448b-b730-6f9496fc7633": {"__data__": {"id_": "54ae54ce-8227-448b-b730-6f9496fc7633", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "a47d19b6-c47b-4ae7-aaef-748197fcf64a", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "a00477f50166976986d3b0f7229de2001aacd402c1930e7db673ff8ae9f9d055"}, "3": {"node_id": "d9295c08-903f-4f90-8f7a-365f784f0ee6", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "671ce915a4530b77e8ddbfe1de0ae07cb455edb0da08c5efc20f55a436a51759"}}, "hash": "31c849de69f53662c141e283e8b8c0e02dd7d455c8261a7c145555cd61ec2470", "text": "of ThingWorx as the foundation on which to build a powerful tool that's perfectly matched to meet your business' needs.\n\nView the ThingWorx Route Tutorial\n\nRadNote RadResponder\n\nRadResponder is a free radiological data management and sharing tool provided by FEMA in partnership with EPA and DOE. It allows you to manage your own events and exercises, upload data, perform basic assessment, and securely share data with regional partners and federal assets.\n\nSnowflake\n\nSnowflake enables data storage, processing, and analytic solutions that are faster, easier to use, and far more flexible than traditional offerings.\n\nTwilio\n\nTwilio allows developers to send text messages, and perform other communication functions using its web service APIs.\n\nView the Twilio SMS Guide\n\nEdge Impulse\n\nEdge Impulse is the leading development platform for machine learning on edge devices, free for developers and trusted by enterprises.\n\nView the Edge Impulse Guide\n\nSlack\n\nSlack is a cloud-based set of team collaboration tools and services.\n\nView the Slack Guide\n\nAvailable Route Tutorials\n\nThe provided Routing Data to Cloud tutorials walk you through routing Notecard data to a variety of big clouds and IoT platforms (including those listed above, and others):\n\nAWS IoT Analytics\nAzure IoT Central\nDatacake\nGeneral HTTP/HTTPS\nGoogle Cloud Platform\nInitial State\nMQTT\nThingSpeak\nThingWorx\nUbidots\n\nThere is also a Twilio-specific guide that demonstrates the ability to send SMS messages with the Twilio API and an Edge Impulse guide that lets you route data to the Edge Impulse Ingestion API to build and refine ML models.\n\nManually Routing Events\n\nAfter a Notehub route is created, all future events that match the route parameters will be routed. However, you may wish to manually route an event to test a route, or to", "start_char_idx": 8575, "end_char_idx": 10385, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "d9295c08-903f-4f90-8f7a-365f784f0ee6": {"__data__": {"id_": "d9295c08-903f-4f90-8f7a-365f784f0ee6", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "54ae54ce-8227-448b-b730-6f9496fc7633", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "31c849de69f53662c141e283e8b8c0e02dd7d455c8261a7c145555cd61ec2470"}, "3": {"node_id": "adfb199c-894d-402b-8df7-db5ddadc424c", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "dd8ddd8da42ccc98191348b002fea2f585d73197617d6565c36e44655e4c4699"}}, "hash": "671ce915a4530b77e8ddbfe1de0ae07cb455edb0da08c5efc20f55a436a51759", "text": "However, you may wish to manually route an event to test a route, or to route an existing event after the Notehub route was created.\n\nTo manually route a single event, navigate to the event detail screen and click on the \"Route event\" button. You will be presented with a modal dialog of routes to use. All routing attempts will be captured in event's route log with a date/time stamp.\n\nBulk Event Retries\n\nFrom the Events screen, you may choose one or more events and manually route them to one or more routes. Any events can be selected, regardless of whether or not they were previously routed successfully.\n\nTo route multiple events, navigate to the Events screen and select the event(s) you wish to route. In the modal dialog provided, specify whether you only want to retry routing events that previously failed or all selected events.\n\nNote\n\nEach attempt at routing an event consumes one consumption credit, regardless of whether it's the first attempt or a retry.\n\nAutomatic Retry of Failed Route\n\nIf the routing of an event fails for any reason, you may wish to have Notehub automatically retry the route. To enable this feature, simply check the \"automatic reroute on failure\" box when creating or editing a Notehub route.\n\nIf enabled, Notehub will attempt to retry routing the event up to three times: at 5 seconds, 1 minute, and 5 minute intervals. All retry attempts will be captured in the route log with a date/time stamp.\n\nEvent routing is considered a \"failure\" if one of the following occurs:\n\nNotehub is unable to connect to the remote endpoint after 30 seconds.\nAfter connecting to the endpoint, Notehub does not receive a response after 30 seconds.\nNotehub receives an invalid HTTP response from the endpoint.\nA 5XX-level HTTP status code is returned from the endpoint.\nNote\n\nEach attempt at routing an event consumes", "start_char_idx": 10397, "end_char_idx": 12235, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "adfb199c-894d-402b-8df7-db5ddadc424c": {"__data__": {"id_": "adfb199c-894d-402b-8df7-db5ddadc424c", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "d9295c08-903f-4f90-8f7a-365f784f0ee6", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "671ce915a4530b77e8ddbfe1de0ae07cb455edb0da08c5efc20f55a436a51759"}, "3": {"node_id": "490f99f7-fa5b-4555-890a-5bba2df2cbcd", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "78b4bfaed08212b12f64eac4e1043d1d4ec1a652a5e639be5f4c05854189507e"}}, "hash": "dd8ddd8da42ccc98191348b002fea2f585d73197617d6565c36e44655e4c4699", "text": "from the endpoint.\nNote\n\nEach attempt at routing an event consumes one consumption credit, regardless of whether it's the first attempt or a retry.\n\nUsing Placeholder Variable Substitution/Interpolation\n\nIf a Route setting (e.g. endpoint URL, MQTT topic, etc) needs to include data from a device, event, or environment variable, you can use string-based substitution placeholders when defining the Route.\n\nPlaceholder variables are denoted using a string inside of square brackets: [string]. A placeholder string either begins with a period . (for event attributes), a $ (for environment variables), or from a list of reserved strings. Multiple placeholder strings may be used in a single Route field.\n\nVariable substitution occurs after events have already been transformed by JSONata expressions. See Examples of Using Placeholder Variable Substitution for an example of using placeholder variables with JSONata transforms.\n\nWarning\n\nPlaceholder substitutions will fail if the string being replaced contains square brackets ([ or ]). This applies to string data in Notes and environment variable names.\n\nWhere to Use Placeholder Variable Substitution\n\nMany of the open text fields in the Route creation process are supported. These include:\n\nURL\nHTTP Headers\nMQTT Broker, Port, Username, Password, Topic, and Client ID\nTwilio Routes: From Number, To Number, and Message\nAWS Routes: SQS FIFO and IoT Analytics Channel\nEvent Attribute Placeholders\n\nEvent attribute placeholders are identified by a . immediately after the first square bracket. Event attribute placeholders can substitute data from an event visible in Notehub. Inner fields and array elements can be referenced using standard JSON syntax.\n\nFor example, given the following (simplified) event in Notehub:\n\nCOPY\n{\n    \"best_id\": \"My Test Device\",\n    \"device\": \"dev:123456789\",\n    \"body\": {\n     ", "start_char_idx": 12235, "end_char_idx": 14096, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "490f99f7-fa5b-4555-890a-5bba2df2cbcd": {"__data__": {"id_": "490f99f7-fa5b-4555-890a-5bba2df2cbcd", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "adfb199c-894d-402b-8df7-db5ddadc424c", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "dd8ddd8da42ccc98191348b002fea2f585d73197617d6565c36e44655e4c4699"}, "3": {"node_id": "cd1d5af9-9654-4dd4-af5d-ac4d4c84ed4c", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "9250285aac10cb4fb9b9554e5ef6afe6eafb80a2261ff5b4fed753f95d0192ef"}}, "hash": "78b4bfaed08212b12f64eac4e1043d1d4ec1a652a5e639be5f4c05854189507e", "text": "   \"body\": {\n        \"temp\": 24.5\n    }\n}\n\nThe following event attribute placeholders could be used when defining the Route:\n\nCOPY\n[.best_id]\n// \"My Test Device\"\n\n[.device]\n// \"123456789\"\n\n[.body.temp]\n// 24.5\nEnvironment Variable Placeholders\n\nEnvironment variable placeholders are identified by a $ immediately after the first square bracket. For example, [$phone_number] or [$_contact_name].\n\nReserved Placeholder Strings\n\nCertain reserved placeholder variables allow you to substitute in Notecard- or event-specific data:\n\n[device] - Replace this portion of the string with the Notecard's DeviceUID.\n[device_no_prefix] - Same as above, but strips the dev: prefix from the DeviceUID.\n[product] - Replace this portion of the string with the ProductUID to which the Notecard is associated.\n[product_no_prefix] - Same as above, but strips the product: prefix from the ProductUID.\n[sn] - Replace this portion of the string with the Device Serial Number.\n[file] Replace this portion of the string with the full Notefile name (e.g. data.qo).\n[filebase] Replace this portion of the string with the name of the Notefile to the left of the first non-alphanumeric (and non-underscore) character. In the case of Sparrow, this will be the sensor node id.\n\nFor example, an event from a DeviceUID of \"dev:1234\" using this endpoint URL:\n\nCOPY\nhttps://webhook.site/89bd3bc4-f8bb-4f7d-b888-3683af6da958/[device]\n\n...will resolve to the following URL when", "start_char_idx": 14146, "end_char_idx": 15586, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "cd1d5af9-9654-4dd4-af5d-ac4d4c84ed4c": {"__data__": {"id_": "cd1d5af9-9654-4dd4-af5d-ac4d4c84ed4c", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "490f99f7-fa5b-4555-890a-5bba2df2cbcd", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "78b4bfaed08212b12f64eac4e1043d1d4ec1a652a5e639be5f4c05854189507e"}, "3": {"node_id": "a1a5facb-35fe-4d75-97d8-43007b726d3d", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "54578b041086ff7a270f7708f2df338ecbf4b5f388af8be79afed1b8f78a6004"}}, "hash": "9250285aac10cb4fb9b9554e5ef6afe6eafb80a2261ff5b4fed753f95d0192ef", "text": "resolve to the following URL when routed:\n\nCOPY\nhttps://webhook.site/89bd3bc4-f8bb-4f7d-b888-3683af6da958/dev:1234\nUnrecognized Placeholder Strings\n\nAny string inside square brackets that isn't syntactically valid won't be replaced. For example, [This text in brackets] would be left as-is. However, if a referenced field is valid, but not available for substitution (i.e. the field is missing from the event) the placeholder string would be replaced by an empty string.\n\nFor example, given the example event above and the following endpoint URL:\n\nCOPY\nhttps://webhook.site/123456/[tower_location]\n\n...will replace [tower_location] with an empty string. This is because tower_location is a syntactically valid variable, but is absent from the provided event:\n\nCOPY\nhttps://webhook.site/123456/\nExamples of Using Placeholder Variable Substitution\n\nReplace a portion of an endpoint URL with the DeviceUID:\n\nCOPY\nhttps://test.com/[.device]/\n\n// resolves to:\n\nhttps://test.com/dev:1b7c56aa-1301-4142-accc-a69e1b077146/\n\nReplacing a portion of a Twilio API endpoint with the Twilio Account SID, set in an environment variable:\n\nCOPY\nhttps://api.twilio.com/2010-04-01/Accounts/[$TWILIO_ACCOUNT_SID]/Messages.json\n\n// resolves to:\n\nhttps://api.twilio.com/2010-04-01/Accounts/1234567890/Messages.json\n\nSubstituting the To, From, and Body SMS variables in a Twilio route with variables from the body of an", "start_char_idx": 15568, "end_char_idx": 16964, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "a1a5facb-35fe-4d75-97d8-43007b726d3d": {"__data__": {"id_": "a1a5facb-35fe-4d75-97d8-43007b726d3d", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "cd1d5af9-9654-4dd4-af5d-ac4d4c84ed4c", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "9250285aac10cb4fb9b9554e5ef6afe6eafb80a2261ff5b4fed753f95d0192ef"}, "3": {"node_id": "de6d8d76-c2a0-4f6c-b6b1-fca6d2ae5cbc", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "e3a9559e49414b57b6925360c0d002eeaafad1bdfe3e446fe5bd41ebd10b3f63"}}, "hash": "54578b041086ff7a270f7708f2df338ecbf4b5f388af8be79afed1b8f78a6004", "text": "and Body SMS variables in a Twilio route with variables from the body of an event:\n\nCOPY\nhttps://api.twilio.com/2010-04-01/Accounts/1234567890/Messages.json?To=[.body.phoneTo]&From=[.body.phoneFrom]&Body=[.body.message]\n\n// resolves to:\n\nhttps://api.twilio.com/2010-04-01/Accounts/1234567890/Messages.json?To=%2B11234567890&From=%2B10987654321&Body=Hello%20World%21\n\nUsing a JSONata expression to conditionally transform the body of a Twilio SMS. In this scenario, the Message field of the Twilio route would be set to [.body.twilioMessage] (where twilioMessage is an arbitrary variable that is not present in the body of the event prior to the transform):\n\nCOPY\n// JSONata expression\n{\n   \"body\":{\n     \"twilioMessage\": $contains(body.text, \"USB\" )? \"USB string found\" : \"USB string not found\"\n   }\n}\n\nReplacing authentication header values in HTTP Header fields:\n\nCOPY\nAuthorization: Basic [$TWILIO_BASIC_AUTH_HEADER]\n\n// resolves to:\n\nAuthorization: Basic am9obkBleGFtcGxlLmNvbTphYmqyusa=\nSending Data from Notehub to Notecard\n\nNot only does Notehub receive communications from the Notecard, but it is also capable of sending communications back down to the Notecard. This takes two forms:\n\nInbound Notes\nEnvironment Variables\nQueue Inbound Notes\n\nInbound Notes are Notes that start from a cloud app or external service and propagate down to the Notecard.\n\nThis data is called \"inbound\" because it originates somewhere else and is synchronized to the", "start_char_idx": 16932, "end_char_idx": 18385, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "de6d8d76-c2a0-4f6c-b6b1-fca6d2ae5cbc": {"__data__": {"id_": "de6d8d76-c2a0-4f6c-b6b1-fca6d2ae5cbc", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "a1a5facb-35fe-4d75-97d8-43007b726d3d", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "54578b041086ff7a270f7708f2df338ecbf4b5f388af8be79afed1b8f78a6004"}, "3": {"node_id": "8afd22b8-cdc3-4acb-9491-865ca299bce7", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "02b4f95b4e1a7174e8157958ee14d0a735b96c3563f2a09b9ec563e28ca1e68b"}}, "hash": "e3a9559e49414b57b6925360c0d002eeaafad1bdfe3e446fe5bd41ebd10b3f63", "text": "called \"inbound\" because it originates somewhere else and is synchronized to the Notecard. In other words, it is \"inbound\" from the perspective of the Notecard. Once synchronized, a host can retrieve this data from the Notecard and respond accordingly.\n\nNote\n\nA typical use case of inbound Notes is to remotely communicate with (and/or control) a device. See our Remote Command and Control guide for more information.\n\nAgain, Notecard and Notehub work together to provide bidirectional wireless communication capabilities, both outbound (as documented above) and inbound (from the cloud to your microcontroller or single-board computer):\n\nInbound Notes in Action\n\nYou can use either the Notehub UI or Notehub API to send Notes to your Notecard. Once you've added a Note to Notehub, you'll learn how to retrieve Notes with simple JSON requests.\n\nNotehub UI\nNotehub API\nCompose via the Notehub UI\n\nNavigate to Notehub.io, and select your project to see the Device list.\n\nClick on the check mark next to your Device, and then click on the Note button.\n\nYou will see a window for adding a Note meant for the selected Device. Select data.qi from the Select Notefile drop-down menu.\n\nNotehub will place Notes you create in a Notefile called data.qi. The .qi extension means that the file is an \"inbound queue,\" or a queue that originates in Notehub and is synchronized with the Notecard.\n\nCopy and paste the following object into the Note JSON section:\n\nCOPY\n{\"key1\":\"val1\"}\n\nNow, click the Add Note button, and Notehub will queue the Note to be sent to your Notecard during the next sync operation.\n\nTo confirm your note was successfully enqueued by Notehub, click on Events in the sidebar and you should see your Note at the top of the table.\n\nSync your Note to the Notecard\n\nOnce you've queued a Note on Notehub, the Notecard", "start_char_idx": 18378, "end_char_idx": 20200, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "8afd22b8-cdc3-4acb-9491-865ca299bce7": {"__data__": {"id_": "8afd22b8-cdc3-4acb-9491-865ca299bce7", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "de6d8d76-c2a0-4f6c-b6b1-fca6d2ae5cbc", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "e3a9559e49414b57b6925360c0d002eeaafad1bdfe3e446fe5bd41ebd10b3f63"}, "3": {"node_id": "2ed724e3-ae2d-4f10-949a-a74563b0e411", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "2de471e96fcaf5f4ffbc5fb6a4dd61ca9fb46d819b10758b74abe8aade34457b"}}, "hash": "02b4f95b4e1a7174e8157958ee14d0a735b96c3563f2a09b9ec563e28ca1e68b", "text": "Notecard\n\nOnce you've queued a Note on Notehub, the Notecard will need to sync again with the service in order to obtain the Note and place it in internal storage.\n\nCopy and paste the following request into the in-browser terminal to sync the data from Notehub onto the Notecard.\n\nCOPY\n> {\"req\":\"hub.sync\"}\n{}\n\nOnce hub.sync.status reports a completed time, the sync is complete.\n\nCOPY\n> {\"req\":\"hub.sync.status\"}\n{\n \"time\": 1615585299,\n \"completed\": 4\n}\nRead your Note from the Notecard\n\nYour Note should now be on your Notecard! To confirm, copy the following request into your in-browser terminal. The request looks at the Notefile in \"files\", and determines whether there are changes.\n\nCOPY\n> {\"req\":\"file.changes\",\"files\":[\"data.qi\"]}\n{\n \"info\": {\n  \"data.qi\": {\n   \"total\": 1\n  }\n },\n \"total\": 1\n}\n\nRead the Note out of the Notefile by sending the following request to the Notecard:\n\nCOPY\n> {\"req\":\"note.get\", \"file\":\"data.qi\"}\n{\n \"body\": {\n  \"key1\": \"val1\"\n },\n \"time\": 1589309597\n}\n\nYou should see the Note you sent from Notehub as the response to your request.\n\nNotes synced from Notehub to the Notecard are held in storage until explicitly deleted. This extra step ensures Notes queued on the Notecard are not accidentally deleted just because they were read out.\n\nIn software engineering terms, note.get performs a peek of the queue by default, but will perform a pop if you specify \"delete\":true.\n\nCOPY\n> {\"req\":\"note.get\", \"file\":\"data.qi\",\"delete\":true}\n{\n \"body\": {\n  \"key1\":", "start_char_idx": 20218, "end_char_idx": 21708, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "2ed724e3-ae2d-4f10-949a-a74563b0e411": {"__data__": {"id_": "2ed724e3-ae2d-4f10-949a-a74563b0e411", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "8afd22b8-cdc3-4acb-9491-865ca299bce7", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "02b4f95b4e1a7174e8157958ee14d0a735b96c3563f2a09b9ec563e28ca1e68b"}, "3": {"node_id": "4e5fd9a6-e90a-4d8e-be1a-3aebea8879f6", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "827116e996fe8a81c653299bc85da621a7b6340586f4a340803c2e9060bbfba6"}}, "hash": "2de471e96fcaf5f4ffbc5fb6a4dd61ca9fb46d819b10758b74abe8aade34457b", "text": "\"body\": {\n  \"key1\": \"val1\"\n },\n \"time\": 1589309597\n}\n\nSending the file.changes request at this point should tell you that there are no more pending notes inside of data.qi.\n\nCOPY\n> {\"req\":\"file.changes\",\"files\":[\"data.qi\"]}\n{\n \"info\": {\n  \"data.qi\": {}\n }\n}\nUpdate Environment Variables\n\nIn IoT applications, products often require configuration variables or settings that can be used on an end device, but then be managed and updated once the product is deployed. In addition, these products often need the ability to manage these values at multiple levels, from the device to a fleet or even an entire product and all of its deployed devices.\n\nEnvironment variables are a Notecard and Notehub feature that enables settings synchronization that \"just work,\" with no special setup or configuration needed. These variables are key-value pairs, can be set in Notehub and propagate to devices in a project or fleet, or set on the Notecard directly using the same synchronization mechanism used for Notes and Notefiles.\n\nThe Hierarchy of Environment Variables\n\nEnvironment variables can be defined in a number of locations, from the Notecard, to Notehub device settings, the device's Fleet, and the Notehub project. Variables set at different levels of this hierarchy can override one another. When obtaining an environment variable, the Notecard uses the following priority order, where the first matched result is returned:\n\nThe value set on that Notecard with the env.set request.\nThe value set in Notehub directly on Notehub's record for the Device.\nThe value set in Notehub on a Fleet to which the Device belongs.\nThe value set in Notehub on the Project to which the Device belongs.\nThe value set on that Notecard with the env.default request.\nProject-Level Environment Variables\n\nSelect Settings > Environment from the left navigation bar.\n\nAdd a Key and Value to establish", "start_char_idx": 21745, "end_char_idx": 23620, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "4e5fd9a6-e90a-4d8e-be1a-3aebea8879f6": {"__data__": {"id_": "4e5fd9a6-e90a-4d8e-be1a-3aebea8879f6", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "2ed724e3-ae2d-4f10-949a-a74563b0e411", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "2de471e96fcaf5f4ffbc5fb6a4dd61ca9fb46d819b10758b74abe8aade34457b"}, "3": {"node_id": "e4ecd49d-c65e-4b35-afdc-6be3362e5563", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "a523db777c5e9f33fd72e590c64de0fb22469b386f9ff2aa7da2f95cfe9b4485"}}, "hash": "827116e996fe8a81c653299bc85da621a7b6340586f4a340803c2e9060bbfba6", "text": "Settings > Environment from the left navigation bar.\n\nAdd a Key and Value to establish a new environment variable, or to override the default value of an environment variable.\n\nClick the Save button.\n\nFleet-Level Environment Variables\n\nSelect the fleet you wish to update from the list provided.\n\nSelect the Settings option.\n\nOn the Environment tab, add a Key and Value to establish a new environment variable, or to override the default value or project value of an environment variable.\n\nClick the Save button.\n\nDevice-Level Environment Variables\n\nSelect Devices from the left navigation bar and select a device from the list provided.\n\nSelect View from the available options.\n\nSelect the Environment tab.\n\nAdd a Key and Value to establish a new environment variable, or to override the default value, project value, or fleet value of an environment variable.\n\nClick the Save button.\n\nAdd Collaborators to a Project\n\nIf you wish to delegate administration of your Project, share your Project with other developers, or provide read-only access, you can do so by adding team members. Members are easy to add and can be granted varying levels of access explained below.\n\nTo add new members to your Notehub project:\n\nSelect Settings > Members from the left navigation bar.\n\nClick the Invite members button.\n\nEnter the email address(es) of the new members and choose the appropriate role from the dropdown provided.\n\nCollaborator Roles\n\nTeam members can take the role of Owner, Developer, or Viewer. The permissions granted to each role are defined as", "start_char_idx": 23564, "end_char_idx": 25112, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "e4ecd49d-c65e-4b35-afdc-6be3362e5563": {"__data__": {"id_": "e4ecd49d-c65e-4b35-afdc-6be3362e5563", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "4e5fd9a6-e90a-4d8e-be1a-3aebea8879f6", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "827116e996fe8a81c653299bc85da621a7b6340586f4a340803c2e9060bbfba6"}, "3": {"node_id": "aee414cb-206f-4f80-b3b8-8258192c1771", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "357985a497025071a77fba1ed23a8151805f0c5e41dedd60227fac52ff669738"}}, "hash": "a523db777c5e9f33fd72e590c64de0fb22469b386f9ff2aa7da2f95cfe9b4485", "text": "of Owner, Developer, or Viewer. The permissions granted to each role are defined as follows:\n\n\t\t\t\nProductUIDs\t\t\t\nCreate\t\u2705\t\u2705\t\u274c\nRead\t\u2705\t\u2705\t\u2705\nUpdate\t\u2705\t\u2705\t\u274c\nDelete\t\u2705\t\u2705\t\u274c\nDevices\t\t\t\nCreate\t\u2705\t\u2705\t\u274c\nRead\t\u2705\t\u2705\t\u2705\nUpdate\t\u2705\t\u2705\t\u274c\nDelete\t\u2705\t\u2705\t\u274c\nFleets\t\t\t\nCreate\t\u2705\t\u2705\t\u274c\nRead\t\u2705\t\u2705\t\u2705\nUpdate\t\u2705\t\u2705\t\u274c\nDelete\t\u2705\t\u2705\t\u274c\nEvents\t\t\t\nRead\t\u2705\t\u2705\t\u2705\nUpdate\t\u2705\t\u2705\t\u274c\nDelete\t\u2705\t\u2705\t\u274c\nNotes\t\t\t\nCreate\t\u2705\t\u2705\t\u274c\nRead\t\u2705\t\u2705\t\u2705\nUpdate\t\u2705\t\u2705\t\u274c\nDelete\t\u2705\t\u2705\t\u274c\nNotefiles\t\t\t\nCreate\t\u2705\t\u2705\t\u274c\nRead\t\u2705\t\u2705\t\u2705\nUpdate\t\u2705\t\u2705\t\u274c\nDelete\t\u2705\t\u2705\t\u274c\nRoutes\t\t\t\nCreate\t\u2705\t\u2705\t\u274c\nRead\t\u2705\t\u2705\t\u2705\nUpdate\t\u2705\t\u2705\t\u274c\nDelete\t\u2705\t\u2705\t\u274c\nRoute", "start_char_idx": 25116, "end_char_idx": 25634, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "aee414cb-206f-4f80-b3b8-8258192c1771": {"__data__": {"id_": "aee414cb-206f-4f80-b3b8-8258192c1771", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "e4ecd49d-c65e-4b35-afdc-6be3362e5563", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "a523db777c5e9f33fd72e590c64de0fb22469b386f9ff2aa7da2f95cfe9b4485"}, "3": {"node_id": "8daf60a0-badc-4e38-8175-8ce277b121ca", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "4c096dac5fe88bb7e72a76d505f6219a2dd068d8da47d5b7fd10aca6d6d3f245"}}, "hash": "357985a497025071a77fba1ed23a8151805f0c5e41dedd60227fac52ff669738", "text": "Details\t\t\t\nCreate\t\u2705\t\u2705\t\u274c\nRead\t\u2705\t\u2705\t\u274c\nUpdate\t\u2705\t\u2705\t\u274c\nDelete\t\u2705\t\u2705\t\u274c\nFavorites\t\t\t\nCreate\t\u2705\t\u2705\t\u274c\nRead\t\u2705\t\u2705\t\u2705\nUpdate\t\u2705\t\u2705\t\u274c\nDelete\t\u2705\t\u2705\t\u274c\nSettings\t\t\t\nCreate\t\u2705\t\u2705\t\u274c\nRead\t\u2705\t\u2705\t\u2705\nUpdate\t\u2705\t\u2705\t\u274c\nDelete\t\u2705\t\u2705\t\u274c\nMembers\t\t\t\nCreate\t\u2705\t\u274c\t\u274c\nRead\t\u2705\t\u2705\t\u2705\nUpdate\t\u2705\t\u274c\t\u274c\nDelete\t\u2705\t\u274c\t\u274c\nEnvironment Variables\t\t\t\nCreate\t\u2705\t\u2705\t\u274c\nRead\t\u2705\t\u2705\t\u2705\nUpdate\t\u2705\t\u2705\t\u274c\nDelete\t\u2705\t\u2705\t\u274c\nFirmware\t\t\t\nNotecard\t\t\t\n\u00a0\u00a0\u00a0\u00a0Read\t\u2705\t\u2705\t\u274c\n\u00a0\u00a0\u00a0\u00a0Deploy\t\u2705\t\u2705\t\u274c\nHost MCU\t\t\t\n\u00a0\u00a0\u00a0\u00a0Create\t\u2705\t\u2705\t\u274c\n\u00a0\u00a0\u00a0\u00a0Read\t\u2705\t\u2705\t\u274c\n\u00a0\u00a0\u00a0\u00a0Update\t\u2705\t\u2705\t\u274c\n\u00a0\u00a0\u00a0\u00a0Delete\t\u2705\t\u2705\t\u274c\n\u00a0\u00a0\u00a0\u00a0Deploy\t\u2705\t\u2705\t\u274c\nCreate a New Fleet\n\nFleets are a useful tool for grouping and managing devices in a Project. In their simplest form, fleets provide a filtering mechanism for a set of devices. Perhaps more importantly, fleets provide an intermediate level for the creation and application of environment variables.\n\nNote\n\nFleets may also be managed via the Notehub API.\n\nSelect Fleets from the left navigation bar.\n\nClick the Add fleet option, in the upper right corner.\n\nGive", "start_char_idx": 25705, "end_char_idx": 26637, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "8daf60a0-badc-4e38-8175-8ce277b121ca": {"__data__": {"id_": "8daf60a0-badc-4e38-8175-8ce277b121ca", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "aee414cb-206f-4f80-b3b8-8258192c1771", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "357985a497025071a77fba1ed23a8151805f0c5e41dedd60227fac52ff669738"}, "3": {"node_id": "67200c2b-3616-4558-af2d-0e69a7766d5a", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "0c908caab55bc02ec62c85e0d6a5fd8b70842005c6cb2a4e3e2d90a710dab79b"}}, "hash": "4c096dac5fe88bb7e72a76d505f6219a2dd068d8da47d5b7fd10aca6d6d3f245", "text": "bar.\n\nClick the Add fleet option, in the upper right corner.\n\nGive the new fleet a name in the Fleet name field.\n\nClick Add fleet.\n\nAdd a Device to a Fleet\n\nUpon first connection to Notehub.io, a device is associated with the default fleet of the Notehub project.\n\nThe concept of a fleet in Notehub.io is very flexible and can be adapted to meet most use cases. The standard fleet scheme is to consider the default fleet, My fleet, a temporary holding place. Then, once a new device appears in the default fleet, it can be triaged and properly associated with a production fleet or whatever nomenclature you choose to use.\n\nNote\n\nDevices may also be added to fleets via the Notehub API.\n\nSelect Devices from the left navigation bar, and then select a single device from the list provided.\n\nSelect View from the available options.\n\nUnder the Summary tab, choose a new fleet from the dropdown list provided.\n\nManage Notecard Firmware\n\nNotehub has the ability to manage the firmware running on your Notecards as well as your host MCU. You can easily choose between the available firmware and deploy to one or more devices.\n\nWarning\n\nMake sure you read and understand the Blues Firmware Release Policies and Procedures before updating Notecard firmware.\n\nDeploy Firmware\n\nSelect Devices from the left navigation bar and select a device from the list of devices in the Notecard Firmware tab.\n\nSelect Update from the available options.\n\nConfirm you wish to update the Notecard firmware.\n\nSelect the firmware you wish to apply from the list of available firmware, and click Apply.\n\nNow that you have selected your firmware, you will see it in the Requested Version field.\n\nThe next time the Notecard syncs with Notehub, it will begin the download and installation process. No further action is needed on your part as the Notecard will update itself after", "start_char_idx": 26581, "end_char_idx": 28428, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "67200c2b-3616-4558-af2d-0e69a7766d5a": {"__data__": {"id_": "67200c2b-3616-4558-af2d-0e69a7766d5a", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "8daf60a0-badc-4e38-8175-8ce277b121ca", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "4c096dac5fe88bb7e72a76d505f6219a2dd068d8da47d5b7fd10aca6d6d3f245"}, "3": {"node_id": "6b797559-d64a-4612-8a31-fca028a35925", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "9339a9d209eedb79c76cf9aac7852552f597db5e97e644414e7380e001da982e"}}, "hash": "0c908caab55bc02ec62c85e0d6a5fd8b70842005c6cb2a4e3e2d90a710dab79b", "text": "No further action is needed on your part as the Notecard will update itself after it downloads the binary. You can view the current status of the update any time in the DFU Status field.\n\nManage Host Firmware\n\nNotehub has the ability to manage host firmware for whole projects or individual devices. You can use Notehub to upload and deploy the custom firmware for your host MCU.\n\nNotehub supports two methods of updating host firmware:\n\nNotecard Outboard Firmware Update (supported by most modern STM32- and ESP32-based microcontrollers)\nIAP Firmware Update\nNotecard Outboard Firmware Update\nIAP Firmware Update\n\nNotecard Outboard Firmware Update allows the Notecard to utilize new capabilities of modern MCUs to perform firmware updates \"from the outside\", and not involve the firmware running on the MCU. It can update firmware regardless of RTOS or language, and can be used to switch between them, even modifying flash memory layout and partitioning any time after-the-fact, at the developer's discretion.\n\nMore information on enabling this feature can be found in this guide on using Notecard Outboard Firmware Update.\n\nUpload Host MCU Firmware\n\nSelect Settings > Firmware from the left navigation bar.\n\nSelect Upload firmware from the available options.\n\nUpload firmware via the upload page.\n\nDeploy Firmware\n\nSelect Devices from the left navigation bar and select a device from the list of devices in the Host Firmware tab.\n\nSelect Update from the available options.\n\nConfirm you wish to update the host firmware.\n\nSelect the firmware you wish to apply from the list of available firmware, and click Apply.\n\nConfiguring Your Billing Account\n\nNotehub is free to use, and every Notecard comes with Consumption Credits that you can use while you explore the service. Many applications, however, will require additional Consumption Credits for", "start_char_idx": 28419, "end_char_idx": 30266, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6b797559-d64a-4612-8a31-fca028a35925": {"__data__": {"id_": "6b797559-d64a-4612-8a31-fca028a35925", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "67200c2b-3616-4558-af2d-0e69a7766d5a", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "0c908caab55bc02ec62c85e0d6a5fd8b70842005c6cb2a4e3e2d90a710dab79b"}, "3": {"node_id": "1bccd335-440d-4bd4-97ff-becdb21071b2", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "fc3e58dd0a02ee67ed5e682ca5fe504f1fad730b1ba51e5dff01391ba56defe7"}}, "hash": "9339a9d209eedb79c76cf9aac7852552f597db5e97e644414e7380e001da982e", "text": "the service. Many applications, however, will require additional Consumption Credits for Notehub services, and you can manage these purchases in your billing account.\n\nFrom the account menu at top-right, select Billing to access your billing account.\n\nFrom the billing account section, you can purchase Consumption Credits, view credit usage, purchase history, add members to your account, and add any information needed on your invoices and receipts.\n\nAdding Consumption Credits\n\nTo purchase Consumption Credits, you'll first need to add a payment method to your account. Once you've done so, select the amount of credits you wish to add and click the Purchase Credits button.\n\nNote\n\nFor volume discounts on Credits, consult the volume discount tiers table at the bottom of the credits page.\n\nConfirm the payment method and amount and click Pay now to complete the purchase.\n\nOnce purchased, Consumption Credits are available for immediate use in any project associated with your billing account.\n\nConfiguring Credit Auto-Recharge\n\nTo ensure that your projects always have credits available, you can use the Set up Auto-recharge section to enable or disable auto-recharge, as well as the balance below which to trigger the purchase of additional Credits, as well as the number of Credits to purchase when below the threshold.\n\nAdding Billing Account Members\n\nFrom the Member tab, you can add additional members to your account with permission to create projects in the account, manage, or administer the account on your behalf. Invited members will receive an invitation email and will need to create a Notehub account if they do not already have one.\n\nUnderstanding Consumption Credits\n\nConsumption Credits (CCs) are used to pay for Notehub services such as event routing, Notehub API usage, and web requests. Notehub billing accounts are automatically \"topped-up\" to 5,000 CCs every month, and each Notecard purchased and connected to Notehub includes a one-time 5,000 CC credit. Additional CCs may be", "start_char_idx": 30256, "end_char_idx": 32260, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "1bccd335-440d-4bd4-97ff-becdb21071b2": {"__data__": {"id_": "1bccd335-440d-4bd4-97ff-becdb21071b2", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "6b797559-d64a-4612-8a31-fca028a35925", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "9339a9d209eedb79c76cf9aac7852552f597db5e97e644414e7380e001da982e"}, "3": {"node_id": "370035b2-1558-453a-b9b2-22578333e2a1", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "18c2ae871dc6658032a4d42dae714d20cac84c92cd28817c242a3b0696d23681"}}, "hash": "fc3e58dd0a02ee67ed5e682ca5fe504f1fad730b1ba51e5dff01391ba56defe7", "text": "connected to Notehub includes a one-time 5,000 CC credit. Additional CCs may be purchased through Notehub.\n\nWith the Consumption Credit model, you only pay for what you use:\n\nSending an Event to Notehub: 0 CC (Free)\nRouting an Event from Notehub: 1 CC\nPulling an Event via the Notehub API: 1 CC\nAll other Notehub API requests: 0.001 CC\n\nMore information about Consumption Credits is available on the Blues pricing page.\n\nManaging Connectivity Assurance\n\nWhen a Notecard runs low on data, Connectivity Assurance will automatically add data to the Notecard SIM's data plan.\n\nConnectivity Assurance is enabled by default if the Notehub Billing Account associated with the Notecard has a payment method on file. When a Notecard reaches 100MB of remaining data, Connectivity Assurance will add 500MB of data to the Notecard's data plan. The additional 500MB of data costs $10 for North America Notecards (e.g. NBNA and WBNA) and $15 for international Notecards (e.g. NBGL and WBEX).\n\nWarning\n\nIf the Notecard SIM's data plan runs out of data due to an invalid or missing payment method (or if Connectivity Assurance is disabled) the data flow from the Notecard will be paused.\n\nDisabling Connectivity Assurance\n\nConnectivity Assurance can be disabled at the following levels:\n\nBilling Account\nProject\nDevice\nDisabling Connectivity Assurance at the Billing Account Level\n\nIn Notehub, navigate to the Billing menu, select the Information tab, and uncheck the Connectivity Assurance checkbox.\n\nNote\n\nIf Connectivity Assurance is disabled for the Billing Account, it cannot be overwritten and re-enabled at the Project or Device levels.\n\nDisabling Connectivity Assurance at the Project Level\n\nWithin a Notehub project, navigate to the Settings menu and uncheck the Connectivity Assurance checkbox.\n\nNote\n\nIf Connectivity Assurance is disabled for the Project, it", "start_char_idx": 32272, "end_char_idx": 34125, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "370035b2-1558-453a-b9b2-22578333e2a1": {"__data__": {"id_": "370035b2-1558-453a-b9b2-22578333e2a1", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "1bccd335-440d-4bd4-97ff-becdb21071b2", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "fc3e58dd0a02ee67ed5e682ca5fe504f1fad730b1ba51e5dff01391ba56defe7"}, "3": {"node_id": "3dd1f002-6c8a-4f9b-98c3-9596086d1245", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "9559e36bcc52396c298a3ce0e2bde924afe7112d9ecdd2e63f45c5633043acc0"}}, "hash": "18c2ae871dc6658032a4d42dae714d20cac84c92cd28817c242a3b0696d23681", "text": "checkbox.\n\nNote\n\nIf Connectivity Assurance is disabled for the Project, it cannot be overwritten and re-enabled at the Device level.\n\nDisabling Connectivity Assurance at the Device Level\n\nWithin a Notehub project, navigate to the Devices menu, select a Device to edit, navigate to the Summary tab, and uncheck the Connectivity Assurance checkbox.\n\nAdding Contact Information\n\nContact information for a Notehub project appears in the device JSON and is queryable and updatable using the Notecard API card.contact.\n\nSelect Settings from the left navigation bar and add your contact information in the Contacts form.\n\nAdd a Favorite\n\nFavorites are a way of both saving and organizing query filters you plan on reusing regularly.\n\nBy default, the Devices, Fleets, and Events views provide a list of every device, fleet, or event, respectively. To help refine these lists into useful information, a filter box is provided. These filters can become complex and difficult to enter, and you may find you are constantly creating the same filters as part of your workflow.\n\nTo facilitate a more efficient workflow, there is a Save button located at the bottom right of your filter box.\n\nWhen you click the button, you will be prompted to add a new favorite.\n\nType in the name for your Favorite in the box provided, click Save, and the favorite will appear in your Favorites list.\n\nCreating a Device Dashboard\n\nDeployed IoT devices often provide a QR code that users can scan for device configuration. For example, the Blues Airnote has a printed QR code that users can scan to change an Airnote's settings, and to view a dashboard of device data.\n\nUsing Notehub you can create your own dashboard URLs for printing on devices via QR codes. Let's look at how it works.\n\nHow It Works\n\nNotehub provides a domain, qrgo.org, that redirects requests for qrgo.org/id/[deviceUID] to a dashboard URL that", "start_char_idx": 34127, "end_char_idx": 36011, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "3dd1f002-6c8a-4f9b-98c3-9596086d1245": {"__data__": {"id_": "3dd1f002-6c8a-4f9b-98c3-9596086d1245", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "370035b2-1558-453a-b9b2-22578333e2a1", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "18c2ae871dc6658032a4d42dae714d20cac84c92cd28817c242a3b0696d23681"}, "3": {"node_id": "2f996799-e9c2-491e-8a24-c135a8a9ba16", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "63c92db88a6aa4c44bbba7c44567e393dd5c0c79d8a57f1c2cd722bfa4486912"}}, "hash": "9559e36bcc52396c298a3ce0e2bde924afe7112d9ecdd2e63f45c5633043acc0", "text": "for qrgo.org/id/[deviceUID] to a dashboard URL that you can configure. This workflow allows you to print QR codes that point to qrgo.org/id/[deviceUID] on physical devices, and configure the final resolved URL in Notehub.\n\nThis workflow also gives you the ability to change your dashboard URLs anytime\u2014even after you deploy your devices. Let's look at how to set a dashboard URL for your Notehub project.\n\nHow to Set Up a Device Dashboard\n\nWithin your Notehub project, select Settings from the left navigation bar, and scroll down to the Device Dashboard URL.\n\nEnter a URL in the Edit Device Dashboard URL textbox.\n\nIn the URL you can use [device] as a shorthand for a device's UID, and [product] as a shorthand for a device's product UID. For example, the following is a valid Device Dashboard URL that includes shorthands for device UID and product UID.\n\nhttps://mydomain.test/[device]?product=[product]\n\nGiven a device with a UID of dev:123456, and a product UID of com.blues.hello, a request to https://qrgo.org/id/dev:123456 would resolve to https://mydomain.test/dev:123456?product=com.blues.hello using the Device Dashboard URL above.\n\nOnce you have a Device Dashboard URL configured, you can test it by clicking the Dashboard link while viewing a device in Notehub.\n\nAnd when you're ready to deploy devices, you can print QR codes that point to https://qrgo.org/id/[device] on each device\u2014for example https://qrgo.org/id/dev:123456, https://qrgo.org/id/dev:7890123, etc.\n\nFinding a ProductUID\n\nA ProductUID is an immutable user-generated string generated when you create a new project. After you create a project, you can copy the ProductUID directly from the project tile after logging in to", "start_char_idx": 36033, "end_char_idx": 37733, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "2f996799-e9c2-491e-8a24-c135a8a9ba16": {"__data__": {"id_": "2f996799-e9c2-491e-8a24-c135a8a9ba16", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "3dd1f002-6c8a-4f9b-98c3-9596086d1245", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "9559e36bcc52396c298a3ce0e2bde924afe7112d9ecdd2e63f45c5633043acc0"}, "3": {"node_id": "ddf0ce10-0729-47e3-b3a5-d88676ea7222", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "d9675d0e015814f5baeebeb98c43e6ff0fa46fab334430e08bdc0042aafed0c1"}}, "hash": "63c92db88a6aa4c44bbba7c44567e393dd5c0c79d8a57f1c2cd722bfa4486912", "text": "a project, you can copy the ProductUID directly from the project tile after logging in to Notehub:\n\nThe ProductUID is also available from the project's settings page:\n\nOnce you have your ProductUID, you can assign it to one or many Notecards using the hub.set request.\n\nCOPY\n{\n  \"req\": \"hub.set\",\n  \"product\": \"com.blues.testing:test\"\n}\n\nA ProductUID is also used in many Notecard samples to associate a Notecard with a cloud-based Notehub project. For example, the Notecard's C, C++, and Arduino samples include the following line of code that asks you to provide a PRODUCT_UID.\n\nCOPY\n#define PRODUCT_UID \"\" // \"com.my-company.my-name:my-project\"\n\nOnce you have your ProductUID copied from Notehub, you can paste it into your sample's code.\n\nCOPY\n#define PRODUCT_UID \"com.blues.testing:test\"\nNote\n\nAssigning a ProductUID to a device in host firmware, as many of the Notecard samples do, is a development convenience. For production workflows we recommend loading Notecard configuration through a setup script, and to avoid placing ProductUIDs in source code.\n\nTemporarily Block Device Connections\n\nThe Notehub UI allows you to block individual Notecards from connecting to Notehub. The intended use of this feature is to block connections from misbehaving devices until a root cause can be diagnosed.\n\nUnder the Summary tab of the device details, scroll down to the \"Danger Zone\" section. To temporarily block incoming connections from the selected device, check the appropriate box.\n\nWhen a Notecard is \"blocked\", it will likely continue to periodically re-attempt a connection with Notehub. Until it is \"unblocked\", no data will be received on Notehub. However, each time a Notecard attempts to connect it will use a small amount of its cellular data plan. Since", "start_char_idx": 37705, "end_char_idx": 39470, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "ddf0ce10-0729-47e3-b3a5-d88676ea7222": {"__data__": {"id_": "ddf0ce10-0729-47e3-b3a5-d88676ea7222", "embedding": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fad9b7ca-3753-40be-9d48-a1c257a322ed", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "7bee8a99ed40dfe30663a04fd7b3b331acdd71adb2be638dd1e0b4adde3ee229"}, "2": {"node_id": "2f996799-e9c2-491e-8a24-c135a8a9ba16", "node_type": null, "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}, "hash": "63c92db88a6aa4c44bbba7c44567e393dd5c0c79d8a57f1c2cd722bfa4486912"}}, "hash": "d9675d0e015814f5baeebeb98c43e6ff0fa46fab334430e08bdc0042aafed0c1", "text": "attempts to connect it will use a small amount of its cellular data plan. Since these re-attempts are likely to occur periodically, this setting should not be used to disable a device for a long or indefinite period of time.\n\nCan we improve this page? Send us feedback", "start_char_idx": 39465, "end_char_idx": 39733, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"fad9b7ca-3753-40be-9d48-a1c257a322ed": {"node_ids": ["ffc406a9-769b-4bb2-a18c-eb87332d0c5a", "f08519b9-404c-4cfd-b7e9-97a200d8e0ef", "55c3700b-5f69-4588-848c-a403588c7b48", "f8bef8b0-e70a-4ec7-bcfd-11fb4f18c42e", "a47d19b6-c47b-4ae7-aaef-748197fcf64a", "54ae54ce-8227-448b-b730-6f9496fc7633", "d9295c08-903f-4f90-8f7a-365f784f0ee6", "adfb199c-894d-402b-8df7-db5ddadc424c", "490f99f7-fa5b-4555-890a-5bba2df2cbcd", "cd1d5af9-9654-4dd4-af5d-ac4d4c84ed4c", "a1a5facb-35fe-4d75-97d8-43007b726d3d", "de6d8d76-c2a0-4f6c-b6b1-fca6d2ae5cbc", "8afd22b8-cdc3-4acb-9491-865ca299bce7", "2ed724e3-ae2d-4f10-949a-a74563b0e411", "4e5fd9a6-e90a-4d8e-be1a-3aebea8879f6", "e4ecd49d-c65e-4b35-afdc-6be3362e5563", "aee414cb-206f-4f80-b3b8-8258192c1771", "8daf60a0-badc-4e38-8175-8ce277b121ca", "67200c2b-3616-4558-af2d-0e69a7766d5a", "6b797559-d64a-4612-8a31-fca028a35925", "1bccd335-440d-4bd4-97ff-becdb21071b2", "370035b2-1558-453a-b9b2-22578333e2a1", "3dd1f002-6c8a-4f9b-98c3-9596086d1245", "2f996799-e9c2-491e-8a24-c135a8a9ba16", "ddf0ce10-0729-47e3-b3a5-d88676ea7222"], "metadata": {"title": "", "category": "Notehub Walkthrough", "url": "https://dev.blues.io/notehub/notehub-walkthrough/"}}}}